<abi-corpus version='2.1' architecture='elf-amd-x86_64' soname='libtsan.so.0'>
  <elf-needed>
    <dependency name='librt.so.1'/>
    <dependency name='libpthread.so.0'/>
    <dependency name='libdl.so.2'/>
    <dependency name='libstdc++.so.6'/>
    <dependency name='libm.so.6'/>
    <dependency name='libc.so.6'/>
    <dependency name='ld-linux-x86-64.so.2'/>
    <dependency name='libgcc_s.so.1'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- AnnotateBenignRace -->
    <elf-symbol name='AnnotateBenignRace' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateBenignRaceSized -->
    <elf-symbol name='AnnotateBenignRaceSized' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateCondVarSignal -->
    <elf-symbol name='AnnotateCondVarSignal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateCondVarSignalAll -->
    <elf-symbol name='AnnotateCondVarSignalAll' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateCondVarWait -->
    <elf-symbol name='AnnotateCondVarWait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateEnableRaceDetection -->
    <elf-symbol name='AnnotateEnableRaceDetection' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateExpectRace -->
    <elf-symbol name='AnnotateExpectRace' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateFlushExpectedRaces -->
    <elf-symbol name='AnnotateFlushExpectedRaces' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateFlushState -->
    <elf-symbol name='AnnotateFlushState' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateHappensAfter -->
    <elf-symbol name='AnnotateHappensAfter' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateHappensBefore -->
    <elf-symbol name='AnnotateHappensBefore' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreReadsBegin -->
    <elf-symbol name='AnnotateIgnoreReadsBegin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreReadsEnd -->
    <elf-symbol name='AnnotateIgnoreReadsEnd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreSyncBegin -->
    <elf-symbol name='AnnotateIgnoreSyncBegin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreSyncEnd -->
    <elf-symbol name='AnnotateIgnoreSyncEnd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreWritesBegin -->
    <elf-symbol name='AnnotateIgnoreWritesBegin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateIgnoreWritesEnd -->
    <elf-symbol name='AnnotateIgnoreWritesEnd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateMemoryIsInitialized -->
    <elf-symbol name='AnnotateMemoryIsInitialized' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateMutexIsNotPHB -->
    <elf-symbol name='AnnotateMutexIsNotPHB' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateMutexIsUsedAsCondVar -->
    <elf-symbol name='AnnotateMutexIsUsedAsCondVar' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateNewMemory -->
    <elf-symbol name='AnnotateNewMemory' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateNoOp -->
    <elf-symbol name='AnnotateNoOp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotatePCQCreate -->
    <elf-symbol name='AnnotatePCQCreate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotatePCQDestroy -->
    <elf-symbol name='AnnotatePCQDestroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotatePCQGet -->
    <elf-symbol name='AnnotatePCQGet' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotatePCQPut -->
    <elf-symbol name='AnnotatePCQPut' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotatePublishMemoryRange -->
    <elf-symbol name='AnnotatePublishMemoryRange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateRWLockAcquired -->
    <elf-symbol name='AnnotateRWLockAcquired' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateRWLockCreate -->
    <elf-symbol name='AnnotateRWLockCreate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateRWLockCreateStatic -->
    <elf-symbol name='AnnotateRWLockCreateStatic' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateRWLockDestroy -->
    <elf-symbol name='AnnotateRWLockDestroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateRWLockReleased -->
    <elf-symbol name='AnnotateRWLockReleased' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateThreadName -->
    <elf-symbol name='AnnotateThreadName' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateTraceMemory -->
    <elf-symbol name='AnnotateTraceMemory' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- AnnotateUnpublishMemoryRange -->
    <elf-symbol name='AnnotateUnpublishMemoryRange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- RunningOnValgrind -->
    <elf-symbol name='RunningOnValgrind' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ThreadSanitizerQuery -->
    <elf-symbol name='ThreadSanitizerQuery' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ValgrindSlowdown -->
    <elf-symbol name='ValgrindSlowdown' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- WTFAnnotateBenignRaceSized -->
    <elf-symbol name='WTFAnnotateBenignRaceSized' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- WTFAnnotateHappensAfter -->
    <elf-symbol name='WTFAnnotateHappensAfter' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- WTFAnnotateHappensBefore -->
    <elf-symbol name='WTFAnnotateHappensBefore' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) -->
    <elf-symbol name='_ZN11__sanitizer11CheckFailedEPKciS1_yy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer::OnPrint(char const*) -->
    <elf-symbol name='_ZN11__sanitizer7OnPrintEPKc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan::OnFinalize(bool) -->
    <elf-symbol name='_ZN6__tsan10OnFinalizeEb' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan::OnReport(__tsan::ReportDesc const*, bool) -->
    <elf-symbol name='_ZN6__tsan8OnReportEPKNS_10ReportDescEb' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator delete[](void*) -->
    <elf-symbol name='_ZdaPv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator delete[](void*, std::nothrow_t const&) -->
    <elf-symbol name='_ZdaPvRKSt9nothrow_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator delete(void*) -->
    <elf-symbol name='_ZdlPv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator delete(void*, std::nothrow_t const&) -->
    <elf-symbol name='_ZdlPvRKSt9nothrow_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator new[](unsigned long) -->
    <elf-symbol name='_Znam' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator new[](unsigned long, std::nothrow_t const&) -->
    <elf-symbol name='_ZnamRKSt9nothrow_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator new(unsigned long) -->
    <elf-symbol name='_Znwm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- operator new(unsigned long, std::nothrow_t const&) -->
    <elf-symbol name='_ZnwmRKSt9nothrow_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_alloc -->
    <elf-symbol name='__asan_backtrace_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_close -->
    <elf-symbol name='__asan_backtrace_close' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_create_state -->
    <elf-symbol name='__asan_backtrace_create_state' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_dwarf_add -->
    <elf-symbol name='__asan_backtrace_dwarf_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_free -->
    <elf-symbol name='__asan_backtrace_free' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_get_view -->
    <elf-symbol name='__asan_backtrace_get_view' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_initialize -->
    <elf-symbol name='__asan_backtrace_initialize' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_open -->
    <elf-symbol name='__asan_backtrace_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_pcinfo -->
    <elf-symbol name='__asan_backtrace_pcinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_qsort -->
    <elf-symbol name='__asan_backtrace_qsort' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_release_view -->
    <elf-symbol name='__asan_backtrace_release_view' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_syminfo -->
    <elf-symbol name='__asan_backtrace_syminfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_vector_finish -->
    <elf-symbol name='__asan_backtrace_vector_finish' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_vector_grow -->
    <elf-symbol name='__asan_backtrace_vector_grow' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_backtrace_vector_release -->
    <elf-symbol name='__asan_backtrace_vector_release' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_fill_ctor -->
    <elf-symbol name='__asan_cplus_demangle_fill_ctor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_fill_dtor -->
    <elf-symbol name='__asan_cplus_demangle_fill_dtor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_fill_extended_operator -->
    <elf-symbol name='__asan_cplus_demangle_fill_extended_operator' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_fill_name -->
    <elf-symbol name='__asan_cplus_demangle_fill_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_init_info -->
    <elf-symbol name='__asan_cplus_demangle_init_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_mangled_name -->
    <elf-symbol name='__asan_cplus_demangle_mangled_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_print -->
    <elf-symbol name='__asan_cplus_demangle_print' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_print_callback -->
    <elf-symbol name='__asan_cplus_demangle_print_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_type -->
    <elf-symbol name='__asan_cplus_demangle_type' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_v3 -->
    <elf-symbol name='__asan_cplus_demangle_v3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_v3_callback -->
    <elf-symbol name='__asan_cplus_demangle_v3_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_memcmp -->
    <elf-symbol name='__asan_internal_memcmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_memcpy -->
    <elf-symbol name='__asan_internal_memcpy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_memset -->
    <elf-symbol name='__asan_internal_memset' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_strcmp -->
    <elf-symbol name='__asan_internal_strcmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_strlen -->
    <elf-symbol name='__asan_internal_strlen' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_strncmp -->
    <elf-symbol name='__asan_internal_strncmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_internal_strnlen -->
    <elf-symbol name='__asan_internal_strnlen' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_is_gnu_v3_mangled_ctor -->
    <elf-symbol name='__asan_is_gnu_v3_mangled_ctor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_is_gnu_v3_mangled_dtor -->
    <elf-symbol name='__asan_is_gnu_v3_mangled_dtor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_java_demangle_v3 -->
    <elf-symbol name='__asan_java_demangle_v3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_java_demangle_v3_callback -->
    <elf-symbol name='__asan_java_demangle_v3_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __close -->
    <elf-symbol name='__close' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __cxa_atexit -->
    <elf-symbol name='__cxa_atexit' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __cxa_guard_abort -->
    <elf-symbol name='__cxa_guard_abort' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __cxa_guard_acquire -->
    <elf-symbol name='__cxa_guard_acquire' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __cxa_guard_release -->
    <elf-symbol name='__cxa_guard_release' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __fxstat -->
    <elf-symbol name='__fxstat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __fxstat64 -->
    <elf-symbol name='__fxstat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __interceptor___close -->
    <elf-symbol name='__interceptor___close' type='func-type' binding='global-binding' visibility='default-visibility' alias='__close' is-defined='yes'/>
    <!-- __interceptor___cxa_atexit -->
    <elf-symbol name='__interceptor___cxa_atexit' type='func-type' binding='global-binding' visibility='default-visibility' alias='__cxa_atexit' is-defined='yes'/>
    <!-- __interceptor___fxstat -->
    <elf-symbol name='__interceptor___fxstat' type='func-type' binding='global-binding' visibility='default-visibility' alias='__fxstat' is-defined='yes'/>
    <!-- __interceptor___fxstat64 -->
    <elf-symbol name='__interceptor___fxstat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='__fxstat64' is-defined='yes'/>
    <!-- __interceptor___isoc99_fscanf -->
    <elf-symbol name='__interceptor___isoc99_fscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_fscanf' is-defined='yes'/>
    <!-- __interceptor___isoc99_scanf -->
    <elf-symbol name='__interceptor___isoc99_scanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_scanf' is-defined='yes'/>
    <!-- __interceptor___isoc99_sscanf -->
    <elf-symbol name='__interceptor___isoc99_sscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_sscanf' is-defined='yes'/>
    <!-- __interceptor___isoc99_vfscanf -->
    <elf-symbol name='__interceptor___isoc99_vfscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_vfscanf' is-defined='yes'/>
    <!-- __interceptor___isoc99_vscanf -->
    <elf-symbol name='__interceptor___isoc99_vscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_vscanf' is-defined='yes'/>
    <!-- __interceptor___isoc99_vsscanf -->
    <elf-symbol name='__interceptor___isoc99_vsscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='__isoc99_vsscanf' is-defined='yes'/>
    <!-- __interceptor___libc_memalign -->
    <elf-symbol name='__interceptor___libc_memalign' type='func-type' binding='global-binding' visibility='default-visibility' alias='__libc_memalign' is-defined='yes'/>
    <!-- __interceptor___lxstat -->
    <elf-symbol name='__interceptor___lxstat' type='func-type' binding='global-binding' visibility='default-visibility' alias='__lxstat' is-defined='yes'/>
    <!-- __interceptor___lxstat64 -->
    <elf-symbol name='__interceptor___lxstat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='__lxstat64' is-defined='yes'/>
    <!-- __interceptor___res_iclose -->
    <elf-symbol name='__interceptor___res_iclose' type='func-type' binding='global-binding' visibility='default-visibility' alias='__res_iclose' is-defined='yes'/>
    <!-- __interceptor___sigsetjmp -->
    <elf-symbol name='__interceptor___sigsetjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __interceptor___xpg_strerror_r -->
    <elf-symbol name='__interceptor___xpg_strerror_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='__xpg_strerror_r' is-defined='yes'/>
    <!-- __interceptor___xstat -->
    <elf-symbol name='__interceptor___xstat' type='func-type' binding='global-binding' visibility='default-visibility' alias='__xstat' is-defined='yes'/>
    <!-- __interceptor___xstat64 -->
    <elf-symbol name='__interceptor___xstat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='__xstat64' is-defined='yes'/>
    <!-- __interceptor__exit -->
    <elf-symbol name='__interceptor__exit' type='func-type' binding='global-binding' visibility='default-visibility' alias='_exit' is-defined='yes'/>
    <!-- __interceptor__setjmp -->
    <elf-symbol name='__interceptor__setjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __interceptor_abort -->
    <elf-symbol name='__interceptor_abort' type='func-type' binding='global-binding' visibility='default-visibility' alias='abort' is-defined='yes'/>
    <!-- __interceptor_accept -->
    <elf-symbol name='__interceptor_accept' type='func-type' binding='global-binding' visibility='default-visibility' alias='accept' is-defined='yes'/>
    <!-- __interceptor_accept4 -->
    <elf-symbol name='__interceptor_accept4' type='func-type' binding='global-binding' visibility='default-visibility' alias='accept4' is-defined='yes'/>
    <!-- __interceptor_asctime -->
    <elf-symbol name='__interceptor_asctime' type='func-type' binding='global-binding' visibility='default-visibility' alias='asctime' is-defined='yes'/>
    <!-- __interceptor_asctime_r -->
    <elf-symbol name='__interceptor_asctime_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='asctime_r' is-defined='yes'/>
    <!-- __interceptor_atexit -->
    <elf-symbol name='__interceptor_atexit' type='func-type' binding='global-binding' visibility='default-visibility' alias='atexit' is-defined='yes'/>
    <!-- __interceptor_backtrace -->
    <elf-symbol name='__interceptor_backtrace' type='func-type' binding='global-binding' visibility='default-visibility' alias='backtrace' is-defined='yes'/>
    <!-- __interceptor_backtrace_symbols -->
    <elf-symbol name='__interceptor_backtrace_symbols' type='func-type' binding='global-binding' visibility='default-visibility' alias='backtrace_symbols' is-defined='yes'/>
    <!-- __interceptor_bind -->
    <elf-symbol name='__interceptor_bind' type='func-type' binding='global-binding' visibility='default-visibility' alias='bind' is-defined='yes'/>
    <!-- __interceptor_calloc -->
    <elf-symbol name='__interceptor_calloc' type='func-type' binding='global-binding' visibility='default-visibility' alias='calloc' is-defined='yes'/>
    <!-- __interceptor_canonicalize_file_name -->
    <elf-symbol name='__interceptor_canonicalize_file_name' type='func-type' binding='global-binding' visibility='default-visibility' alias='canonicalize_file_name' is-defined='yes'/>
    <!-- __interceptor_cfree -->
    <elf-symbol name='__interceptor_cfree' type='func-type' binding='global-binding' visibility='default-visibility' alias='cfree' is-defined='yes'/>
    <!-- __interceptor_clock_getres -->
    <elf-symbol name='__interceptor_clock_getres' type='func-type' binding='global-binding' visibility='default-visibility' alias='clock_getres' is-defined='yes'/>
    <!-- __interceptor_clock_gettime -->
    <elf-symbol name='__interceptor_clock_gettime' type='func-type' binding='global-binding' visibility='default-visibility' alias='clock_gettime' is-defined='yes'/>
    <!-- __interceptor_clock_settime -->
    <elf-symbol name='__interceptor_clock_settime' type='func-type' binding='global-binding' visibility='default-visibility' alias='clock_settime' is-defined='yes'/>
    <!-- __interceptor_close -->
    <elf-symbol name='__interceptor_close' type='func-type' binding='global-binding' visibility='default-visibility' alias='close' is-defined='yes'/>
    <!-- __interceptor_confstr -->
    <elf-symbol name='__interceptor_confstr' type='func-type' binding='global-binding' visibility='default-visibility' alias='confstr' is-defined='yes'/>
    <!-- __interceptor_connect -->
    <elf-symbol name='__interceptor_connect' type='func-type' binding='global-binding' visibility='default-visibility' alias='connect' is-defined='yes'/>
    <!-- __interceptor_creat -->
    <elf-symbol name='__interceptor_creat' type='func-type' binding='global-binding' visibility='default-visibility' alias='creat' is-defined='yes'/>
    <!-- __interceptor_creat64 -->
    <elf-symbol name='__interceptor_creat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='creat64' is-defined='yes'/>
    <!-- __interceptor_ctime -->
    <elf-symbol name='__interceptor_ctime' type='func-type' binding='global-binding' visibility='default-visibility' alias='ctime' is-defined='yes'/>
    <!-- __interceptor_ctime_r -->
    <elf-symbol name='__interceptor_ctime_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='ctime_r' is-defined='yes'/>
    <!-- __interceptor_dlclose -->
    <elf-symbol name='__interceptor_dlclose' type='func-type' binding='global-binding' visibility='default-visibility' alias='dlclose' is-defined='yes'/>
    <!-- __interceptor_dlopen -->
    <elf-symbol name='__interceptor_dlopen' type='func-type' binding='global-binding' visibility='default-visibility' alias='dlopen' is-defined='yes'/>
    <!-- __interceptor_drand48_r -->
    <elf-symbol name='__interceptor_drand48_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='drand48_r' is-defined='yes'/>
    <!-- __interceptor_dup -->
    <elf-symbol name='__interceptor_dup' type='func-type' binding='global-binding' visibility='default-visibility' alias='dup' is-defined='yes'/>
    <!-- __interceptor_dup2 -->
    <elf-symbol name='__interceptor_dup2' type='func-type' binding='global-binding' visibility='default-visibility' alias='dup2' is-defined='yes'/>
    <!-- __interceptor_dup3 -->
    <elf-symbol name='__interceptor_dup3' type='func-type' binding='global-binding' visibility='default-visibility' alias='dup3' is-defined='yes'/>
    <!-- __interceptor_epoll_create -->
    <elf-symbol name='__interceptor_epoll_create' type='func-type' binding='global-binding' visibility='default-visibility' alias='epoll_create' is-defined='yes'/>
    <!-- __interceptor_epoll_create1 -->
    <elf-symbol name='__interceptor_epoll_create1' type='func-type' binding='global-binding' visibility='default-visibility' alias='epoll_create1' is-defined='yes'/>
    <!-- __interceptor_epoll_ctl -->
    <elf-symbol name='__interceptor_epoll_ctl' type='func-type' binding='global-binding' visibility='default-visibility' alias='epoll_ctl' is-defined='yes'/>
    <!-- __interceptor_epoll_wait -->
    <elf-symbol name='__interceptor_epoll_wait' type='func-type' binding='global-binding' visibility='default-visibility' alias='epoll_wait' is-defined='yes'/>
    <!-- __interceptor_ether_aton -->
    <elf-symbol name='__interceptor_ether_aton' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_aton' is-defined='yes'/>
    <!-- __interceptor_ether_aton_r -->
    <elf-symbol name='__interceptor_ether_aton_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_aton_r' is-defined='yes'/>
    <!-- __interceptor_ether_hostton -->
    <elf-symbol name='__interceptor_ether_hostton' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_hostton' is-defined='yes'/>
    <!-- __interceptor_ether_line -->
    <elf-symbol name='__interceptor_ether_line' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_line' is-defined='yes'/>
    <!-- __interceptor_ether_ntoa -->
    <elf-symbol name='__interceptor_ether_ntoa' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_ntoa' is-defined='yes'/>
    <!-- __interceptor_ether_ntoa_r -->
    <elf-symbol name='__interceptor_ether_ntoa_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_ntoa_r' is-defined='yes'/>
    <!-- __interceptor_ether_ntohost -->
    <elf-symbol name='__interceptor_ether_ntohost' type='func-type' binding='global-binding' visibility='default-visibility' alias='ether_ntohost' is-defined='yes'/>
    <!-- __interceptor_eventfd -->
    <elf-symbol name='__interceptor_eventfd' type='func-type' binding='global-binding' visibility='default-visibility' alias='eventfd' is-defined='yes'/>
    <!-- __interceptor_fclose -->
    <elf-symbol name='__interceptor_fclose' type='func-type' binding='global-binding' visibility='default-visibility' alias='fclose' is-defined='yes'/>
    <!-- __interceptor_fflush -->
    <elf-symbol name='__interceptor_fflush' type='func-type' binding='global-binding' visibility='default-visibility' alias='fflush' is-defined='yes'/>
    <!-- __interceptor_fopen -->
    <elf-symbol name='__interceptor_fopen' type='func-type' binding='global-binding' visibility='default-visibility' alias='fopen' is-defined='yes'/>
    <!-- __interceptor_fork -->
    <elf-symbol name='__interceptor_fork' type='func-type' binding='global-binding' visibility='default-visibility' alias='fork' is-defined='yes'/>
    <!-- __interceptor_fread -->
    <elf-symbol name='__interceptor_fread' type='func-type' binding='global-binding' visibility='default-visibility' alias='fread' is-defined='yes'/>
    <!-- __interceptor_free -->
    <elf-symbol name='__interceptor_free' type='func-type' binding='global-binding' visibility='default-visibility' alias='free' is-defined='yes'/>
    <!-- __interceptor_freopen -->
    <elf-symbol name='__interceptor_freopen' type='func-type' binding='global-binding' visibility='default-visibility' alias='freopen' is-defined='yes'/>
    <!-- __interceptor_frexp -->
    <elf-symbol name='__interceptor_frexp' type='func-type' binding='global-binding' visibility='default-visibility' alias='frexp' is-defined='yes'/>
    <!-- __interceptor_frexpf -->
    <elf-symbol name='__interceptor_frexpf' type='func-type' binding='global-binding' visibility='default-visibility' alias='frexpf' is-defined='yes'/>
    <!-- __interceptor_frexpl -->
    <elf-symbol name='__interceptor_frexpl' type='func-type' binding='global-binding' visibility='default-visibility' alias='frexpl' is-defined='yes'/>
    <!-- __interceptor_fscanf -->
    <elf-symbol name='__interceptor_fscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='fscanf' is-defined='yes'/>
    <!-- __interceptor_fstat -->
    <elf-symbol name='__interceptor_fstat' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstat' is-defined='yes'/>
    <!-- __interceptor_fstat64 -->
    <elf-symbol name='__interceptor_fstat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstat64' is-defined='yes'/>
    <!-- __interceptor_fstatfs -->
    <elf-symbol name='__interceptor_fstatfs' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstatfs' is-defined='yes'/>
    <!-- __interceptor_fstatfs64 -->
    <elf-symbol name='__interceptor_fstatfs64' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstatfs64' is-defined='yes'/>
    <!-- __interceptor_fstatvfs -->
    <elf-symbol name='__interceptor_fstatvfs' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstatvfs' is-defined='yes'/>
    <!-- __interceptor_fstatvfs64 -->
    <elf-symbol name='__interceptor_fstatvfs64' type='func-type' binding='global-binding' visibility='default-visibility' alias='fstatvfs64' is-defined='yes'/>
    <!-- __interceptor_fwrite -->
    <elf-symbol name='__interceptor_fwrite' type='func-type' binding='global-binding' visibility='default-visibility' alias='fwrite' is-defined='yes'/>
    <!-- __interceptor_get_current_dir_name -->
    <elf-symbol name='__interceptor_get_current_dir_name' type='func-type' binding='global-binding' visibility='default-visibility' alias='get_current_dir_name' is-defined='yes'/>
    <!-- __interceptor_getaddrinfo -->
    <elf-symbol name='__interceptor_getaddrinfo' type='func-type' binding='global-binding' visibility='default-visibility' alias='getaddrinfo' is-defined='yes'/>
    <!-- __interceptor_getcwd -->
    <elf-symbol name='__interceptor_getcwd' type='func-type' binding='global-binding' visibility='default-visibility' alias='getcwd' is-defined='yes'/>
    <!-- __interceptor_getdelim -->
    <elf-symbol name='__interceptor_getdelim' type='func-type' binding='global-binding' visibility='default-visibility' alias='getdelim' is-defined='yes'/>
    <!-- __interceptor_getgroups -->
    <elf-symbol name='__interceptor_getgroups' type='func-type' binding='global-binding' visibility='default-visibility' alias='getgroups' is-defined='yes'/>
    <!-- __interceptor_gethostbyaddr -->
    <elf-symbol name='__interceptor_gethostbyaddr' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyaddr' is-defined='yes'/>
    <!-- __interceptor_gethostbyaddr_r -->
    <elf-symbol name='__interceptor_gethostbyaddr_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyaddr_r' is-defined='yes'/>
    <!-- __interceptor_gethostbyname -->
    <elf-symbol name='__interceptor_gethostbyname' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyname' is-defined='yes'/>
    <!-- __interceptor_gethostbyname2 -->
    <elf-symbol name='__interceptor_gethostbyname2' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyname2' is-defined='yes'/>
    <!-- __interceptor_gethostbyname2_r -->
    <elf-symbol name='__interceptor_gethostbyname2_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyname2_r' is-defined='yes'/>
    <!-- __interceptor_gethostbyname_r -->
    <elf-symbol name='__interceptor_gethostbyname_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostbyname_r' is-defined='yes'/>
    <!-- __interceptor_gethostent -->
    <elf-symbol name='__interceptor_gethostent' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostent' is-defined='yes'/>
    <!-- __interceptor_gethostent_r -->
    <elf-symbol name='__interceptor_gethostent_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='gethostent_r' is-defined='yes'/>
    <!-- __interceptor_getitimer -->
    <elf-symbol name='__interceptor_getitimer' type='func-type' binding='global-binding' visibility='default-visibility' alias='getitimer' is-defined='yes'/>
    <!-- __interceptor_getline -->
    <elf-symbol name='__interceptor_getline' type='func-type' binding='global-binding' visibility='default-visibility' alias='getline' is-defined='yes'/>
    <!-- __interceptor_getmntent -->
    <elf-symbol name='__interceptor_getmntent' type='func-type' binding='global-binding' visibility='default-visibility' alias='getmntent' is-defined='yes'/>
    <!-- __interceptor_getmntent_r -->
    <elf-symbol name='__interceptor_getmntent_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='getmntent_r' is-defined='yes'/>
    <!-- __interceptor_getpeername -->
    <elf-symbol name='__interceptor_getpeername' type='func-type' binding='global-binding' visibility='default-visibility' alias='getpeername' is-defined='yes'/>
    <!-- __interceptor_getsockname -->
    <elf-symbol name='__interceptor_getsockname' type='func-type' binding='global-binding' visibility='default-visibility' alias='getsockname' is-defined='yes'/>
    <!-- __interceptor_getsockopt -->
    <elf-symbol name='__interceptor_getsockopt' type='func-type' binding='global-binding' visibility='default-visibility' alias='getsockopt' is-defined='yes'/>
    <!-- __interceptor_gettimeofday -->
    <elf-symbol name='__interceptor_gettimeofday' type='func-type' binding='global-binding' visibility='default-visibility' alias='gettimeofday' is-defined='yes'/>
    <!-- __interceptor_gmtime -->
    <elf-symbol name='__interceptor_gmtime' type='func-type' binding='global-binding' visibility='default-visibility' alias='gmtime' is-defined='yes'/>
    <!-- __interceptor_gmtime_r -->
    <elf-symbol name='__interceptor_gmtime_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='gmtime_r' is-defined='yes'/>
    <!-- __interceptor_iconv -->
    <elf-symbol name='__interceptor_iconv' type='func-type' binding='global-binding' visibility='default-visibility' alias='iconv' is-defined='yes'/>
    <!-- __interceptor_inet_aton -->
    <elf-symbol name='__interceptor_inet_aton' type='func-type' binding='global-binding' visibility='default-visibility' alias='inet_aton' is-defined='yes'/>
    <!-- __interceptor_inet_ntop -->
    <elf-symbol name='__interceptor_inet_ntop' type='func-type' binding='global-binding' visibility='default-visibility' alias='inet_ntop' is-defined='yes'/>
    <!-- __interceptor_inet_pton -->
    <elf-symbol name='__interceptor_inet_pton' type='func-type' binding='global-binding' visibility='default-visibility' alias='inet_pton' is-defined='yes'/>
    <!-- __interceptor_initgroups -->
    <elf-symbol name='__interceptor_initgroups' type='func-type' binding='global-binding' visibility='default-visibility' alias='initgroups' is-defined='yes'/>
    <!-- __interceptor_inotify_init -->
    <elf-symbol name='__interceptor_inotify_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='inotify_init' is-defined='yes'/>
    <!-- __interceptor_inotify_init1 -->
    <elf-symbol name='__interceptor_inotify_init1' type='func-type' binding='global-binding' visibility='default-visibility' alias='inotify_init1' is-defined='yes'/>
    <!-- __interceptor_ioctl -->
    <elf-symbol name='__interceptor_ioctl' type='func-type' binding='global-binding' visibility='default-visibility' alias='ioctl' is-defined='yes'/>
    <!-- __interceptor_kill -->
    <elf-symbol name='__interceptor_kill' type='func-type' binding='global-binding' visibility='default-visibility' alias='kill' is-defined='yes'/>
    <!-- __interceptor_lgamma -->
    <elf-symbol name='__interceptor_lgamma' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgamma' is-defined='yes'/>
    <!-- __interceptor_lgamma_r -->
    <elf-symbol name='__interceptor_lgamma_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgamma_r' is-defined='yes'/>
    <!-- __interceptor_lgammaf -->
    <elf-symbol name='__interceptor_lgammaf' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgammaf' is-defined='yes'/>
    <!-- __interceptor_lgammaf_r -->
    <elf-symbol name='__interceptor_lgammaf_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgammaf_r' is-defined='yes'/>
    <!-- __interceptor_lgammal -->
    <elf-symbol name='__interceptor_lgammal' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgammal' is-defined='yes'/>
    <!-- __interceptor_lgammal_r -->
    <elf-symbol name='__interceptor_lgammal_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='lgammal_r' is-defined='yes'/>
    <!-- __interceptor_listen -->
    <elf-symbol name='__interceptor_listen' type='func-type' binding='global-binding' visibility='default-visibility' alias='listen' is-defined='yes'/>
    <!-- __interceptor_localtime -->
    <elf-symbol name='__interceptor_localtime' type='func-type' binding='global-binding' visibility='default-visibility' alias='localtime' is-defined='yes'/>
    <!-- __interceptor_localtime_r -->
    <elf-symbol name='__interceptor_localtime_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='localtime_r' is-defined='yes'/>
    <!-- __interceptor_longjmp -->
    <elf-symbol name='__interceptor_longjmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='longjmp' is-defined='yes'/>
    <!-- __interceptor_lrand48_r -->
    <elf-symbol name='__interceptor_lrand48_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='lrand48_r' is-defined='yes'/>
    <!-- __interceptor_lstat -->
    <elf-symbol name='__interceptor_lstat' type='func-type' binding='global-binding' visibility='default-visibility' alias='lstat' is-defined='yes'/>
    <!-- __interceptor_lstat64 -->
    <elf-symbol name='__interceptor_lstat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='lstat64' is-defined='yes'/>
    <!-- __interceptor_malloc -->
    <elf-symbol name='__interceptor_malloc' type='func-type' binding='global-binding' visibility='default-visibility' alias='malloc' is-defined='yes'/>
    <!-- __interceptor_malloc_usable_size -->
    <elf-symbol name='__interceptor_malloc_usable_size' type='func-type' binding='global-binding' visibility='default-visibility' alias='malloc_usable_size' is-defined='yes'/>
    <!-- __interceptor_mbsnrtowcs -->
    <elf-symbol name='__interceptor_mbsnrtowcs' type='func-type' binding='global-binding' visibility='default-visibility' alias='mbsnrtowcs' is-defined='yes'/>
    <!-- __interceptor_mbsrtowcs -->
    <elf-symbol name='__interceptor_mbsrtowcs' type='func-type' binding='global-binding' visibility='default-visibility' alias='mbsrtowcs' is-defined='yes'/>
    <!-- __interceptor_mbstowcs -->
    <elf-symbol name='__interceptor_mbstowcs' type='func-type' binding='global-binding' visibility='default-visibility' alias='mbstowcs' is-defined='yes'/>
    <!-- __interceptor_memalign -->
    <elf-symbol name='__interceptor_memalign' type='func-type' binding='global-binding' visibility='default-visibility' alias='memalign' is-defined='yes'/>
    <!-- __interceptor_memchr -->
    <elf-symbol name='__interceptor_memchr' type='func-type' binding='global-binding' visibility='default-visibility' alias='memchr' is-defined='yes'/>
    <!-- __interceptor_memcmp -->
    <elf-symbol name='__interceptor_memcmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='memcmp' is-defined='yes'/>
    <!-- __interceptor_memcpy -->
    <elf-symbol name='__interceptor_memcpy' type='func-type' binding='global-binding' visibility='default-visibility' alias='memcpy' is-defined='yes'/>
    <!-- __interceptor_memmove -->
    <elf-symbol name='__interceptor_memmove' type='func-type' binding='global-binding' visibility='default-visibility' alias='memmove' is-defined='yes'/>
    <!-- __interceptor_memrchr -->
    <elf-symbol name='__interceptor_memrchr' type='func-type' binding='global-binding' visibility='default-visibility' alias='memrchr' is-defined='yes'/>
    <!-- __interceptor_memset -->
    <elf-symbol name='__interceptor_memset' type='func-type' binding='global-binding' visibility='default-visibility' alias='memset' is-defined='yes'/>
    <!-- __interceptor_mlock -->
    <elf-symbol name='__interceptor_mlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='mlock' is-defined='yes'/>
    <!-- __interceptor_mlockall -->
    <elf-symbol name='__interceptor_mlockall' type='func-type' binding='global-binding' visibility='default-visibility' alias='mlockall' is-defined='yes'/>
    <!-- __interceptor_mmap -->
    <elf-symbol name='__interceptor_mmap' type='func-type' binding='global-binding' visibility='default-visibility' alias='mmap' is-defined='yes'/>
    <!-- __interceptor_mmap64 -->
    <elf-symbol name='__interceptor_mmap64' type='func-type' binding='global-binding' visibility='default-visibility' alias='mmap64' is-defined='yes'/>
    <!-- __interceptor_modf -->
    <elf-symbol name='__interceptor_modf' type='func-type' binding='global-binding' visibility='default-visibility' alias='modf' is-defined='yes'/>
    <!-- __interceptor_modff -->
    <elf-symbol name='__interceptor_modff' type='func-type' binding='global-binding' visibility='default-visibility' alias='modff' is-defined='yes'/>
    <!-- __interceptor_modfl -->
    <elf-symbol name='__interceptor_modfl' type='func-type' binding='global-binding' visibility='default-visibility' alias='modfl' is-defined='yes'/>
    <!-- __interceptor_munlock -->
    <elf-symbol name='__interceptor_munlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='munlock' is-defined='yes'/>
    <!-- __interceptor_munlockall -->
    <elf-symbol name='__interceptor_munlockall' type='func-type' binding='global-binding' visibility='default-visibility' alias='munlockall' is-defined='yes'/>
    <!-- __interceptor_munmap -->
    <elf-symbol name='__interceptor_munmap' type='func-type' binding='global-binding' visibility='default-visibility' alias='munmap' is-defined='yes'/>
    <!-- __interceptor_nanosleep -->
    <elf-symbol name='__interceptor_nanosleep' type='func-type' binding='global-binding' visibility='default-visibility' alias='nanosleep' is-defined='yes'/>
    <!-- __interceptor_on_exit -->
    <elf-symbol name='__interceptor_on_exit' type='func-type' binding='global-binding' visibility='default-visibility' alias='on_exit' is-defined='yes'/>
    <!-- __interceptor_open -->
    <elf-symbol name='__interceptor_open' type='func-type' binding='global-binding' visibility='default-visibility' alias='open' is-defined='yes'/>
    <!-- __interceptor_open64 -->
    <elf-symbol name='__interceptor_open64' type='func-type' binding='global-binding' visibility='default-visibility' alias='open64' is-defined='yes'/>
    <!-- __interceptor_opendir -->
    <elf-symbol name='__interceptor_opendir' type='func-type' binding='global-binding' visibility='default-visibility' alias='opendir' is-defined='yes'/>
    <!-- __interceptor_pipe -->
    <elf-symbol name='__interceptor_pipe' type='func-type' binding='global-binding' visibility='default-visibility' alias='pipe' is-defined='yes'/>
    <!-- __interceptor_pipe2 -->
    <elf-symbol name='__interceptor_pipe2' type='func-type' binding='global-binding' visibility='default-visibility' alias='pipe2' is-defined='yes'/>
    <!-- __interceptor_poll -->
    <elf-symbol name='__interceptor_poll' type='func-type' binding='global-binding' visibility='default-visibility' alias='poll' is-defined='yes'/>
    <!-- __interceptor_posix_memalign -->
    <elf-symbol name='__interceptor_posix_memalign' type='func-type' binding='global-binding' visibility='default-visibility' alias='posix_memalign' is-defined='yes'/>
    <!-- __interceptor_ppoll -->
    <elf-symbol name='__interceptor_ppoll' type='func-type' binding='global-binding' visibility='default-visibility' alias='ppoll' is-defined='yes'/>
    <!-- __interceptor_prctl -->
    <elf-symbol name='__interceptor_prctl' type='func-type' binding='global-binding' visibility='default-visibility' alias='prctl' is-defined='yes'/>
    <!-- __interceptor_pread -->
    <elf-symbol name='__interceptor_pread' type='func-type' binding='global-binding' visibility='default-visibility' alias='pread' is-defined='yes'/>
    <!-- __interceptor_pread64 -->
    <elf-symbol name='__interceptor_pread64' type='func-type' binding='global-binding' visibility='default-visibility' alias='pread64' is-defined='yes'/>
    <!-- __interceptor_preadv -->
    <elf-symbol name='__interceptor_preadv' type='func-type' binding='global-binding' visibility='default-visibility' alias='preadv' is-defined='yes'/>
    <!-- __interceptor_preadv64 -->
    <elf-symbol name='__interceptor_preadv64' type='func-type' binding='global-binding' visibility='default-visibility' alias='preadv64' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getaffinity_np -->
    <elf-symbol name='__interceptor_pthread_attr_getaffinity_np' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getaffinity_np' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getdetachstate -->
    <elf-symbol name='__interceptor_pthread_attr_getdetachstate' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getdetachstate' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getguardsize -->
    <elf-symbol name='__interceptor_pthread_attr_getguardsize' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getguardsize' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getinheritsched -->
    <elf-symbol name='__interceptor_pthread_attr_getinheritsched' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getinheritsched' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getschedparam -->
    <elf-symbol name='__interceptor_pthread_attr_getschedparam' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getschedparam' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getschedpolicy -->
    <elf-symbol name='__interceptor_pthread_attr_getschedpolicy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getschedpolicy' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getscope -->
    <elf-symbol name='__interceptor_pthread_attr_getscope' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getscope' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getstack -->
    <elf-symbol name='__interceptor_pthread_attr_getstack' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getstack' is-defined='yes'/>
    <!-- __interceptor_pthread_attr_getstacksize -->
    <elf-symbol name='__interceptor_pthread_attr_getstacksize' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_attr_getstacksize' is-defined='yes'/>
    <!-- __interceptor_pthread_barrier_destroy -->
    <elf-symbol name='__interceptor_pthread_barrier_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_barrier_destroy' is-defined='yes'/>
    <!-- __interceptor_pthread_barrier_init -->
    <elf-symbol name='__interceptor_pthread_barrier_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_barrier_init' is-defined='yes'/>
    <!-- __interceptor_pthread_barrier_wait -->
    <elf-symbol name='__interceptor_pthread_barrier_wait' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_barrier_wait' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_broadcast -->
    <elf-symbol name='__interceptor_pthread_cond_broadcast' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_broadcast' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_destroy -->
    <elf-symbol name='__interceptor_pthread_cond_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_destroy' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_init -->
    <elf-symbol name='__interceptor_pthread_cond_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_init' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_signal -->
    <elf-symbol name='__interceptor_pthread_cond_signal' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_signal' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_timedwait -->
    <elf-symbol name='__interceptor_pthread_cond_timedwait' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_timedwait' is-defined='yes'/>
    <!-- __interceptor_pthread_cond_wait -->
    <elf-symbol name='__interceptor_pthread_cond_wait' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_cond_wait' is-defined='yes'/>
    <!-- __interceptor_pthread_create -->
    <elf-symbol name='__interceptor_pthread_create' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_create' is-defined='yes'/>
    <!-- __interceptor_pthread_detach -->
    <elf-symbol name='__interceptor_pthread_detach' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_detach' is-defined='yes'/>
    <!-- __interceptor_pthread_getschedparam -->
    <elf-symbol name='__interceptor_pthread_getschedparam' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_getschedparam' is-defined='yes'/>
    <!-- __interceptor_pthread_join -->
    <elf-symbol name='__interceptor_pthread_join' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_join' is-defined='yes'/>
    <!-- __interceptor_pthread_kill -->
    <elf-symbol name='__interceptor_pthread_kill' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_kill' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_destroy -->
    <elf-symbol name='__interceptor_pthread_mutex_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_destroy' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_init -->
    <elf-symbol name='__interceptor_pthread_mutex_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_init' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_lock -->
    <elf-symbol name='__interceptor_pthread_mutex_lock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_lock' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_timedlock -->
    <elf-symbol name='__interceptor_pthread_mutex_timedlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_timedlock' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_trylock -->
    <elf-symbol name='__interceptor_pthread_mutex_trylock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_trylock' is-defined='yes'/>
    <!-- __interceptor_pthread_mutex_unlock -->
    <elf-symbol name='__interceptor_pthread_mutex_unlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_mutex_unlock' is-defined='yes'/>
    <!-- __interceptor_pthread_once -->
    <elf-symbol name='__interceptor_pthread_once' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_once' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_destroy -->
    <elf-symbol name='__interceptor_pthread_rwlock_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_destroy' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_init -->
    <elf-symbol name='__interceptor_pthread_rwlock_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_init' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_rdlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_rdlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_rdlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_timedrdlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_timedrdlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_timedrdlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_timedwrlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_timedwrlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_timedwrlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_tryrdlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_tryrdlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_tryrdlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_trywrlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_trywrlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_trywrlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_unlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_unlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_unlock' is-defined='yes'/>
    <!-- __interceptor_pthread_rwlock_wrlock -->
    <elf-symbol name='__interceptor_pthread_rwlock_wrlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_rwlock_wrlock' is-defined='yes'/>
    <!-- __interceptor_pthread_setname_np -->
    <elf-symbol name='__interceptor_pthread_setname_np' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_setname_np' is-defined='yes'/>
    <!-- __interceptor_pthread_spin_destroy -->
    <elf-symbol name='__interceptor_pthread_spin_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_spin_destroy' is-defined='yes'/>
    <!-- __interceptor_pthread_spin_init -->
    <elf-symbol name='__interceptor_pthread_spin_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_spin_init' is-defined='yes'/>
    <!-- __interceptor_pthread_spin_lock -->
    <elf-symbol name='__interceptor_pthread_spin_lock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_spin_lock' is-defined='yes'/>
    <!-- __interceptor_pthread_spin_trylock -->
    <elf-symbol name='__interceptor_pthread_spin_trylock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_spin_trylock' is-defined='yes'/>
    <!-- __interceptor_pthread_spin_unlock -->
    <elf-symbol name='__interceptor_pthread_spin_unlock' type='func-type' binding='global-binding' visibility='default-visibility' alias='pthread_spin_unlock' is-defined='yes'/>
    <!-- __interceptor_ptrace -->
    <elf-symbol name='__interceptor_ptrace' type='func-type' binding='global-binding' visibility='default-visibility' alias='ptrace' is-defined='yes'/>
    <!-- __interceptor_puts -->
    <elf-symbol name='__interceptor_puts' type='func-type' binding='global-binding' visibility='default-visibility' alias='puts' is-defined='yes'/>
    <!-- __interceptor_pvalloc -->
    <elf-symbol name='__interceptor_pvalloc' type='func-type' binding='global-binding' visibility='default-visibility' alias='pvalloc' is-defined='yes'/>
    <!-- __interceptor_pwrite -->
    <elf-symbol name='__interceptor_pwrite' type='func-type' binding='global-binding' visibility='default-visibility' alias='pwrite' is-defined='yes'/>
    <!-- __interceptor_pwrite64 -->
    <elf-symbol name='__interceptor_pwrite64' type='func-type' binding='global-binding' visibility='default-visibility' alias='pwrite64' is-defined='yes'/>
    <!-- __interceptor_pwritev -->
    <elf-symbol name='__interceptor_pwritev' type='func-type' binding='global-binding' visibility='default-visibility' alias='pwritev' is-defined='yes'/>
    <!-- __interceptor_pwritev64 -->
    <elf-symbol name='__interceptor_pwritev64' type='func-type' binding='global-binding' visibility='default-visibility' alias='pwritev64' is-defined='yes'/>
    <!-- __interceptor_raise -->
    <elf-symbol name='__interceptor_raise' type='func-type' binding='global-binding' visibility='default-visibility' alias='raise' is-defined='yes'/>
    <!-- __interceptor_random_r -->
    <elf-symbol name='__interceptor_random_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='random_r' is-defined='yes'/>
    <!-- __interceptor_read -->
    <elf-symbol name='__interceptor_read' type='func-type' binding='global-binding' visibility='default-visibility' alias='read' is-defined='yes'/>
    <!-- __interceptor_readdir -->
    <elf-symbol name='__interceptor_readdir' type='func-type' binding='global-binding' visibility='default-visibility' alias='readdir' is-defined='yes'/>
    <!-- __interceptor_readdir64 -->
    <elf-symbol name='__interceptor_readdir64' type='func-type' binding='global-binding' visibility='default-visibility' alias='readdir64' is-defined='yes'/>
    <!-- __interceptor_readdir64_r -->
    <elf-symbol name='__interceptor_readdir64_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='readdir64_r' is-defined='yes'/>
    <!-- __interceptor_readdir_r -->
    <elf-symbol name='__interceptor_readdir_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='readdir_r' is-defined='yes'/>
    <!-- __interceptor_readv -->
    <elf-symbol name='__interceptor_readv' type='func-type' binding='global-binding' visibility='default-visibility' alias='readv' is-defined='yes'/>
    <!-- __interceptor_realloc -->
    <elf-symbol name='__interceptor_realloc' type='func-type' binding='global-binding' visibility='default-visibility' alias='realloc' is-defined='yes'/>
    <!-- __interceptor_realpath -->
    <elf-symbol name='__interceptor_realpath' type='func-type' binding='global-binding' visibility='default-visibility' alias='realpath' is-defined='yes'/>
    <!-- __interceptor_recv -->
    <elf-symbol name='__interceptor_recv' type='func-type' binding='global-binding' visibility='default-visibility' alias='recv' is-defined='yes'/>
    <!-- __interceptor_recvmsg -->
    <elf-symbol name='__interceptor_recvmsg' type='func-type' binding='global-binding' visibility='default-visibility' alias='recvmsg' is-defined='yes'/>
    <!-- __interceptor_remquo -->
    <elf-symbol name='__interceptor_remquo' type='func-type' binding='global-binding' visibility='default-visibility' alias='remquo' is-defined='yes'/>
    <!-- __interceptor_remquof -->
    <elf-symbol name='__interceptor_remquof' type='func-type' binding='global-binding' visibility='default-visibility' alias='remquof' is-defined='yes'/>
    <!-- __interceptor_remquol -->
    <elf-symbol name='__interceptor_remquol' type='func-type' binding='global-binding' visibility='default-visibility' alias='remquol' is-defined='yes'/>
    <!-- __interceptor_rmdir -->
    <elf-symbol name='__interceptor_rmdir' type='func-type' binding='global-binding' visibility='default-visibility' alias='rmdir' is-defined='yes'/>
    <!-- __interceptor_scandir -->
    <elf-symbol name='__interceptor_scandir' type='func-type' binding='global-binding' visibility='default-visibility' alias='scandir' is-defined='yes'/>
    <!-- __interceptor_scandir64 -->
    <elf-symbol name='__interceptor_scandir64' type='func-type' binding='global-binding' visibility='default-visibility' alias='scandir64' is-defined='yes'/>
    <!-- __interceptor_scanf -->
    <elf-symbol name='__interceptor_scanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='scanf' is-defined='yes'/>
    <!-- __interceptor_sched_getaffinity -->
    <elf-symbol name='__interceptor_sched_getaffinity' type='func-type' binding='global-binding' visibility='default-visibility' alias='sched_getaffinity' is-defined='yes'/>
    <!-- __interceptor_sem_destroy -->
    <elf-symbol name='__interceptor_sem_destroy' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_destroy' is-defined='yes'/>
    <!-- __interceptor_sem_getvalue -->
    <elf-symbol name='__interceptor_sem_getvalue' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_getvalue' is-defined='yes'/>
    <!-- __interceptor_sem_init -->
    <elf-symbol name='__interceptor_sem_init' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_init' is-defined='yes'/>
    <!-- __interceptor_sem_post -->
    <elf-symbol name='__interceptor_sem_post' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_post' is-defined='yes'/>
    <!-- __interceptor_sem_timedwait -->
    <elf-symbol name='__interceptor_sem_timedwait' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_timedwait' is-defined='yes'/>
    <!-- __interceptor_sem_trywait -->
    <elf-symbol name='__interceptor_sem_trywait' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_trywait' is-defined='yes'/>
    <!-- __interceptor_sem_wait -->
    <elf-symbol name='__interceptor_sem_wait' type='func-type' binding='global-binding' visibility='default-visibility' alias='sem_wait' is-defined='yes'/>
    <!-- __interceptor_send -->
    <elf-symbol name='__interceptor_send' type='func-type' binding='global-binding' visibility='default-visibility' alias='send' is-defined='yes'/>
    <!-- __interceptor_sendmsg -->
    <elf-symbol name='__interceptor_sendmsg' type='func-type' binding='global-binding' visibility='default-visibility' alias='sendmsg' is-defined='yes'/>
    <!-- __interceptor_setitimer -->
    <elf-symbol name='__interceptor_setitimer' type='func-type' binding='global-binding' visibility='default-visibility' alias='setitimer' is-defined='yes'/>
    <!-- __interceptor_setjmp -->
    <elf-symbol name='__interceptor_setjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __interceptor_setlocale -->
    <elf-symbol name='__interceptor_setlocale' type='func-type' binding='global-binding' visibility='default-visibility' alias='setlocale' is-defined='yes'/>
    <!-- __interceptor_shmctl -->
    <elf-symbol name='__interceptor_shmctl' type='func-type' binding='global-binding' visibility='default-visibility' alias='shmctl' is-defined='yes'/>
    <!-- __interceptor_sigaction -->
    <elf-symbol name='__interceptor_sigaction' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigaction' is-defined='yes'/>
    <!-- __interceptor_sigemptyset -->
    <elf-symbol name='__interceptor_sigemptyset' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigemptyset' is-defined='yes'/>
    <!-- __interceptor_sigfillset -->
    <elf-symbol name='__interceptor_sigfillset' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigfillset' is-defined='yes'/>
    <!-- __interceptor_siglongjmp -->
    <elf-symbol name='__interceptor_siglongjmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='siglongjmp' is-defined='yes'/>
    <!-- __interceptor_signal -->
    <elf-symbol name='__interceptor_signal' type='func-type' binding='global-binding' visibility='default-visibility' alias='signal' is-defined='yes'/>
    <!-- __interceptor_signalfd -->
    <elf-symbol name='__interceptor_signalfd' type='func-type' binding='global-binding' visibility='default-visibility' alias='signalfd' is-defined='yes'/>
    <!-- __interceptor_sigpending -->
    <elf-symbol name='__interceptor_sigpending' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigpending' is-defined='yes'/>
    <!-- __interceptor_sigprocmask -->
    <elf-symbol name='__interceptor_sigprocmask' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigprocmask' is-defined='yes'/>
    <!-- __interceptor_sigsetjmp -->
    <elf-symbol name='__interceptor_sigsetjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __interceptor_sigsuspend -->
    <elf-symbol name='__interceptor_sigsuspend' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigsuspend' is-defined='yes'/>
    <!-- __interceptor_sigtimedwait -->
    <elf-symbol name='__interceptor_sigtimedwait' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigtimedwait' is-defined='yes'/>
    <!-- __interceptor_sigwait -->
    <elf-symbol name='__interceptor_sigwait' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigwait' is-defined='yes'/>
    <!-- __interceptor_sigwaitinfo -->
    <elf-symbol name='__interceptor_sigwaitinfo' type='func-type' binding='global-binding' visibility='default-visibility' alias='sigwaitinfo' is-defined='yes'/>
    <!-- __interceptor_sincos -->
    <elf-symbol name='__interceptor_sincos' type='func-type' binding='global-binding' visibility='default-visibility' alias='sincos' is-defined='yes'/>
    <!-- __interceptor_sincosf -->
    <elf-symbol name='__interceptor_sincosf' type='func-type' binding='global-binding' visibility='default-visibility' alias='sincosf' is-defined='yes'/>
    <!-- __interceptor_sincosl -->
    <elf-symbol name='__interceptor_sincosl' type='func-type' binding='global-binding' visibility='default-visibility' alias='sincosl' is-defined='yes'/>
    <!-- __interceptor_sleep -->
    <elf-symbol name='__interceptor_sleep' type='func-type' binding='global-binding' visibility='default-visibility' alias='sleep' is-defined='yes'/>
    <!-- __interceptor_socket -->
    <elf-symbol name='__interceptor_socket' type='func-type' binding='global-binding' visibility='default-visibility' alias='socket' is-defined='yes'/>
    <!-- __interceptor_socketpair -->
    <elf-symbol name='__interceptor_socketpair' type='func-type' binding='global-binding' visibility='default-visibility' alias='socketpair' is-defined='yes'/>
    <!-- __interceptor_sscanf -->
    <elf-symbol name='__interceptor_sscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='sscanf' is-defined='yes'/>
    <!-- __interceptor_stat -->
    <elf-symbol name='__interceptor_stat' type='func-type' binding='global-binding' visibility='default-visibility' alias='stat' is-defined='yes'/>
    <!-- __interceptor_stat64 -->
    <elf-symbol name='__interceptor_stat64' type='func-type' binding='global-binding' visibility='default-visibility' alias='stat64' is-defined='yes'/>
    <!-- __interceptor_statfs -->
    <elf-symbol name='__interceptor_statfs' type='func-type' binding='global-binding' visibility='default-visibility' alias='statfs' is-defined='yes'/>
    <!-- __interceptor_statfs64 -->
    <elf-symbol name='__interceptor_statfs64' type='func-type' binding='global-binding' visibility='default-visibility' alias='statfs64' is-defined='yes'/>
    <!-- __interceptor_statvfs -->
    <elf-symbol name='__interceptor_statvfs' type='func-type' binding='global-binding' visibility='default-visibility' alias='statvfs' is-defined='yes'/>
    <!-- __interceptor_statvfs64 -->
    <elf-symbol name='__interceptor_statvfs64' type='func-type' binding='global-binding' visibility='default-visibility' alias='statvfs64' is-defined='yes'/>
    <!-- __interceptor_strcasecmp -->
    <elf-symbol name='__interceptor_strcasecmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='strcasecmp' is-defined='yes'/>
    <!-- __interceptor_strchr -->
    <elf-symbol name='__interceptor_strchr' type='func-type' binding='global-binding' visibility='default-visibility' alias='strchr' is-defined='yes'/>
    <!-- __interceptor_strchrnul -->
    <elf-symbol name='__interceptor_strchrnul' type='func-type' binding='global-binding' visibility='default-visibility' alias='strchrnul' is-defined='yes'/>
    <!-- __interceptor_strcmp -->
    <elf-symbol name='__interceptor_strcmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='strcmp' is-defined='yes'/>
    <!-- __interceptor_strcpy -->
    <elf-symbol name='__interceptor_strcpy' type='func-type' binding='global-binding' visibility='default-visibility' alias='strcpy' is-defined='yes'/>
    <!-- __interceptor_strdup -->
    <elf-symbol name='__interceptor_strdup' type='func-type' binding='global-binding' visibility='default-visibility' alias='strdup' is-defined='yes'/>
    <!-- __interceptor_strerror -->
    <elf-symbol name='__interceptor_strerror' type='func-type' binding='global-binding' visibility='default-visibility' alias='strerror' is-defined='yes'/>
    <!-- __interceptor_strerror_r -->
    <elf-symbol name='__interceptor_strerror_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='strerror_r' is-defined='yes'/>
    <!-- __interceptor_strlen -->
    <elf-symbol name='__interceptor_strlen' type='func-type' binding='global-binding' visibility='default-visibility' alias='strlen' is-defined='yes'/>
    <!-- __interceptor_strncasecmp -->
    <elf-symbol name='__interceptor_strncasecmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='strncasecmp' is-defined='yes'/>
    <!-- __interceptor_strncmp -->
    <elf-symbol name='__interceptor_strncmp' type='func-type' binding='global-binding' visibility='default-visibility' alias='strncmp' is-defined='yes'/>
    <!-- __interceptor_strncpy -->
    <elf-symbol name='__interceptor_strncpy' type='func-type' binding='global-binding' visibility='default-visibility' alias='strncpy' is-defined='yes'/>
    <!-- __interceptor_strptime -->
    <elf-symbol name='__interceptor_strptime' type='func-type' binding='global-binding' visibility='default-visibility' alias='strptime' is-defined='yes'/>
    <!-- __interceptor_strrchr -->
    <elf-symbol name='__interceptor_strrchr' type='func-type' binding='global-binding' visibility='default-visibility' alias='strrchr' is-defined='yes'/>
    <!-- __interceptor_strstr -->
    <elf-symbol name='__interceptor_strstr' type='func-type' binding='global-binding' visibility='default-visibility' alias='strstr' is-defined='yes'/>
    <!-- __interceptor_strtoimax -->
    <elf-symbol name='__interceptor_strtoimax' type='func-type' binding='global-binding' visibility='default-visibility' alias='strtoimax' is-defined='yes'/>
    <!-- __interceptor_strtoumax -->
    <elf-symbol name='__interceptor_strtoumax' type='func-type' binding='global-binding' visibility='default-visibility' alias='strtoumax' is-defined='yes'/>
    <!-- __interceptor_sysinfo -->
    <elf-symbol name='__interceptor_sysinfo' type='func-type' binding='global-binding' visibility='default-visibility' alias='sysinfo' is-defined='yes'/>
    <!-- __interceptor_tcgetattr -->
    <elf-symbol name='__interceptor_tcgetattr' type='func-type' binding='global-binding' visibility='default-visibility' alias='tcgetattr' is-defined='yes'/>
    <!-- __interceptor_tempnam -->
    <elf-symbol name='__interceptor_tempnam' type='func-type' binding='global-binding' visibility='default-visibility' alias='tempnam' is-defined='yes'/>
    <!-- __interceptor_textdomain -->
    <elf-symbol name='__interceptor_textdomain' type='func-type' binding='global-binding' visibility='default-visibility' alias='textdomain' is-defined='yes'/>
    <!-- __interceptor_time -->
    <elf-symbol name='__interceptor_time' type='func-type' binding='global-binding' visibility='default-visibility' alias='time' is-defined='yes'/>
    <!-- __interceptor_times -->
    <elf-symbol name='__interceptor_times' type='func-type' binding='global-binding' visibility='default-visibility' alias='times' is-defined='yes'/>
    <!-- __interceptor_tmpnam -->
    <elf-symbol name='__interceptor_tmpnam' type='func-type' binding='global-binding' visibility='default-visibility' alias='tmpnam' is-defined='yes'/>
    <!-- __interceptor_tmpnam_r -->
    <elf-symbol name='__interceptor_tmpnam_r' type='func-type' binding='global-binding' visibility='default-visibility' alias='tmpnam_r' is-defined='yes'/>
    <!-- __interceptor_unlink -->
    <elf-symbol name='__interceptor_unlink' type='func-type' binding='global-binding' visibility='default-visibility' alias='unlink' is-defined='yes'/>
    <!-- __interceptor_usleep -->
    <elf-symbol name='__interceptor_usleep' type='func-type' binding='global-binding' visibility='default-visibility' alias='usleep' is-defined='yes'/>
    <!-- __interceptor_valloc -->
    <elf-symbol name='__interceptor_valloc' type='func-type' binding='global-binding' visibility='default-visibility' alias='valloc' is-defined='yes'/>
    <!-- __interceptor_vfscanf -->
    <elf-symbol name='__interceptor_vfscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='vfscanf' is-defined='yes'/>
    <!-- __interceptor_vscanf -->
    <elf-symbol name='__interceptor_vscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='vscanf' is-defined='yes'/>
    <!-- __interceptor_vsscanf -->
    <elf-symbol name='__interceptor_vsscanf' type='func-type' binding='global-binding' visibility='default-visibility' alias='vsscanf' is-defined='yes'/>
    <!-- __interceptor_wait -->
    <elf-symbol name='__interceptor_wait' type='func-type' binding='global-binding' visibility='default-visibility' alias='wait' is-defined='yes'/>
    <!-- __interceptor_wait3 -->
    <elf-symbol name='__interceptor_wait3' type='func-type' binding='global-binding' visibility='default-visibility' alias='wait3' is-defined='yes'/>
    <!-- __interceptor_wait4 -->
    <elf-symbol name='__interceptor_wait4' type='func-type' binding='global-binding' visibility='default-visibility' alias='wait4' is-defined='yes'/>
    <!-- __interceptor_waitid -->
    <elf-symbol name='__interceptor_waitid' type='func-type' binding='global-binding' visibility='default-visibility' alias='waitid' is-defined='yes'/>
    <!-- __interceptor_waitpid -->
    <elf-symbol name='__interceptor_waitpid' type='func-type' binding='global-binding' visibility='default-visibility' alias='waitpid' is-defined='yes'/>
    <!-- __interceptor_wcsnrtombs -->
    <elf-symbol name='__interceptor_wcsnrtombs' type='func-type' binding='global-binding' visibility='default-visibility' alias='wcsnrtombs' is-defined='yes'/>
    <!-- __interceptor_wcsrtombs -->
    <elf-symbol name='__interceptor_wcsrtombs' type='func-type' binding='global-binding' visibility='default-visibility' alias='wcsrtombs' is-defined='yes'/>
    <!-- __interceptor_wcstombs -->
    <elf-symbol name='__interceptor_wcstombs' type='func-type' binding='global-binding' visibility='default-visibility' alias='wcstombs' is-defined='yes'/>
    <!-- __interceptor_wordexp -->
    <elf-symbol name='__interceptor_wordexp' type='func-type' binding='global-binding' visibility='default-visibility' alias='wordexp' is-defined='yes'/>
    <!-- __interceptor_write -->
    <elf-symbol name='__interceptor_write' type='func-type' binding='global-binding' visibility='default-visibility' alias='write' is-defined='yes'/>
    <!-- __interceptor_writev -->
    <elf-symbol name='__interceptor_writev' type='func-type' binding='global-binding' visibility='default-visibility' alias='writev' is-defined='yes'/>
    <!-- __isoc99_fscanf -->
    <elf-symbol name='__isoc99_fscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __isoc99_scanf -->
    <elf-symbol name='__isoc99_scanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __isoc99_sscanf -->
    <elf-symbol name='__isoc99_sscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __isoc99_vfscanf -->
    <elf-symbol name='__isoc99_vfscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __isoc99_vscanf -->
    <elf-symbol name='__isoc99_vscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __isoc99_vsscanf -->
    <elf-symbol name='__isoc99_vsscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __libc_memalign -->
    <elf-symbol name='__libc_memalign' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __lxstat -->
    <elf-symbol name='__lxstat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __lxstat64 -->
    <elf-symbol name='__lxstat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __res_iclose -->
    <elf-symbol name='__res_iclose' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_cov -->
    <elf-symbol name='__sanitizer_cov' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_cov_dump -->
    <elf-symbol name='__sanitizer_cov_dump' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_report_error_summary -->
    <elf-symbol name='__sanitizer_report_error_summary' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_sandbox_on_notify -->
    <elf-symbol name='__sanitizer_sandbox_on_notify' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_set_report_path -->
    <elf-symbol name='__sanitizer_set_report_path' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_accept -->
    <elf-symbol name='__sanitizer_syscall_post_impl_accept' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_accept4 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_accept4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_access -->
    <elf-symbol name='__sanitizer_syscall_post_impl_access' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_acct -->
    <elf-symbol name='__sanitizer_syscall_post_impl_acct' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_add_key -->
    <elf-symbol name='__sanitizer_syscall_post_impl_add_key' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_adjtimex -->
    <elf-symbol name='__sanitizer_syscall_post_impl_adjtimex' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_alarm -->
    <elf-symbol name='__sanitizer_syscall_post_impl_alarm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_bdflush -->
    <elf-symbol name='__sanitizer_syscall_post_impl_bdflush' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_bind -->
    <elf-symbol name='__sanitizer_syscall_post_impl_bind' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_brk -->
    <elf-symbol name='__sanitizer_syscall_post_impl_brk' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_capget -->
    <elf-symbol name='__sanitizer_syscall_post_impl_capget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_capset -->
    <elf-symbol name='__sanitizer_syscall_post_impl_capset' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_chdir -->
    <elf-symbol name='__sanitizer_syscall_post_impl_chdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_chmod -->
    <elf-symbol name='__sanitizer_syscall_post_impl_chmod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_chown -->
    <elf-symbol name='__sanitizer_syscall_post_impl_chown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_chown16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_chown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_chroot -->
    <elf-symbol name='__sanitizer_syscall_post_impl_chroot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_clock_adjtime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_clock_adjtime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_clock_getres -->
    <elf-symbol name='__sanitizer_syscall_post_impl_clock_getres' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_clock_gettime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_clock_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_clock_nanosleep -->
    <elf-symbol name='__sanitizer_syscall_post_impl_clock_nanosleep' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_clock_settime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_clock_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_close -->
    <elf-symbol name='__sanitizer_syscall_post_impl_close' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_connect -->
    <elf-symbol name='__sanitizer_syscall_post_impl_connect' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_creat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_creat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_delete_module -->
    <elf-symbol name='__sanitizer_syscall_post_impl_delete_module' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_dup -->
    <elf-symbol name='__sanitizer_syscall_post_impl_dup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_dup2 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_dup2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_dup3 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_dup3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_epoll_create -->
    <elf-symbol name='__sanitizer_syscall_post_impl_epoll_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_epoll_create1 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_epoll_create1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_epoll_ctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_epoll_ctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_epoll_pwait -->
    <elf-symbol name='__sanitizer_syscall_post_impl_epoll_pwait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_epoll_wait -->
    <elf-symbol name='__sanitizer_syscall_post_impl_epoll_wait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_eventfd -->
    <elf-symbol name='__sanitizer_syscall_post_impl_eventfd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_eventfd2 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_eventfd2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_exit -->
    <elf-symbol name='__sanitizer_syscall_post_impl_exit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_exit_group -->
    <elf-symbol name='__sanitizer_syscall_post_impl_exit_group' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_faccessat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_faccessat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchdir -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchmod -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchmod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchmodat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchmodat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchown -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchown16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fchownat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fchownat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fcntl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fcntl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fcntl64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fcntl64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fdatasync -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fdatasync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fgetxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fgetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_flistxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_flistxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_flock -->
    <elf-symbol name='__sanitizer_syscall_post_impl_flock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fork -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fork' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fremovexattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fremovexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fsetxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fsetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fstat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fstat64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fstat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fstatat64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fstatat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fstatfs -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fstatfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fstatfs64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fstatfs64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_fsync -->
    <elf-symbol name='__sanitizer_syscall_post_impl_fsync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ftruncate -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ftruncate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_futimesat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_futimesat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_get_mempolicy -->
    <elf-symbol name='__sanitizer_syscall_post_impl_get_mempolicy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_get_robust_list -->
    <elf-symbol name='__sanitizer_syscall_post_impl_get_robust_list' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getcpu -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getcpu' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getcwd -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getcwd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getdents -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getdents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getdents64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getdents64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getegid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getegid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getegid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getegid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_geteuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_geteuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_geteuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_geteuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getgid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getgroups -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getgroups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getgroups16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getgroups16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_gethostname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_gethostname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getitimer -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getitimer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getpeername -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getpeername' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getpgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getpgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getpgrp -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getpgrp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getpid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getpid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getppid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getppid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getpriority -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getpriority' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getresgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getresgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getresgid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getresgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getresuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getresuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getresuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getresuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getrlimit -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getrusage -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getrusage' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getsid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getsid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getsockname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getsockname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getsockopt -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getsockopt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_gettid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_gettid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_gettimeofday -->
    <elf-symbol name='__sanitizer_syscall_post_impl_gettimeofday' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_getxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_getxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_init_module -->
    <elf-symbol name='__sanitizer_syscall_post_impl_init_module' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_inotify_add_watch -->
    <elf-symbol name='__sanitizer_syscall_post_impl_inotify_add_watch' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_inotify_init -->
    <elf-symbol name='__sanitizer_syscall_post_impl_inotify_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_inotify_init1 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_inotify_init1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_inotify_rm_watch -->
    <elf-symbol name='__sanitizer_syscall_post_impl_inotify_rm_watch' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_io_cancel -->
    <elf-symbol name='__sanitizer_syscall_post_impl_io_cancel' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_io_destroy -->
    <elf-symbol name='__sanitizer_syscall_post_impl_io_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_io_getevents -->
    <elf-symbol name='__sanitizer_syscall_post_impl_io_getevents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_io_setup -->
    <elf-symbol name='__sanitizer_syscall_post_impl_io_setup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_io_submit -->
    <elf-symbol name='__sanitizer_syscall_post_impl_io_submit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ioctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ioctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ioperm -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ioperm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ioprio_get -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ioprio_get' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ioprio_set -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ioprio_set' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ipc -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ipc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_kexec_load -->
    <elf-symbol name='__sanitizer_syscall_post_impl_kexec_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_keyctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_keyctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_kill -->
    <elf-symbol name='__sanitizer_syscall_post_impl_kill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lchown -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lchown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lchown16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lchown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lgetxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lgetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_link -->
    <elf-symbol name='__sanitizer_syscall_post_impl_link' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_linkat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_linkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_listen -->
    <elf-symbol name='__sanitizer_syscall_post_impl_listen' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_listxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_listxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_llistxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_llistxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_llseek -->
    <elf-symbol name='__sanitizer_syscall_post_impl_llseek' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lookup_dcookie -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lookup_dcookie' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lremovexattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lremovexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lseek -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lseek' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lsetxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lsetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lstat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_lstat64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_lstat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_madvise -->
    <elf-symbol name='__sanitizer_syscall_post_impl_madvise' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mbind -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mbind' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_migrate_pages -->
    <elf-symbol name='__sanitizer_syscall_post_impl_migrate_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mincore -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mincore' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mkdir -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mkdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mkdirat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mkdirat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mknod -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mknod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mknodat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mknodat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mlock -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mlockall -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mlockall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mmap_pgoff -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mmap_pgoff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mount -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_move_pages -->
    <elf-symbol name='__sanitizer_syscall_post_impl_move_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mprotect -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mprotect' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_getsetattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_getsetattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_notify -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_notify' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_open -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_timedreceive -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_timedreceive' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_timedsend -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_timedsend' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mq_unlink -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mq_unlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_mremap -->
    <elf-symbol name='__sanitizer_syscall_post_impl_mremap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_msgctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_msgctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_msgget -->
    <elf-symbol name='__sanitizer_syscall_post_impl_msgget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_msgrcv -->
    <elf-symbol name='__sanitizer_syscall_post_impl_msgrcv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_msgsnd -->
    <elf-symbol name='__sanitizer_syscall_post_impl_msgsnd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_msync -->
    <elf-symbol name='__sanitizer_syscall_post_impl_msync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_munlock -->
    <elf-symbol name='__sanitizer_syscall_post_impl_munlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_munlockall -->
    <elf-symbol name='__sanitizer_syscall_post_impl_munlockall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_munmap -->
    <elf-symbol name='__sanitizer_syscall_post_impl_munmap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_name_to_handle_at -->
    <elf-symbol name='__sanitizer_syscall_post_impl_name_to_handle_at' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_nanosleep -->
    <elf-symbol name='__sanitizer_syscall_post_impl_nanosleep' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_newfstat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_newfstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_newfstatat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_newfstatat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_newlstat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_newlstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_newstat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_newstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_newuname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_newuname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ni_syscall -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ni_syscall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_nice -->
    <elf-symbol name='__sanitizer_syscall_post_impl_nice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_old_getrlimit -->
    <elf-symbol name='__sanitizer_syscall_post_impl_old_getrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_old_mmap -->
    <elf-symbol name='__sanitizer_syscall_post_impl_old_mmap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_old_readdir -->
    <elf-symbol name='__sanitizer_syscall_post_impl_old_readdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_old_select -->
    <elf-symbol name='__sanitizer_syscall_post_impl_old_select' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_oldumount -->
    <elf-symbol name='__sanitizer_syscall_post_impl_oldumount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_olduname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_olduname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_open -->
    <elf-symbol name='__sanitizer_syscall_post_impl_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_open_by_handle_at -->
    <elf-symbol name='__sanitizer_syscall_post_impl_open_by_handle_at' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_openat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_openat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pause -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pause' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pciconfig_iobase -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pciconfig_iobase' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pciconfig_read -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pciconfig_read' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pciconfig_write -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pciconfig_write' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_perf_event_open -->
    <elf-symbol name='__sanitizer_syscall_post_impl_perf_event_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_personality -->
    <elf-symbol name='__sanitizer_syscall_post_impl_personality' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pipe -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pipe' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pipe2 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pipe2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pivot_root -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pivot_root' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_poll -->
    <elf-symbol name='__sanitizer_syscall_post_impl_poll' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ppoll -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ppoll' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pread64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pread64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_preadv -->
    <elf-symbol name='__sanitizer_syscall_post_impl_preadv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_prlimit64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_prlimit64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_process_vm_readv -->
    <elf-symbol name='__sanitizer_syscall_post_impl_process_vm_readv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_process_vm_writev -->
    <elf-symbol name='__sanitizer_syscall_post_impl_process_vm_writev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pselect6 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pselect6' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ptrace -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ptrace' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pwrite64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pwrite64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_pwritev -->
    <elf-symbol name='__sanitizer_syscall_post_impl_pwritev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_quotactl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_quotactl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_read -->
    <elf-symbol name='__sanitizer_syscall_post_impl_read' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_readlink -->
    <elf-symbol name='__sanitizer_syscall_post_impl_readlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_readlinkat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_readlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_readv -->
    <elf-symbol name='__sanitizer_syscall_post_impl_readv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_reboot -->
    <elf-symbol name='__sanitizer_syscall_post_impl_reboot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_recv -->
    <elf-symbol name='__sanitizer_syscall_post_impl_recv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_recvfrom -->
    <elf-symbol name='__sanitizer_syscall_post_impl_recvfrom' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_recvmmsg -->
    <elf-symbol name='__sanitizer_syscall_post_impl_recvmmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_recvmsg -->
    <elf-symbol name='__sanitizer_syscall_post_impl_recvmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_remap_file_pages -->
    <elf-symbol name='__sanitizer_syscall_post_impl_remap_file_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_removexattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_removexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rename -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_renameat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_renameat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_request_key -->
    <elf-symbol name='__sanitizer_syscall_post_impl_request_key' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_restart_syscall -->
    <elf-symbol name='__sanitizer_syscall_post_impl_restart_syscall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rmdir -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rmdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rt_sigpending -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rt_sigpending' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rt_sigprocmask -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rt_sigprocmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rt_sigqueueinfo -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rt_sigqueueinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rt_sigtimedwait -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rt_sigtimedwait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_rt_tgsigqueueinfo -->
    <elf-symbol name='__sanitizer_syscall_post_impl_rt_tgsigqueueinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_get_priority_max -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_get_priority_max' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_get_priority_min -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_get_priority_min' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_getaffinity -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_getaffinity' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_getparam -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_getparam' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_getscheduler -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_getscheduler' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_rr_get_interval -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_rr_get_interval' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_setaffinity -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_setaffinity' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_setparam -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_setparam' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_setscheduler -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_setscheduler' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sched_yield -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sched_yield' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_select -->
    <elf-symbol name='__sanitizer_syscall_post_impl_select' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_semctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_semctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_semget -->
    <elf-symbol name='__sanitizer_syscall_post_impl_semget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_semop -->
    <elf-symbol name='__sanitizer_syscall_post_impl_semop' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_semtimedop -->
    <elf-symbol name='__sanitizer_syscall_post_impl_semtimedop' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_send -->
    <elf-symbol name='__sanitizer_syscall_post_impl_send' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sendfile -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sendfile' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sendfile64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sendfile64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sendmmsg -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sendmmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sendmsg -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sendmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sendto -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sendto' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_set_mempolicy -->
    <elf-symbol name='__sanitizer_syscall_post_impl_set_mempolicy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_set_robust_list -->
    <elf-symbol name='__sanitizer_syscall_post_impl_set_robust_list' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_set_tid_address -->
    <elf-symbol name='__sanitizer_syscall_post_impl_set_tid_address' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setdomainname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setdomainname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setfsgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setfsgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setfsgid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setfsgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setfsuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setfsuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setfsuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setfsuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setgid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setgroups -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setgroups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setgroups16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setgroups16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sethostname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sethostname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setitimer -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setitimer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setns -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setns' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setpgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setpgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setpriority -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setpriority' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setregid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setregid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setregid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setregid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setresgid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setresgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setresgid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setresgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setresuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setresuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setresuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setresuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setreuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setreuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setreuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setreuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setrlimit -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setsid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setsid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setsockopt -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setsockopt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_settimeofday -->
    <elf-symbol name='__sanitizer_syscall_post_impl_settimeofday' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setuid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setuid16 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_setxattr -->
    <elf-symbol name='__sanitizer_syscall_post_impl_setxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sgetmask -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sgetmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_shmat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_shmat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_shmctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_shmctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_shmdt -->
    <elf-symbol name='__sanitizer_syscall_post_impl_shmdt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_shmget -->
    <elf-symbol name='__sanitizer_syscall_post_impl_shmget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_shutdown -->
    <elf-symbol name='__sanitizer_syscall_post_impl_shutdown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_signal -->
    <elf-symbol name='__sanitizer_syscall_post_impl_signal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_signalfd -->
    <elf-symbol name='__sanitizer_syscall_post_impl_signalfd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_signalfd4 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_signalfd4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sigpending -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sigpending' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sigprocmask -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sigprocmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_socket -->
    <elf-symbol name='__sanitizer_syscall_post_impl_socket' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_socketcall -->
    <elf-symbol name='__sanitizer_syscall_post_impl_socketcall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_socketpair -->
    <elf-symbol name='__sanitizer_syscall_post_impl_socketpair' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_splice -->
    <elf-symbol name='__sanitizer_syscall_post_impl_splice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_spu_create -->
    <elf-symbol name='__sanitizer_syscall_post_impl_spu_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_spu_run -->
    <elf-symbol name='__sanitizer_syscall_post_impl_spu_run' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ssetmask -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ssetmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_stat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_stat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_stat64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_stat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_statfs -->
    <elf-symbol name='__sanitizer_syscall_post_impl_statfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_statfs64 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_statfs64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_stime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_stime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_swapoff -->
    <elf-symbol name='__sanitizer_syscall_post_impl_swapoff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_swapon -->
    <elf-symbol name='__sanitizer_syscall_post_impl_swapon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_symlink -->
    <elf-symbol name='__sanitizer_syscall_post_impl_symlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_symlinkat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_symlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sync -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_syncfs -->
    <elf-symbol name='__sanitizer_syscall_post_impl_syncfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sysctl -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sysctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sysfs -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sysfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_sysinfo -->
    <elf-symbol name='__sanitizer_syscall_post_impl_sysinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_syslog -->
    <elf-symbol name='__sanitizer_syscall_post_impl_syslog' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_tee -->
    <elf-symbol name='__sanitizer_syscall_post_impl_tee' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_tgkill -->
    <elf-symbol name='__sanitizer_syscall_post_impl_tgkill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_time -->
    <elf-symbol name='__sanitizer_syscall_post_impl_time' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timer_create -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timer_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timer_delete -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timer_delete' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timer_getoverrun -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timer_getoverrun' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timer_gettime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timer_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timer_settime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timer_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timerfd_create -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timerfd_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timerfd_gettime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timerfd_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_timerfd_settime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_timerfd_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_times -->
    <elf-symbol name='__sanitizer_syscall_post_impl_times' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_tkill -->
    <elf-symbol name='__sanitizer_syscall_post_impl_tkill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_truncate -->
    <elf-symbol name='__sanitizer_syscall_post_impl_truncate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_umask -->
    <elf-symbol name='__sanitizer_syscall_post_impl_umask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_umount -->
    <elf-symbol name='__sanitizer_syscall_post_impl_umount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_uname -->
    <elf-symbol name='__sanitizer_syscall_post_impl_uname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_unlink -->
    <elf-symbol name='__sanitizer_syscall_post_impl_unlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_unlinkat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_unlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_unshare -->
    <elf-symbol name='__sanitizer_syscall_post_impl_unshare' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_uselib -->
    <elf-symbol name='__sanitizer_syscall_post_impl_uselib' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_ustat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_ustat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_utime -->
    <elf-symbol name='__sanitizer_syscall_post_impl_utime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_utimensat -->
    <elf-symbol name='__sanitizer_syscall_post_impl_utimensat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_utimes -->
    <elf-symbol name='__sanitizer_syscall_post_impl_utimes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_vfork -->
    <elf-symbol name='__sanitizer_syscall_post_impl_vfork' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_vhangup -->
    <elf-symbol name='__sanitizer_syscall_post_impl_vhangup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_vmsplice -->
    <elf-symbol name='__sanitizer_syscall_post_impl_vmsplice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_wait4 -->
    <elf-symbol name='__sanitizer_syscall_post_impl_wait4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_waitid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_waitid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_waitpid -->
    <elf-symbol name='__sanitizer_syscall_post_impl_waitpid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_write -->
    <elf-symbol name='__sanitizer_syscall_post_impl_write' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_post_impl_writev -->
    <elf-symbol name='__sanitizer_syscall_post_impl_writev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_accept -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_accept' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_accept4 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_accept4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_access -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_access' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_acct -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_acct' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_add_key -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_add_key' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_adjtimex -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_adjtimex' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_alarm -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_alarm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_bdflush -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_bdflush' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_bind -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_bind' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_brk -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_brk' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_capget -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_capget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_capset -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_capset' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_chdir -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_chdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_chmod -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_chmod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_chown -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_chown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_chown16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_chown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_chroot -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_chroot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_clock_adjtime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_clock_adjtime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_clock_getres -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_clock_getres' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_clock_gettime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_clock_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_clock_nanosleep -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_clock_nanosleep' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_clock_settime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_clock_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_close -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_close' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_connect -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_connect' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_creat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_creat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_delete_module -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_delete_module' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_dup -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_dup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_dup2 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_dup2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_dup3 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_dup3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_epoll_create -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_epoll_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_epoll_create1 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_epoll_create1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_epoll_ctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_epoll_ctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_epoll_pwait -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_epoll_pwait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_epoll_wait -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_epoll_wait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_eventfd -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_eventfd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_eventfd2 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_eventfd2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_exit -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_exit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_exit_group -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_exit_group' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_faccessat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_faccessat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchdir -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchmod -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchmod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchmodat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchmodat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchown -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchown16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fchownat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fchownat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fcntl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fcntl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fcntl64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fcntl64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fdatasync -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fdatasync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fgetxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fgetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_flistxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_flistxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_flock -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_flock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fork -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fork' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fremovexattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fremovexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fsetxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fsetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fstat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fstat64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fstat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fstatat64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fstatat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fstatfs -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fstatfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fstatfs64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fstatfs64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_fsync -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_fsync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ftruncate -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ftruncate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_futimesat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_futimesat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_get_mempolicy -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_get_mempolicy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_get_robust_list -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_get_robust_list' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getcpu -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getcpu' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getcwd -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getcwd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getdents -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getdents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getdents64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getdents64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getegid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getegid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getegid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getegid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_geteuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_geteuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_geteuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_geteuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getgid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getgroups -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getgroups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getgroups16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getgroups16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_gethostname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_gethostname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getitimer -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getitimer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getpeername -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getpeername' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getpgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getpgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getpgrp -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getpgrp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getpid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getpid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getppid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getppid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getpriority -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getpriority' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getresgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getresgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getresgid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getresgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getresuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getresuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getresuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getresuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getrlimit -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getrusage -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getrusage' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getsid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getsid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getsockname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getsockname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getsockopt -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getsockopt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_gettid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_gettid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_gettimeofday -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_gettimeofday' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_getxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_getxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_init_module -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_init_module' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_inotify_add_watch -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_inotify_add_watch' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_inotify_init -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_inotify_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_inotify_init1 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_inotify_init1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_inotify_rm_watch -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_inotify_rm_watch' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_io_cancel -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_io_cancel' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_io_destroy -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_io_destroy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_io_getevents -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_io_getevents' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_io_setup -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_io_setup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_io_submit -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_io_submit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ioctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ioctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ioperm -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ioperm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ioprio_get -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ioprio_get' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ioprio_set -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ioprio_set' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ipc -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ipc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_kexec_load -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_kexec_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_keyctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_keyctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_kill -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_kill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lchown -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lchown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lchown16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lchown16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lgetxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lgetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_link -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_link' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_linkat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_linkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_listen -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_listen' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_listxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_listxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_llistxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_llistxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_llseek -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_llseek' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lookup_dcookie -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lookup_dcookie' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lremovexattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lremovexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lseek -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lseek' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lsetxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lsetxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lstat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_lstat64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_lstat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_madvise -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_madvise' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mbind -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mbind' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_migrate_pages -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_migrate_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mincore -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mincore' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mkdir -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mkdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mkdirat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mkdirat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mknod -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mknod' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mknodat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mknodat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mlock -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mlockall -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mlockall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mmap_pgoff -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mmap_pgoff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mount -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_move_pages -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_move_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mprotect -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mprotect' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_getsetattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_getsetattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_notify -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_notify' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_open -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_timedreceive -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_timedreceive' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_timedsend -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_timedsend' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mq_unlink -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mq_unlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_mremap -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_mremap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_msgctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_msgctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_msgget -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_msgget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_msgrcv -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_msgrcv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_msgsnd -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_msgsnd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_msync -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_msync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_munlock -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_munlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_munlockall -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_munlockall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_munmap -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_munmap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_name_to_handle_at -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_name_to_handle_at' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_nanosleep -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_nanosleep' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_newfstat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_newfstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_newfstatat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_newfstatat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_newlstat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_newlstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_newstat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_newstat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_newuname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_newuname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ni_syscall -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ni_syscall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_nice -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_nice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_old_getrlimit -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_old_getrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_old_mmap -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_old_mmap' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_old_readdir -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_old_readdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_old_select -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_old_select' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_oldumount -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_oldumount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_olduname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_olduname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_open -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_open_by_handle_at -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_open_by_handle_at' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_openat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_openat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pause -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pause' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pciconfig_iobase -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pciconfig_iobase' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pciconfig_read -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pciconfig_read' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pciconfig_write -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pciconfig_write' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_perf_event_open -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_perf_event_open' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_personality -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_personality' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pipe -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pipe' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pipe2 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pipe2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pivot_root -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pivot_root' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_poll -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_poll' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ppoll -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ppoll' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pread64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pread64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_preadv -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_preadv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_prlimit64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_prlimit64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_process_vm_readv -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_process_vm_readv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_process_vm_writev -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_process_vm_writev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pselect6 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pselect6' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ptrace -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ptrace' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pwrite64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pwrite64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_pwritev -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_pwritev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_quotactl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_quotactl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_read -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_read' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_readlink -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_readlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_readlinkat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_readlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_readv -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_readv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_reboot -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_reboot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_recv -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_recv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_recvfrom -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_recvfrom' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_recvmmsg -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_recvmmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_recvmsg -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_recvmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_remap_file_pages -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_remap_file_pages' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_removexattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_removexattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rename -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_renameat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_renameat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_request_key -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_request_key' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_restart_syscall -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_restart_syscall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rmdir -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rmdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rt_sigpending -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rt_sigpending' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rt_sigprocmask -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rt_sigprocmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rt_sigqueueinfo -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rt_sigqueueinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rt_sigtimedwait -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rt_sigtimedwait' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_rt_tgsigqueueinfo -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_rt_tgsigqueueinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_get_priority_max -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_get_priority_max' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_get_priority_min -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_get_priority_min' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_getaffinity -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_getaffinity' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_getparam -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_getparam' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_getscheduler -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_getscheduler' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_rr_get_interval -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_rr_get_interval' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_setaffinity -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_setaffinity' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_setparam -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_setparam' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_setscheduler -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_setscheduler' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sched_yield -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sched_yield' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_select -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_select' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_semctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_semctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_semget -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_semget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_semop -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_semop' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_semtimedop -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_semtimedop' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_send -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_send' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sendfile -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sendfile' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sendfile64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sendfile64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sendmmsg -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sendmmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sendmsg -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sendmsg' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sendto -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sendto' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_set_mempolicy -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_set_mempolicy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_set_robust_list -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_set_robust_list' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_set_tid_address -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_set_tid_address' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setdomainname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setdomainname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setfsgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setfsgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setfsgid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setfsgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setfsuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setfsuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setfsuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setfsuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setgid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setgroups -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setgroups' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setgroups16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setgroups16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sethostname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sethostname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setitimer -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setitimer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setns -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setns' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setpgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setpgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setpriority -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setpriority' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setregid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setregid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setregid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setregid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setresgid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setresgid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setresgid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setresgid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setresuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setresuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setresuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setresuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setreuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setreuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setreuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setreuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setrlimit -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setrlimit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setsid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setsid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setsockopt -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setsockopt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_settimeofday -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_settimeofday' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setuid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setuid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setuid16 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setuid16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_setxattr -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_setxattr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sgetmask -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sgetmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_shmat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_shmat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_shmctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_shmctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_shmdt -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_shmdt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_shmget -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_shmget' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_shutdown -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_shutdown' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_signal -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_signal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_signalfd -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_signalfd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_signalfd4 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_signalfd4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sigpending -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sigpending' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sigprocmask -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sigprocmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_socket -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_socket' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_socketcall -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_socketcall' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_socketpair -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_socketpair' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_splice -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_splice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_spu_create -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_spu_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_spu_run -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_spu_run' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ssetmask -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ssetmask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_stat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_stat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_stat64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_stat64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_statfs -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_statfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_statfs64 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_statfs64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_stime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_stime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_swapoff -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_swapoff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_swapon -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_swapon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_symlink -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_symlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_symlinkat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_symlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sync -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sync' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_syncfs -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_syncfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sysctl -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sysctl' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sysfs -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sysfs' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_sysinfo -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_sysinfo' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_syslog -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_syslog' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_tee -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_tee' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_tgkill -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_tgkill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_time -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_time' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timer_create -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timer_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timer_delete -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timer_delete' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timer_getoverrun -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timer_getoverrun' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timer_gettime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timer_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timer_settime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timer_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timerfd_create -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timerfd_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timerfd_gettime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timerfd_gettime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_timerfd_settime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_timerfd_settime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_times -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_times' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_tkill -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_tkill' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_truncate -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_truncate' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_umask -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_umask' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_umount -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_umount' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_uname -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_uname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_unlink -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_unlink' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_unlinkat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_unlinkat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_unshare -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_unshare' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_uselib -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_uselib' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_ustat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_ustat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_utime -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_utime' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_utimensat -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_utimensat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_utimes -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_utimes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_vfork -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_vfork' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_vhangup -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_vhangup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_vmsplice -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_vmsplice' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_wait4 -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_wait4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_waitid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_waitid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_waitpid -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_waitpid' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_write -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_write' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_syscall_pre_impl_writev -->
    <elf-symbol name='__sanitizer_syscall_pre_impl_writev' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_load16 -->
    <elf-symbol name='__sanitizer_unaligned_load16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_load32 -->
    <elf-symbol name='__sanitizer_unaligned_load32' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_load64 -->
    <elf-symbol name='__sanitizer_unaligned_load64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_store16 -->
    <elf-symbol name='__sanitizer_unaligned_store16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_store32 -->
    <elf-symbol name='__sanitizer_unaligned_store32' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sanitizer_unaligned_store64 -->
    <elf-symbol name='__sanitizer_unaligned_store64' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __sigsetjmp -->
    <elf-symbol name='__sigsetjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_acquire -->
    <elf-symbol name='__tsan_acquire' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_compare_exchange_strong -->
    <elf-symbol name='__tsan_atomic128_compare_exchange_strong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_compare_exchange_val -->
    <elf-symbol name='__tsan_atomic128_compare_exchange_val' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_compare_exchange_weak -->
    <elf-symbol name='__tsan_atomic128_compare_exchange_weak' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_exchange -->
    <elf-symbol name='__tsan_atomic128_exchange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_add -->
    <elf-symbol name='__tsan_atomic128_fetch_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_and -->
    <elf-symbol name='__tsan_atomic128_fetch_and' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_nand -->
    <elf-symbol name='__tsan_atomic128_fetch_nand' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_or -->
    <elf-symbol name='__tsan_atomic128_fetch_or' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_sub -->
    <elf-symbol name='__tsan_atomic128_fetch_sub' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_fetch_xor -->
    <elf-symbol name='__tsan_atomic128_fetch_xor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_load -->
    <elf-symbol name='__tsan_atomic128_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic128_store -->
    <elf-symbol name='__tsan_atomic128_store' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_compare_exchange_strong -->
    <elf-symbol name='__tsan_atomic16_compare_exchange_strong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_compare_exchange_val -->
    <elf-symbol name='__tsan_atomic16_compare_exchange_val' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_compare_exchange_weak -->
    <elf-symbol name='__tsan_atomic16_compare_exchange_weak' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_exchange -->
    <elf-symbol name='__tsan_atomic16_exchange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_add -->
    <elf-symbol name='__tsan_atomic16_fetch_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_and -->
    <elf-symbol name='__tsan_atomic16_fetch_and' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_nand -->
    <elf-symbol name='__tsan_atomic16_fetch_nand' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_or -->
    <elf-symbol name='__tsan_atomic16_fetch_or' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_sub -->
    <elf-symbol name='__tsan_atomic16_fetch_sub' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_fetch_xor -->
    <elf-symbol name='__tsan_atomic16_fetch_xor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_load -->
    <elf-symbol name='__tsan_atomic16_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic16_store -->
    <elf-symbol name='__tsan_atomic16_store' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_compare_exchange_strong -->
    <elf-symbol name='__tsan_atomic32_compare_exchange_strong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_compare_exchange_val -->
    <elf-symbol name='__tsan_atomic32_compare_exchange_val' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_compare_exchange_weak -->
    <elf-symbol name='__tsan_atomic32_compare_exchange_weak' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_exchange -->
    <elf-symbol name='__tsan_atomic32_exchange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_add -->
    <elf-symbol name='__tsan_atomic32_fetch_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_and -->
    <elf-symbol name='__tsan_atomic32_fetch_and' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_nand -->
    <elf-symbol name='__tsan_atomic32_fetch_nand' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_or -->
    <elf-symbol name='__tsan_atomic32_fetch_or' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_sub -->
    <elf-symbol name='__tsan_atomic32_fetch_sub' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_fetch_xor -->
    <elf-symbol name='__tsan_atomic32_fetch_xor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_load -->
    <elf-symbol name='__tsan_atomic32_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic32_store -->
    <elf-symbol name='__tsan_atomic32_store' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_compare_exchange_strong -->
    <elf-symbol name='__tsan_atomic64_compare_exchange_strong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_compare_exchange_val -->
    <elf-symbol name='__tsan_atomic64_compare_exchange_val' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_compare_exchange_weak -->
    <elf-symbol name='__tsan_atomic64_compare_exchange_weak' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_exchange -->
    <elf-symbol name='__tsan_atomic64_exchange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_add -->
    <elf-symbol name='__tsan_atomic64_fetch_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_and -->
    <elf-symbol name='__tsan_atomic64_fetch_and' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_nand -->
    <elf-symbol name='__tsan_atomic64_fetch_nand' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_or -->
    <elf-symbol name='__tsan_atomic64_fetch_or' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_sub -->
    <elf-symbol name='__tsan_atomic64_fetch_sub' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_fetch_xor -->
    <elf-symbol name='__tsan_atomic64_fetch_xor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_load -->
    <elf-symbol name='__tsan_atomic64_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic64_store -->
    <elf-symbol name='__tsan_atomic64_store' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_compare_exchange_strong -->
    <elf-symbol name='__tsan_atomic8_compare_exchange_strong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_compare_exchange_val -->
    <elf-symbol name='__tsan_atomic8_compare_exchange_val' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_compare_exchange_weak -->
    <elf-symbol name='__tsan_atomic8_compare_exchange_weak' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_exchange -->
    <elf-symbol name='__tsan_atomic8_exchange' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_add -->
    <elf-symbol name='__tsan_atomic8_fetch_add' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_and -->
    <elf-symbol name='__tsan_atomic8_fetch_and' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_nand -->
    <elf-symbol name='__tsan_atomic8_fetch_nand' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_or -->
    <elf-symbol name='__tsan_atomic8_fetch_or' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_sub -->
    <elf-symbol name='__tsan_atomic8_fetch_sub' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_fetch_xor -->
    <elf-symbol name='__tsan_atomic8_fetch_xor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_load -->
    <elf-symbol name='__tsan_atomic8_load' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic8_store -->
    <elf-symbol name='__tsan_atomic8_store' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic_signal_fence -->
    <elf-symbol name='__tsan_atomic_signal_fence' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_atomic_thread_fence -->
    <elf-symbol name='__tsan_atomic_thread_fence' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_default_options -->
    <elf-symbol name='__tsan_default_options' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_func_entry -->
    <elf-symbol name='__tsan_func_entry' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_func_exit -->
    <elf-symbol name='__tsan_func_exit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_init -->
    <elf-symbol name='__tsan_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_alloc -->
    <elf-symbol name='__tsan_java_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_fini -->
    <elf-symbol name='__tsan_java_fini' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_free -->
    <elf-symbol name='__tsan_java_free' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_init -->
    <elf-symbol name='__tsan_java_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_move -->
    <elf-symbol name='__tsan_java_move' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_lock -->
    <elf-symbol name='__tsan_java_mutex_lock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_lock_rec -->
    <elf-symbol name='__tsan_java_mutex_lock_rec' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_read_lock -->
    <elf-symbol name='__tsan_java_mutex_read_lock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_read_unlock -->
    <elf-symbol name='__tsan_java_mutex_read_unlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_unlock -->
    <elf-symbol name='__tsan_java_mutex_unlock' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_java_mutex_unlock_rec -->
    <elf-symbol name='__tsan_java_mutex_unlock_rec' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read1 -->
    <elf-symbol name='__tsan_read1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read16 -->
    <elf-symbol name='__tsan_read16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read2 -->
    <elf-symbol name='__tsan_read2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read4 -->
    <elf-symbol name='__tsan_read4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read8 -->
    <elf-symbol name='__tsan_read8' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_read_range -->
    <elf-symbol name='__tsan_read_range' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_release -->
    <elf-symbol name='__tsan_release' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_unaligned_read2 -->
    <elf-symbol name='__tsan_unaligned_read2' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_load16' is-defined='yes'/>
    <!-- __tsan_unaligned_read4 -->
    <elf-symbol name='__tsan_unaligned_read4' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_load32' is-defined='yes'/>
    <!-- __tsan_unaligned_read8 -->
    <elf-symbol name='__tsan_unaligned_read8' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_load64' is-defined='yes'/>
    <!-- __tsan_unaligned_write2 -->
    <elf-symbol name='__tsan_unaligned_write2' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_store16' is-defined='yes'/>
    <!-- __tsan_unaligned_write4 -->
    <elf-symbol name='__tsan_unaligned_write4' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_store32' is-defined='yes'/>
    <!-- __tsan_unaligned_write8 -->
    <elf-symbol name='__tsan_unaligned_write8' type='func-type' binding='global-binding' visibility='default-visibility' alias='__sanitizer_unaligned_store64' is-defined='yes'/>
    <!-- __tsan_vptr_read -->
    <elf-symbol name='__tsan_vptr_read' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_vptr_update -->
    <elf-symbol name='__tsan_vptr_update' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write1 -->
    <elf-symbol name='__tsan_write1' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write16 -->
    <elf-symbol name='__tsan_write16' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write2 -->
    <elf-symbol name='__tsan_write2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write4 -->
    <elf-symbol name='__tsan_write4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write8 -->
    <elf-symbol name='__tsan_write8' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __tsan_write_range -->
    <elf-symbol name='__tsan_write_range' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __xpg_strerror_r -->
    <elf-symbol name='__xpg_strerror_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __xstat -->
    <elf-symbol name='__xstat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __xstat64 -->
    <elf-symbol name='__xstat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _exit -->
    <elf-symbol name='_exit' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _fini -->
    <elf-symbol name='_fini' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _init -->
    <elf-symbol name='_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _setjmp -->
    <elf-symbol name='_setjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- abort -->
    <elf-symbol name='abort' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- accept -->
    <elf-symbol name='accept' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- accept4 -->
    <elf-symbol name='accept4' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- asctime -->
    <elf-symbol name='asctime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- asctime_r -->
    <elf-symbol name='asctime_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- atexit -->
    <elf-symbol name='atexit' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- backtrace -->
    <elf-symbol name='backtrace' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- backtrace_symbols -->
    <elf-symbol name='backtrace_symbols' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- bind -->
    <elf-symbol name='bind' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- calloc -->
    <elf-symbol name='calloc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- canonicalize_file_name -->
    <elf-symbol name='canonicalize_file_name' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cfree -->
    <elf-symbol name='cfree' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- clock_getres -->
    <elf-symbol name='clock_getres' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- clock_gettime -->
    <elf-symbol name='clock_gettime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- clock_settime -->
    <elf-symbol name='clock_settime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- close -->
    <elf-symbol name='close' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- confstr -->
    <elf-symbol name='confstr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- connect -->
    <elf-symbol name='connect' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- creat -->
    <elf-symbol name='creat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- creat64 -->
    <elf-symbol name='creat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ctime -->
    <elf-symbol name='ctime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ctime_r -->
    <elf-symbol name='ctime_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dlclose -->
    <elf-symbol name='dlclose' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dlopen -->
    <elf-symbol name='dlopen' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- drand48_r -->
    <elf-symbol name='drand48_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dup -->
    <elf-symbol name='dup' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dup2 -->
    <elf-symbol name='dup2' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dup3 -->
    <elf-symbol name='dup3' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- epoll_create -->
    <elf-symbol name='epoll_create' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- epoll_create1 -->
    <elf-symbol name='epoll_create1' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- epoll_ctl -->
    <elf-symbol name='epoll_ctl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- epoll_wait -->
    <elf-symbol name='epoll_wait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_aton -->
    <elf-symbol name='ether_aton' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_aton_r -->
    <elf-symbol name='ether_aton_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_hostton -->
    <elf-symbol name='ether_hostton' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_line -->
    <elf-symbol name='ether_line' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_ntoa -->
    <elf-symbol name='ether_ntoa' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_ntoa_r -->
    <elf-symbol name='ether_ntoa_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ether_ntohost -->
    <elf-symbol name='ether_ntohost' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- eventfd -->
    <elf-symbol name='eventfd' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fclose -->
    <elf-symbol name='fclose' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fflush -->
    <elf-symbol name='fflush' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fopen -->
    <elf-symbol name='fopen' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fork -->
    <elf-symbol name='fork' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fread -->
    <elf-symbol name='fread' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- free -->
    <elf-symbol name='free' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- freopen -->
    <elf-symbol name='freopen' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- frexp -->
    <elf-symbol name='frexp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- frexpf -->
    <elf-symbol name='frexpf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- frexpl -->
    <elf-symbol name='frexpl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fscanf -->
    <elf-symbol name='fscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstat -->
    <elf-symbol name='fstat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstat64 -->
    <elf-symbol name='fstat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstatfs -->
    <elf-symbol name='fstatfs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstatfs64 -->
    <elf-symbol name='fstatfs64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstatvfs -->
    <elf-symbol name='fstatvfs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fstatvfs64 -->
    <elf-symbol name='fstatvfs64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fwrite -->
    <elf-symbol name='fwrite' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- get_current_dir_name -->
    <elf-symbol name='get_current_dir_name' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getaddrinfo -->
    <elf-symbol name='getaddrinfo' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getcwd -->
    <elf-symbol name='getcwd' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getdelim -->
    <elf-symbol name='getdelim' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getgroups -->
    <elf-symbol name='getgroups' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyaddr -->
    <elf-symbol name='gethostbyaddr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyaddr_r -->
    <elf-symbol name='gethostbyaddr_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyname -->
    <elf-symbol name='gethostbyname' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyname2 -->
    <elf-symbol name='gethostbyname2' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyname2_r -->
    <elf-symbol name='gethostbyname2_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostbyname_r -->
    <elf-symbol name='gethostbyname_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostent -->
    <elf-symbol name='gethostent' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gethostent_r -->
    <elf-symbol name='gethostent_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getitimer -->
    <elf-symbol name='getitimer' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getline -->
    <elf-symbol name='getline' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getmntent -->
    <elf-symbol name='getmntent' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getmntent_r -->
    <elf-symbol name='getmntent_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getpeername -->
    <elf-symbol name='getpeername' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getsockname -->
    <elf-symbol name='getsockname' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getsockopt -->
    <elf-symbol name='getsockopt' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gettimeofday -->
    <elf-symbol name='gettimeofday' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gmtime -->
    <elf-symbol name='gmtime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gmtime_r -->
    <elf-symbol name='gmtime_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- iconv -->
    <elf-symbol name='iconv' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inet_aton -->
    <elf-symbol name='inet_aton' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inet_ntop -->
    <elf-symbol name='inet_ntop' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inet_pton -->
    <elf-symbol name='inet_pton' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- initgroups -->
    <elf-symbol name='initgroups' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inotify_init -->
    <elf-symbol name='inotify_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inotify_init1 -->
    <elf-symbol name='inotify_init1' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ioctl -->
    <elf-symbol name='ioctl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- kill -->
    <elf-symbol name='kill' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgamma -->
    <elf-symbol name='lgamma' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgamma_r -->
    <elf-symbol name='lgamma_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgammaf -->
    <elf-symbol name='lgammaf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgammaf_r -->
    <elf-symbol name='lgammaf_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgammal -->
    <elf-symbol name='lgammal' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lgammal_r -->
    <elf-symbol name='lgammal_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- listen -->
    <elf-symbol name='listen' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- localtime -->
    <elf-symbol name='localtime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- localtime_r -->
    <elf-symbol name='localtime_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- longjmp -->
    <elf-symbol name='longjmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lrand48_r -->
    <elf-symbol name='lrand48_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lstat -->
    <elf-symbol name='lstat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lstat64 -->
    <elf-symbol name='lstat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- malloc -->
    <elf-symbol name='malloc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- malloc_usable_size -->
    <elf-symbol name='malloc_usable_size' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mbsnrtowcs -->
    <elf-symbol name='mbsnrtowcs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mbsrtowcs -->
    <elf-symbol name='mbsrtowcs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mbstowcs -->
    <elf-symbol name='mbstowcs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memalign -->
    <elf-symbol name='memalign' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memchr -->
    <elf-symbol name='memchr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memcmp -->
    <elf-symbol name='memcmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memcpy -->
    <elf-symbol name='memcpy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memmove -->
    <elf-symbol name='memmove' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memrchr -->
    <elf-symbol name='memrchr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- memset -->
    <elf-symbol name='memset' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mlock -->
    <elf-symbol name='mlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mlockall -->
    <elf-symbol name='mlockall' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mmap -->
    <elf-symbol name='mmap' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- mmap64 -->
    <elf-symbol name='mmap64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- modf -->
    <elf-symbol name='modf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- modff -->
    <elf-symbol name='modff' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- modfl -->
    <elf-symbol name='modfl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- munlock -->
    <elf-symbol name='munlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- munlockall -->
    <elf-symbol name='munlockall' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- munmap -->
    <elf-symbol name='munmap' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- nanosleep -->
    <elf-symbol name='nanosleep' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- on_exit -->
    <elf-symbol name='on_exit' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- open -->
    <elf-symbol name='open' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- open64 -->
    <elf-symbol name='open64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- opendir -->
    <elf-symbol name='opendir' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pipe -->
    <elf-symbol name='pipe' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pipe2 -->
    <elf-symbol name='pipe2' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- poll -->
    <elf-symbol name='poll' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- posix_memalign -->
    <elf-symbol name='posix_memalign' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ppoll -->
    <elf-symbol name='ppoll' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- prctl -->
    <elf-symbol name='prctl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pread -->
    <elf-symbol name='pread' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pread64 -->
    <elf-symbol name='pread64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- preadv -->
    <elf-symbol name='preadv' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- preadv64 -->
    <elf-symbol name='preadv64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getaffinity_np -->
    <elf-symbol name='pthread_attr_getaffinity_np' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getdetachstate -->
    <elf-symbol name='pthread_attr_getdetachstate' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getguardsize -->
    <elf-symbol name='pthread_attr_getguardsize' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getinheritsched -->
    <elf-symbol name='pthread_attr_getinheritsched' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getschedparam -->
    <elf-symbol name='pthread_attr_getschedparam' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getschedpolicy -->
    <elf-symbol name='pthread_attr_getschedpolicy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getscope -->
    <elf-symbol name='pthread_attr_getscope' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getstack -->
    <elf-symbol name='pthread_attr_getstack' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_attr_getstacksize -->
    <elf-symbol name='pthread_attr_getstacksize' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_barrier_destroy -->
    <elf-symbol name='pthread_barrier_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_barrier_init -->
    <elf-symbol name='pthread_barrier_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_barrier_wait -->
    <elf-symbol name='pthread_barrier_wait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_broadcast -->
    <elf-symbol name='pthread_cond_broadcast' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_destroy -->
    <elf-symbol name='pthread_cond_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_init -->
    <elf-symbol name='pthread_cond_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_signal -->
    <elf-symbol name='pthread_cond_signal' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_timedwait -->
    <elf-symbol name='pthread_cond_timedwait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_cond_wait -->
    <elf-symbol name='pthread_cond_wait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_create -->
    <elf-symbol name='pthread_create' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_detach -->
    <elf-symbol name='pthread_detach' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_getschedparam -->
    <elf-symbol name='pthread_getschedparam' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_join -->
    <elf-symbol name='pthread_join' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_kill -->
    <elf-symbol name='pthread_kill' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_destroy -->
    <elf-symbol name='pthread_mutex_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_init -->
    <elf-symbol name='pthread_mutex_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_lock -->
    <elf-symbol name='pthread_mutex_lock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_timedlock -->
    <elf-symbol name='pthread_mutex_timedlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_trylock -->
    <elf-symbol name='pthread_mutex_trylock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_mutex_unlock -->
    <elf-symbol name='pthread_mutex_unlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_once -->
    <elf-symbol name='pthread_once' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_destroy -->
    <elf-symbol name='pthread_rwlock_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_init -->
    <elf-symbol name='pthread_rwlock_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_rdlock -->
    <elf-symbol name='pthread_rwlock_rdlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_timedrdlock -->
    <elf-symbol name='pthread_rwlock_timedrdlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_timedwrlock -->
    <elf-symbol name='pthread_rwlock_timedwrlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_tryrdlock -->
    <elf-symbol name='pthread_rwlock_tryrdlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_trywrlock -->
    <elf-symbol name='pthread_rwlock_trywrlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_unlock -->
    <elf-symbol name='pthread_rwlock_unlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_rwlock_wrlock -->
    <elf-symbol name='pthread_rwlock_wrlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_setname_np -->
    <elf-symbol name='pthread_setname_np' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_spin_destroy -->
    <elf-symbol name='pthread_spin_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_spin_init -->
    <elf-symbol name='pthread_spin_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_spin_lock -->
    <elf-symbol name='pthread_spin_lock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_spin_trylock -->
    <elf-symbol name='pthread_spin_trylock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pthread_spin_unlock -->
    <elf-symbol name='pthread_spin_unlock' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ptrace -->
    <elf-symbol name='ptrace' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- puts -->
    <elf-symbol name='puts' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pvalloc -->
    <elf-symbol name='pvalloc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pwrite -->
    <elf-symbol name='pwrite' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pwrite64 -->
    <elf-symbol name='pwrite64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pwritev -->
    <elf-symbol name='pwritev' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pwritev64 -->
    <elf-symbol name='pwritev64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- raise -->
    <elf-symbol name='raise' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- random_r -->
    <elf-symbol name='random_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- read -->
    <elf-symbol name='read' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- readdir -->
    <elf-symbol name='readdir' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- readdir64 -->
    <elf-symbol name='readdir64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- readdir64_r -->
    <elf-symbol name='readdir64_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- readdir_r -->
    <elf-symbol name='readdir_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- readv -->
    <elf-symbol name='readv' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- realloc -->
    <elf-symbol name='realloc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- realpath -->
    <elf-symbol name='realpath' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- recv -->
    <elf-symbol name='recv' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- recvmsg -->
    <elf-symbol name='recvmsg' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- remquo -->
    <elf-symbol name='remquo' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- remquof -->
    <elf-symbol name='remquof' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- remquol -->
    <elf-symbol name='remquol' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- rmdir -->
    <elf-symbol name='rmdir' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- scandir -->
    <elf-symbol name='scandir' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- scandir64 -->
    <elf-symbol name='scandir64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- scanf -->
    <elf-symbol name='scanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sched_getaffinity -->
    <elf-symbol name='sched_getaffinity' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_destroy -->
    <elf-symbol name='sem_destroy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_getvalue -->
    <elf-symbol name='sem_getvalue' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_init -->
    <elf-symbol name='sem_init' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_post -->
    <elf-symbol name='sem_post' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_timedwait -->
    <elf-symbol name='sem_timedwait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_trywait -->
    <elf-symbol name='sem_trywait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sem_wait -->
    <elf-symbol name='sem_wait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- send -->
    <elf-symbol name='send' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sendmsg -->
    <elf-symbol name='sendmsg' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- setitimer -->
    <elf-symbol name='setitimer' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- setjmp -->
    <elf-symbol name='setjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- setlocale -->
    <elf-symbol name='setlocale' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- shmctl -->
    <elf-symbol name='shmctl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigaction -->
    <elf-symbol name='sigaction' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigemptyset -->
    <elf-symbol name='sigemptyset' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigfillset -->
    <elf-symbol name='sigfillset' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- siglongjmp -->
    <elf-symbol name='siglongjmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- signal -->
    <elf-symbol name='signal' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- signalfd -->
    <elf-symbol name='signalfd' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigpending -->
    <elf-symbol name='sigpending' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigprocmask -->
    <elf-symbol name='sigprocmask' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigsetjmp -->
    <elf-symbol name='sigsetjmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigsuspend -->
    <elf-symbol name='sigsuspend' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigtimedwait -->
    <elf-symbol name='sigtimedwait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigwait -->
    <elf-symbol name='sigwait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sigwaitinfo -->
    <elf-symbol name='sigwaitinfo' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sincos -->
    <elf-symbol name='sincos' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sincosf -->
    <elf-symbol name='sincosf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sincosl -->
    <elf-symbol name='sincosl' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sleep -->
    <elf-symbol name='sleep' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- socket -->
    <elf-symbol name='socket' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- socketpair -->
    <elf-symbol name='socketpair' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sscanf -->
    <elf-symbol name='sscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- stat -->
    <elf-symbol name='stat' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- stat64 -->
    <elf-symbol name='stat64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- statfs -->
    <elf-symbol name='statfs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- statfs64 -->
    <elf-symbol name='statfs64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- statvfs -->
    <elf-symbol name='statvfs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- statvfs64 -->
    <elf-symbol name='statvfs64' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strcasecmp -->
    <elf-symbol name='strcasecmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strchr -->
    <elf-symbol name='strchr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strchrnul -->
    <elf-symbol name='strchrnul' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strcmp -->
    <elf-symbol name='strcmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strcpy -->
    <elf-symbol name='strcpy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strdup -->
    <elf-symbol name='strdup' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strerror -->
    <elf-symbol name='strerror' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strerror_r -->
    <elf-symbol name='strerror_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strlen -->
    <elf-symbol name='strlen' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strncasecmp -->
    <elf-symbol name='strncasecmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strncmp -->
    <elf-symbol name='strncmp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strncpy -->
    <elf-symbol name='strncpy' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strptime -->
    <elf-symbol name='strptime' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strrchr -->
    <elf-symbol name='strrchr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strstr -->
    <elf-symbol name='strstr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strtoimax -->
    <elf-symbol name='strtoimax' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- strtoumax -->
    <elf-symbol name='strtoumax' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sysinfo -->
    <elf-symbol name='sysinfo' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tcgetattr -->
    <elf-symbol name='tcgetattr' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tempnam -->
    <elf-symbol name='tempnam' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- textdomain -->
    <elf-symbol name='textdomain' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- time -->
    <elf-symbol name='time' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- times -->
    <elf-symbol name='times' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tmpnam -->
    <elf-symbol name='tmpnam' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tmpnam_r -->
    <elf-symbol name='tmpnam_r' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- unlink -->
    <elf-symbol name='unlink' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- usleep -->
    <elf-symbol name='usleep' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- valloc -->
    <elf-symbol name='valloc' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vfscanf -->
    <elf-symbol name='vfscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vscanf -->
    <elf-symbol name='vscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vsscanf -->
    <elf-symbol name='vsscanf' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wait -->
    <elf-symbol name='wait' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wait3 -->
    <elf-symbol name='wait3' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wait4 -->
    <elf-symbol name='wait4' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- waitid -->
    <elf-symbol name='waitid' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- waitpid -->
    <elf-symbol name='waitpid' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wcsnrtombs -->
    <elf-symbol name='wcsnrtombs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wcsrtombs -->
    <elf-symbol name='wcsrtombs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wcstombs -->
    <elf-symbol name='wcstombs' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- wordexp -->
    <elf-symbol name='wordexp' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- write -->
    <elf-symbol name='write' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- writev -->
    <elf-symbol name='writev' type='func-type' binding='weak-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <elf-variable-symbols>
    <!-- __asan_cplus_demangle_builtin_types -->
    <elf-symbol name='__asan_cplus_demangle_builtin_types' size='1056' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __asan_cplus_demangle_operators -->
    <elf-symbol name='__asan_cplus_demangle_operators' size='1488' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-variable-symbols>
  <abi-instr address-size='64' path='../../.././libsanitizer/interception/interception_linux.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/interception' language='LANG_C_plus_plus'>
    <!-- bool -->
    <type-decl name='bool' size-in-bits='8' id='c894953d'/>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='a84c031d'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='7359adad'/>
    <!-- __interception::uptr* -->
    <pointer-type-def type-id='7e779721' size-in-bits='64' id='7f25436e'/>
    <!-- const char -->
    <qualified-type-def type-id='a84c031d' const='yes' id='9b45d938'/>
    <!-- const char* -->
    <pointer-type-def type-id='9b45d938' size-in-bits='64' id='80f4b756'/>
    <!-- void* -->
    <pointer-type-def type-id='48b5725f' size-in-bits='64' id='eaa32e2f'/>
    <!-- namespace __interception -->
    <namespace-decl name='__interception'>
      <!-- typedef unsigned long int __interception::uptr -->
      <typedef-decl name='uptr' type-id='7359adad' filepath='../../.././libsanitizer/interception/interception.h' line='230' column='1' id='7e779721'/>
    </namespace-decl>
    <!-- void* dlsym(void*, const char*) -->
    <function-decl name='dlsym' filepath='/usr/include/dlfcn.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* dlvsym(void*, const char*, const char*) -->
    <function-decl name='dlvsym' filepath='/usr/include/dlfcn.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void -->
    <type-decl name='void' id='48b5725f'/>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/interception/interception_type_test.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/interception' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='95e97e5e'/>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='002ac4a6'/>
    <!-- typedef void (void*, const char*, int)* backtrace_error_callback -->
    <typedef-decl name='backtrace_error_callback' type-id='b07dc7cc' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/backtrace.h' line='82' column='1' id='43010261'/>
    <!-- typedef int (void*, typedef uintptr_t, const char*, int, const char*)* backtrace_full_callback -->
    <typedef-decl name='backtrace_full_callback' type-id='76501d4c' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/backtrace.h' line='110' column='1' id='70626b86'/>
    <!-- typedef void (void*, typedef uintptr_t, const char*, typedef uintptr_t, typedef uintptr_t)* backtrace_syminfo_callback -->
    <typedef-decl name='backtrace_syminfo_callback' type-id='c01c0659' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/backtrace.h' line='175' column='1' id='1cc872ea'/>
    <!-- typedef int (backtrace_state*, typedef uintptr_t, typedef backtrace_full_callback, typedef backtrace_error_callback, void*)* fileline -->
    <typedef-decl name='fileline' type-id='51db67e4' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='114' column='1' id='0ae02d98'/>
    <!-- typedef void (backtrace_state*, typedef uintptr_t, typedef backtrace_syminfo_callback, typedef backtrace_error_callback, void*)* syminfo -->
    <typedef-decl name='syminfo' type-id='e0525277' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='121' column='1' id='06b3d8d7'/>
    <!-- struct backtrace_state -->
    <class-decl name='backtrace_state' size-in-bits='576' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='127' column='1' id='1f9fe12d'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* backtrace_state::filename -->
        <var-decl name='filename' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='130' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int backtrace_state::threaded -->
        <var-decl name='threaded' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* backtrace_state::lock -->
        <var-decl name='lock' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='136' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- fileline backtrace_state::fileline_fn -->
        <var-decl name='fileline_fn' type-id='0ae02d98' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='138' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void* backtrace_state::fileline_data -->
        <var-decl name='fileline_data' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='140' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- syminfo backtrace_state::syminfo_fn -->
        <var-decl name='syminfo_fn' type-id='06b3d8d7' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- void* backtrace_state::syminfo_data -->
        <var-decl name='syminfo_data' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- int backtrace_state::fileline_initialization_failed -->
        <var-decl name='fileline_initialization_failed' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='146' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int backtrace_state::lock_alloc -->
        <var-decl name='lock_alloc' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='148' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- backtrace_freelist_struct* backtrace_state::freelist -->
        <var-decl name='freelist' type-id='ab64235c' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='150' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct backtrace_vector -->
    <class-decl name='backtrace_vector' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='221' column='1' id='8df9bc87'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* backtrace_vector::base -->
        <var-decl name='base' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='224' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- size_t backtrace_vector::size -->
        <var-decl name='size' type-id='b59d7dce' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='226' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- size_t backtrace_vector::alc -->
        <var-decl name='alc' type-id='b59d7dce' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='228' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned long int size_t -->
    <typedef-decl name='size_t' type-id='7359adad' filepath='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/host-x86_64-unknown-linux-gnu/gcc/include/stddef.h' line='212' column='1' id='b59d7dce'/>
    <!-- typedef unsigned long int uintptr_t -->
    <typedef-decl name='uintptr_t' type-id='7359adad' filepath='/usr/include/stdint.h' line='123' column='1' id='e475ab95'/>
    <!-- typedef int (void*, void*)* __compar_fn_t -->
    <typedef-decl name='__compar_fn_t' type-id='585e1de9' filepath='/usr/include/stdlib.h' line='742' column='1' id='aba7edd8'/>
    <!-- backtrace_freelist_struct* -->
    <pointer-type-def type-id='334fd126' size-in-bits='64' id='ab64235c'/>
    <!-- backtrace_state* -->
    <pointer-type-def type-id='1f9fe12d' size-in-bits='64' id='8687e9ed'/>
    <!-- backtrace_vector* -->
    <pointer-type-def type-id='8df9bc87' size-in-bits='64' id='f8dcdf3f'/>
    <!-- char* -->
    <pointer-type-def type-id='a84c031d' size-in-bits='64' id='26a90f95'/>
    <!-- const unsigned char -->
    <qualified-type-def type-id='002ac4a6' const='yes' id='ea86de29'/>
    <!-- const unsigned char* -->
    <pointer-type-def type-id='ea86de29' size-in-bits='64' id='354f7eb9'/>
    <!-- fileline* -->
    <pointer-type-def type-id='0ae02d98' size-in-bits='64' id='e254c359'/>
    <!-- int (backtrace_state*, typedef uintptr_t, typedef backtrace_full_callback, typedef backtrace_error_callback, void*)* -->
    <pointer-type-def type-id='f870d5b2' size-in-bits='64' id='51db67e4'/>
    <!-- int (void*, typedef uintptr_t, const char*, int, const char*)* -->
    <pointer-type-def type-id='d1f0cc1a' size-in-bits='64' id='76501d4c'/>
    <!-- int (void*, void*)* -->
    <pointer-type-def type-id='96ee24a5' size-in-bits='64' id='585e1de9'/>
    <!-- void (backtrace_state*, typedef uintptr_t, typedef backtrace_syminfo_callback, typedef backtrace_error_callback, void*)* -->
    <pointer-type-def type-id='4e15fe9b' size-in-bits='64' id='e0525277'/>
    <!-- void (void*, const char*, int)* -->
    <pointer-type-def type-id='10721eaa' size-in-bits='64' id='b07dc7cc'/>
    <!-- void (void*, typedef uintptr_t, const char*, typedef uintptr_t, typedef uintptr_t)* -->
    <pointer-type-def type-id='bdc9f55d' size-in-bits='64' id='c01c0659'/>
    <!-- struct backtrace_freelist_struct -->
    <class-decl name='backtrace_freelist_struct' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='55' column='1' id='334fd126'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- backtrace_freelist_struct* backtrace_freelist_struct::next -->
        <var-decl name='next' type-id='ab64235c' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- size_t backtrace_freelist_struct::size -->
        <var-decl name='size' type-id='b59d7dce' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='60' column='1'/>
      </data-member>
    </class-decl>
    <!-- int __asan_backtrace_dwarf_add(backtrace_state*, uintptr_t, const unsigned char*, size_t, const unsigned char*, size_t, const unsigned char*, size_t, const unsigned char*, size_t, const unsigned char*, size_t, int, backtrace_error_callback, void*, fileline*) -->
    <function-decl name='__asan_backtrace_dwarf_add' mangled-name='__asan_backtrace_dwarf_add' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2958' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_dwarf_add'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2958' column='1'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95' name='base_address' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2959' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='354f7eb9' name='dwarf_info' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2960' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='dwarf_info_size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2961' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='354f7eb9' name='dwarf_line' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2962' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='dwarf_line_size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2963' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='354f7eb9' name='dwarf_abbrev' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2964' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='dwarf_abbrev_size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2965' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='354f7eb9' name='dwarf_ranges' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2966' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='dwarf_ranges_size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2967' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='354f7eb9' name='dwarf_str' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2968' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='dwarf_str_size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2969' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='is_bigendian' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2970' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2971' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2972' column='1'/>
      <!-- parameter of type 'fileline*' -->
      <parameter type-id='e254c359' name='fileline_fn' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/dwarf.c' line='2972' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __asan_backtrace_qsort(void*, size_t, size_t, int (void*, void*)*) -->
    <function-decl name='__asan_backtrace_qsort' mangled-name='__asan_backtrace_qsort' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_qsort'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'int (void*, void*)*' -->
      <parameter type-id='585e1de9'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void* __asan_backtrace_alloc(backtrace_state*, size_t, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_alloc' mangled-name='__asan_backtrace_alloc' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='206' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_alloc'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void __asan_backtrace_free(backtrace_state*, void*, size_t, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_free' mangled-name='__asan_backtrace_free' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='212' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_free'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void* __asan_backtrace_vector_grow(backtrace_state*, size_t, backtrace_error_callback, void*, backtrace_vector*) -->
    <function-decl name='__asan_backtrace_vector_grow' mangled-name='__asan_backtrace_vector_grow' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='235' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_vector_grow'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'backtrace_vector*' -->
      <parameter type-id='f8dcdf3f'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __asan_backtrace_vector_release(backtrace_state*, backtrace_vector*, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_vector_release' mangled-name='__asan_backtrace_vector_release' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='253' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_vector_release'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'backtrace_vector*' -->
      <parameter type-id='f8dcdf3f'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __asan_internal_memset(void*, int, size_t) -->
    <function-decl name='__asan_internal_memset' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __asan_internal_strcmp(const char*, const char*) -->
    <function-decl name='__asan_internal_strcmp' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- size_t __asan_internal_strnlen(const char*, size_t) -->
    <function-decl name='__asan_internal_strnlen' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- typedef size_t -->
      <return type-id='b59d7dce'/>
    </function-decl>
    <!-- int snprintf(char*, size_t, const char*, ...) -->
    <function-decl name='snprintf' filepath='/usr/include/stdio.h' line='385' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='755' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='aba7edd8'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int (backtrace_state*, uintptr_t, backtrace_full_callback, backtrace_error_callback, void*) -->
    <function-type size-in-bits='64' id='f870d5b2'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- parameter of type 'typedef backtrace_full_callback' -->
      <parameter type-id='70626b86'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, uintptr_t, const char*, int, const char*) -->
    <function-type size-in-bits='64' id='d1f0cc1a'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*) -->
    <function-type size-in-bits='64' id='96ee24a5'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- void (backtrace_state*, uintptr_t, backtrace_syminfo_callback, backtrace_error_callback, void*) -->
    <function-type size-in-bits='64' id='4e15fe9b'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- parameter of type 'typedef backtrace_syminfo_callback' -->
      <parameter type-id='1cc872ea'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (void*, const char*, int) -->
    <function-type size-in-bits='64' id='10721eaa'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (void*, uintptr_t, const char*, uintptr_t, uintptr_t) -->
    <function-type size-in-bits='64' id='bdc9f55d'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- int (const char*, const char*) -->
    <function-type size-in-bits='64' id='8bb5e773'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- long long unsigned int -->
    <type-decl name='long long unsigned int' size-in-bits='64' id='3a47d82b'/>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='f0981eeb'/>
    <!-- unsigned short int -->
    <type-decl name='unsigned short int' size-in-bits='16' id='8efea9e5'/>
    <!-- typedef uint16_t Elf64_Half -->
    <typedef-decl name='Elf64_Half' type-id='149c6638' filepath='/usr/include/elf.h' line='34' column='1' id='101a70d5'/>
    <!-- typedef uint32_t Elf64_Word -->
    <typedef-decl name='Elf64_Word' type-id='8f92235e' filepath='/usr/include/elf.h' line='39' column='1' id='e57120d4'/>
    <!-- typedef uint64_t Elf64_Xword -->
    <typedef-decl name='Elf64_Xword' type-id='9c313c2d' filepath='/usr/include/elf.h' line='45' column='1' id='c87c44e4'/>
    <!-- typedef uint64_t Elf64_Addr -->
    <typedef-decl name='Elf64_Addr' type-id='9c313c2d' filepath='/usr/include/elf.h' line='50' column='1' id='e14340cf'/>
    <!-- typedef uint64_t Elf64_Off -->
    <typedef-decl name='Elf64_Off' type-id='9c313c2d' filepath='/usr/include/elf.h' line='54' column='1' id='59ecf0a1'/>
    <!-- struct Elf64_Phdr -->
    <class-decl name='Elf64_Phdr' size-in-bits='448' is-struct='yes' naming-typedef-id='21b66a76' visibility='default' filepath='/usr/include/elf.h' line='550' column='1' id='6392ff97'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Elf64_Word Elf64_Phdr::p_type -->
        <var-decl name='p_type' type-id='e57120d4' visibility='default' filepath='/usr/include/elf.h' line='552' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- Elf64_Word Elf64_Phdr::p_flags -->
        <var-decl name='p_flags' type-id='e57120d4' visibility='default' filepath='/usr/include/elf.h' line='553' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- Elf64_Off Elf64_Phdr::p_offset -->
        <var-decl name='p_offset' type-id='59ecf0a1' visibility='default' filepath='/usr/include/elf.h' line='554' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- Elf64_Addr Elf64_Phdr::p_vaddr -->
        <var-decl name='p_vaddr' type-id='e14340cf' visibility='default' filepath='/usr/include/elf.h' line='555' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- Elf64_Addr Elf64_Phdr::p_paddr -->
        <var-decl name='p_paddr' type-id='e14340cf' visibility='default' filepath='/usr/include/elf.h' line='556' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- Elf64_Xword Elf64_Phdr::p_filesz -->
        <var-decl name='p_filesz' type-id='c87c44e4' visibility='default' filepath='/usr/include/elf.h' line='557' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- Elf64_Xword Elf64_Phdr::p_memsz -->
        <var-decl name='p_memsz' type-id='c87c44e4' visibility='default' filepath='/usr/include/elf.h' line='558' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- Elf64_Xword Elf64_Phdr::p_align -->
        <var-decl name='p_align' type-id='c87c44e4' visibility='default' filepath='/usr/include/elf.h' line='559' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef Elf64_Phdr Elf64_Phdr -->
    <typedef-decl name='Elf64_Phdr' type-id='6392ff97' filepath='/usr/include/elf.h' line='560' column='1' id='21b66a76'/>
    <!-- struct dl_phdr_info -->
    <class-decl name='dl_phdr_info' size-in-bits='512' is-struct='yes' visibility='default' filepath='/usr/include/link.h' line='138' column='1' id='e65aa831'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Elf64_Addr dl_phdr_info::dlpi_addr -->
        <var-decl name='dlpi_addr' type-id='e14340cf' visibility='default' filepath='/usr/include/link.h' line='140' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* dl_phdr_info::dlpi_name -->
        <var-decl name='dlpi_name' type-id='80f4b756' visibility='default' filepath='/usr/include/link.h' line='141' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const Elf64_Phdr* dl_phdr_info::dlpi_phdr -->
        <var-decl name='dlpi_phdr' type-id='61accf24' visibility='default' filepath='/usr/include/link.h' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- Elf64_Half dl_phdr_info::dlpi_phnum -->
        <var-decl name='dlpi_phnum' type-id='101a70d5' visibility='default' filepath='/usr/include/link.h' line='143' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- long long unsigned int dl_phdr_info::dlpi_adds -->
        <var-decl name='dlpi_adds' type-id='3a47d82b' visibility='default' filepath='/usr/include/link.h' line='151' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long long unsigned int dl_phdr_info::dlpi_subs -->
        <var-decl name='dlpi_subs' type-id='3a47d82b' visibility='default' filepath='/usr/include/link.h' line='153' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- size_t dl_phdr_info::dlpi_tls_modid -->
        <var-decl name='dlpi_tls_modid' type-id='b59d7dce' visibility='default' filepath='/usr/include/link.h' line='157' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- void* dl_phdr_info::dlpi_tls_data -->
        <var-decl name='dlpi_tls_data' type-id='eaa32e2f' visibility='default' filepath='/usr/include/link.h' line='162' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned short int uint16_t -->
    <typedef-decl name='uint16_t' type-id='8efea9e5' filepath='/usr/include/stdint.h' line='50' column='1' id='149c6638'/>
    <!-- typedef unsigned int uint32_t -->
    <typedef-decl name='uint32_t' type-id='f0981eeb' filepath='/usr/include/stdint.h' line='52' column='1' id='8f92235e'/>
    <!-- typedef unsigned long int uint64_t -->
    <typedef-decl name='uint64_t' type-id='7359adad' filepath='/usr/include/stdint.h' line='56' column='1' id='9c313c2d'/>
    <!-- const Elf64_Phdr -->
    <qualified-type-def type-id='21b66a76' const='yes' id='b896fae6'/>
    <!-- const Elf64_Phdr* -->
    <pointer-type-def type-id='b896fae6' size-in-bits='64' id='61accf24'/>
    <!-- dl_phdr_info* -->
    <pointer-type-def type-id='e65aa831' size-in-bits='64' id='27c49c89'/>
    <!-- int (dl_phdr_info*, typedef size_t, void*)* -->
    <pointer-type-def type-id='967fe4d8' size-in-bits='64' id='743a5be2'/>
    <!-- int* -->
    <pointer-type-def type-id='95e97e5e' size-in-bits='64' id='7292109c'/>
    <!-- int __asan_backtrace_initialize(backtrace_state*, int, backtrace_error_callback, void*, fileline*) -->
    <function-decl name='__asan_backtrace_initialize' mangled-name='__asan_backtrace_initialize' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='921' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_initialize'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='921' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='descriptor' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='921' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='922' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='923' column='1'/>
      <!-- parameter of type 'fileline*' -->
      <parameter type-id='e254c359' name='fileline_fn' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/elf.c' line='923' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_backtrace_open(const char*, backtrace_error_callback, void*, int*) -->
    <function-decl name='__asan_backtrace_open' mangled-name='__asan_backtrace_open' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='159' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_open'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_backtrace_close(int, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_close' mangled-name='__asan_backtrace_close' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_close'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int dl_iterate_phdr(int (dl_phdr_info*, typedef size_t, void*)*, void*) -->
    <function-decl name='dl_iterate_phdr' filepath='/usr/include/link.h' line='167' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int (dl_phdr_info*, typedef size_t, void*)*' -->
      <parameter type-id='743a5be2'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int (dl_phdr_info*, size_t, void*) -->
    <function-type size-in-bits='64' id='967fe4d8'>
      <!-- parameter of type 'dl_phdr_info*' -->
      <parameter type-id='27c49c89'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- int __asan_backtrace_pcinfo(backtrace_state*, uintptr_t, backtrace_full_callback, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_pcinfo' mangled-name='__asan_backtrace_pcinfo' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='166' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_pcinfo'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='166' column='1'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95' name='pc' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='166' column='1'/>
      <!-- parameter of type 'typedef backtrace_full_callback' -->
      <parameter type-id='70626b86' name='callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='167' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='168' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='168' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_backtrace_syminfo(backtrace_state*, uintptr_t, backtrace_syminfo_callback, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_syminfo' mangled-name='__asan_backtrace_syminfo' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='182' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_syminfo'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='182' column='1'/>
      <!-- parameter of type 'typedef uintptr_t' -->
      <parameter type-id='e475ab95' name='pc' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='182' column='1'/>
      <!-- parameter of type 'typedef backtrace_syminfo_callback' -->
      <parameter type-id='1cc872ea' name='callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='183' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='184' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/fileline.c' line='184' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='bd54fe1a'/>
    <!-- struct backtrace_freelist_struct -->
    <class-decl name='backtrace_freelist_struct' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='55' column='1' id='334fd126'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- backtrace_freelist_struct* backtrace_freelist_struct::next -->
        <var-decl name='next' type-id='ab64235c' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- size_t backtrace_freelist_struct::size -->
        <var-decl name='size' type-id='b59d7dce' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='60' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef long int __off_t -->
    <typedef-decl name='__off_t' type-id='bd54fe1a' filepath='/usr/include/bits/types.h' line='141' column='1' id='79989e9c'/>
    <!-- void* __asan_backtrace_vector_finish(backtrace_state*, backtrace_vector*, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_vector_finish' mangled-name='__asan_backtrace_vector_finish' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='258' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_vector_finish'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='259' column='1'/>
      <!-- parameter of type 'backtrace_vector*' -->
      <parameter type-id='f8dcdf3f' name='vec' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='260' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='261' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmap.c' line='262' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __asan_internal_memcpy(void*, void*, size_t) -->
    <function-decl name='__asan_internal_memcpy' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int* __errno_location() -->
    <function-decl name='__errno_location' filepath='/usr/include/bits/errno.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int* -->
      <return type-id='7292109c'/>
    </function-decl>
    <!-- void* mmap(void*, size_t, int, int, int, __off_t) -->
    <function-decl name='mmap' filepath='/usr/include/sys/mman.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef __off_t' -->
      <parameter type-id='79989e9c'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int munmap(void*, size_t) -->
    <function-decl name='munmap' filepath='/usr/include/sys/mman.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int getpagesize() -->
    <function-decl name='getpagesize' filepath='/usr/include/unistd.h' line='992' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int () -->
    <function-type size-in-bits='64' id='276427e1'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- struct backtrace_view -->
    <class-decl name='backtrace_view' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='169' column='1' id='8d94ff69'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* backtrace_view::data -->
        <var-decl name='data' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='172' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* backtrace_view::base -->
        <var-decl name='base' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='174' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- size_t backtrace_view::len -->
        <var-decl name='len' type-id='b59d7dce' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/internal.h' line='176' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __off_t off_t -->
    <typedef-decl name='off_t' type-id='79989e9c' filepath='/usr/include/sys/types.h' line='87' column='1' id='ad707ada'/>
    <!-- backtrace_view* -->
    <pointer-type-def type-id='8d94ff69' size-in-bits='64' id='f7b405a1'/>
    <!-- int __asan_backtrace_get_view(backtrace_state*, int, off_t, size_t, backtrace_error_callback, void*, backtrace_view*) -->
    <function-decl name='__asan_backtrace_get_view' mangled-name='__asan_backtrace_get_view' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='53' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_get_view'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='53' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='descriptor' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='54' column='1'/>
      <!-- parameter of type 'typedef off_t' -->
      <parameter type-id='ad707ada' name='offset' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='54' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='size' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='54' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='55' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='56' column='1'/>
      <!-- parameter of type 'backtrace_view*' -->
      <parameter type-id='f7b405a1' name='view' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='56' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __asan_backtrace_release_view(backtrace_state*, backtrace_view*, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_release_view' mangled-name='__asan_backtrace_release_view' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='87' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_release_view'>
      <!-- parameter of type 'backtrace_state*' -->
      <parameter type-id='8687e9ed' name='state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='87' column='1'/>
      <!-- parameter of type 'backtrace_view*' -->
      <parameter type-id='f7b405a1' name='view' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='88' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='89' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/mmapio.c' line='90' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/posix.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- int fcntl(int, int, ...) -->
    <function-decl name='fcntl' filepath='/usr/include/fcntl.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int open(const char*, int, ...) -->
    <function-decl name='open' filepath='/usr/include/fcntl.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int close(int) -->
    <function-decl name='close' filepath='/usr/include/unistd.h' line='350' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int (int) -->
    <function-type size-in-bits='64' id='9b634486'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- backtrace_state* __asan_backtrace_create_state(const char*, int, backtrace_error_callback, void*) -->
    <function-decl name='__asan_backtrace_create_state' mangled-name='__asan_backtrace_create_state' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' line='46' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_backtrace_create_state'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='filename' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' line='46' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='threaded' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' line='46' column='1'/>
      <!-- parameter of type 'typedef backtrace_error_callback' -->
      <parameter type-id='43010261' name='error_callback' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' line='47' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/libbacktrace/../../libbacktrace/state.c' line='48' column='1'/>
      <!-- backtrace_state* -->
      <return type-id='8687e9ed'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C89'>
    <!-- const demangle_builtin_type_info[33] -->
    <array-type-def dimensions='1' type-id='82ec0423' size-in-bits='8448' id='d527b131'>
      <!-- <anonymous range>[33] -->
      <subrange length='33' type-id='4c87fef4' id='6a5934df'/>
    </array-type-def>
    <!-- const demangle_operator_info[62] -->
    <array-type-def dimensions='1' type-id='28c8cc97' size-in-bits='11904' id='7fb58723'>
      <!-- <anonymous range>[62] -->
      <subrange length='62' type-id='4c87fef4' id='f519cbfd'/>
    </array-type-def>
    <!-- demangle_builtin_type_info[33] -->
    <array-type-def dimensions='1' type-id='d810032e' size-in-bits='8448' id='a6660840'>
      <!-- <anonymous range>[33] -->
      <subrange length='33' type-id='4c87fef4' id='6a5934df'/>
    </array-type-def>
    <!-- demangle_operator_info[62] -->
    <array-type-def dimensions='1' type-id='cbc847f6' size-in-bits='11904' id='908d6162'>
      <!-- <anonymous range>[62] -->
      <subrange length='62' type-id='4c87fef4' id='f519cbfd'/>
    </array-type-def>
    <!-- short int -->
    <type-decl name='short int' size-in-bits='16' id='a2185560'/>
    <!-- sizetype -->
    <type-decl name='sizetype' size-in-bits='64' id='4c87fef4'/>
    <!-- unnamed&#45;enum&#45;underlying&#45;type&#45;32 -->
    <type-decl name='unnamed-enum-underlying-type-32' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='9cac1fee'/>
    <!-- typedef void (const char*, typedef size_t, void*)* demangle_callbackref -->
    <typedef-decl name='demangle_callbackref' type-id='0039c01e' filepath='../../.././libsanitizer/../include/demangle.h' line='150' column='1' id='e69e46d6'/>
    <!-- enum gnu_v3_ctor_kinds -->
    <enum-decl name='gnu_v3_ctor_kinds' filepath='../../.././libsanitizer/../include/demangle.h' line='172' column='1' id='192ea7e1'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='gnu_v3_complete_object_ctor' value='1'/>
      <enumerator name='gnu_v3_base_object_ctor' value='2'/>
      <enumerator name='gnu_v3_complete_object_allocating_ctor' value='3'/>
      <enumerator name='gnu_v3_unified_ctor' value='4'/>
      <enumerator name='gnu_v3_object_ctor_group' value='5'/>
    </enum-decl>
    <!-- enum gnu_v3_dtor_kinds -->
    <enum-decl name='gnu_v3_dtor_kinds' filepath='../../.././libsanitizer/../include/demangle.h' line='191' column='1' id='9de26e36'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='gnu_v3_deleting_dtor' value='1'/>
      <enumerator name='gnu_v3_complete_object_dtor' value='2'/>
      <enumerator name='gnu_v3_base_object_dtor' value='3'/>
      <enumerator name='gnu_v3_unified_dtor' value='4'/>
      <enumerator name='gnu_v3_object_dtor_group' value='5'/>
    </enum-decl>
    <!-- enum demangle_component_type -->
    <enum-decl name='demangle_component_type' filepath='../../.././libsanitizer/../include/demangle.h' line='223' column='1' id='79b3b2c2'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='DEMANGLE_COMPONENT_NAME' value='0'/>
      <enumerator name='DEMANGLE_COMPONENT_QUAL_NAME' value='1'/>
      <enumerator name='DEMANGLE_COMPONENT_LOCAL_NAME' value='2'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPED_NAME' value='3'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE' value='4'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE_PARAM' value='5'/>
      <enumerator name='DEMANGLE_COMPONENT_FUNCTION_PARAM' value='6'/>
      <enumerator name='DEMANGLE_COMPONENT_CTOR' value='7'/>
      <enumerator name='DEMANGLE_COMPONENT_DTOR' value='8'/>
      <enumerator name='DEMANGLE_COMPONENT_VTABLE' value='9'/>
      <enumerator name='DEMANGLE_COMPONENT_VTT' value='10'/>
      <enumerator name='DEMANGLE_COMPONENT_CONSTRUCTION_VTABLE' value='11'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO' value='12'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO_NAME' value='13'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO_FN' value='14'/>
      <enumerator name='DEMANGLE_COMPONENT_THUNK' value='15'/>
      <enumerator name='DEMANGLE_COMPONENT_VIRTUAL_THUNK' value='16'/>
      <enumerator name='DEMANGLE_COMPONENT_COVARIANT_THUNK' value='17'/>
      <enumerator name='DEMANGLE_COMPONENT_JAVA_CLASS' value='18'/>
      <enumerator name='DEMANGLE_COMPONENT_GUARD' value='19'/>
      <enumerator name='DEMANGLE_COMPONENT_TLS_INIT' value='20'/>
      <enumerator name='DEMANGLE_COMPONENT_TLS_WRAPPER' value='21'/>
      <enumerator name='DEMANGLE_COMPONENT_REFTEMP' value='22'/>
      <enumerator name='DEMANGLE_COMPONENT_HIDDEN_ALIAS' value='23'/>
      <enumerator name='DEMANGLE_COMPONENT_SUB_STD' value='24'/>
      <enumerator name='DEMANGLE_COMPONENT_RESTRICT' value='25'/>
      <enumerator name='DEMANGLE_COMPONENT_VOLATILE' value='26'/>
      <enumerator name='DEMANGLE_COMPONENT_CONST' value='27'/>
      <enumerator name='DEMANGLE_COMPONENT_RESTRICT_THIS' value='28'/>
      <enumerator name='DEMANGLE_COMPONENT_VOLATILE_THIS' value='29'/>
      <enumerator name='DEMANGLE_COMPONENT_CONST_THIS' value='30'/>
      <enumerator name='DEMANGLE_COMPONENT_REFERENCE_THIS' value='31'/>
      <enumerator name='DEMANGLE_COMPONENT_RVALUE_REFERENCE_THIS' value='32'/>
      <enumerator name='DEMANGLE_COMPONENT_VENDOR_TYPE_QUAL' value='33'/>
      <enumerator name='DEMANGLE_COMPONENT_POINTER' value='34'/>
      <enumerator name='DEMANGLE_COMPONENT_REFERENCE' value='35'/>
      <enumerator name='DEMANGLE_COMPONENT_RVALUE_REFERENCE' value='36'/>
      <enumerator name='DEMANGLE_COMPONENT_COMPLEX' value='37'/>
      <enumerator name='DEMANGLE_COMPONENT_IMAGINARY' value='38'/>
      <enumerator name='DEMANGLE_COMPONENT_BUILTIN_TYPE' value='39'/>
      <enumerator name='DEMANGLE_COMPONENT_VENDOR_TYPE' value='40'/>
      <enumerator name='DEMANGLE_COMPONENT_FUNCTION_TYPE' value='41'/>
      <enumerator name='DEMANGLE_COMPONENT_ARRAY_TYPE' value='42'/>
      <enumerator name='DEMANGLE_COMPONENT_PTRMEM_TYPE' value='43'/>
      <enumerator name='DEMANGLE_COMPONENT_FIXED_TYPE' value='44'/>
      <enumerator name='DEMANGLE_COMPONENT_VECTOR_TYPE' value='45'/>
      <enumerator name='DEMANGLE_COMPONENT_ARGLIST' value='46'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE_ARGLIST' value='47'/>
      <enumerator name='DEMANGLE_COMPONENT_INITIALIZER_LIST' value='48'/>
      <enumerator name='DEMANGLE_COMPONENT_OPERATOR' value='49'/>
      <enumerator name='DEMANGLE_COMPONENT_EXTENDED_OPERATOR' value='50'/>
      <enumerator name='DEMANGLE_COMPONENT_CAST' value='51'/>
      <enumerator name='DEMANGLE_COMPONENT_NULLARY' value='52'/>
      <enumerator name='DEMANGLE_COMPONENT_UNARY' value='53'/>
      <enumerator name='DEMANGLE_COMPONENT_BINARY' value='54'/>
      <enumerator name='DEMANGLE_COMPONENT_BINARY_ARGS' value='55'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY' value='56'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY_ARG1' value='57'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY_ARG2' value='58'/>
      <enumerator name='DEMANGLE_COMPONENT_LITERAL' value='59'/>
      <enumerator name='DEMANGLE_COMPONENT_LITERAL_NEG' value='60'/>
      <enumerator name='DEMANGLE_COMPONENT_JAVA_RESOURCE' value='61'/>
      <enumerator name='DEMANGLE_COMPONENT_COMPOUND_NAME' value='62'/>
      <enumerator name='DEMANGLE_COMPONENT_CHARACTER' value='63'/>
      <enumerator name='DEMANGLE_COMPONENT_NUMBER' value='64'/>
      <enumerator name='DEMANGLE_COMPONENT_DECLTYPE' value='65'/>
      <enumerator name='DEMANGLE_COMPONENT_GLOBAL_CONSTRUCTORS' value='66'/>
      <enumerator name='DEMANGLE_COMPONENT_GLOBAL_DESTRUCTORS' value='67'/>
      <enumerator name='DEMANGLE_COMPONENT_LAMBDA' value='68'/>
      <enumerator name='DEMANGLE_COMPONENT_DEFAULT_ARG' value='69'/>
      <enumerator name='DEMANGLE_COMPONENT_UNNAMED_TYPE' value='70'/>
      <enumerator name='DEMANGLE_COMPONENT_TRANSACTION_CLONE' value='71'/>
      <enumerator name='DEMANGLE_COMPONENT_NONTRANSACTION_CLONE' value='72'/>
      <enumerator name='DEMANGLE_COMPONENT_PACK_EXPANSION' value='73'/>
      <enumerator name='DEMANGLE_COMPONENT_TAGGED_NAME' value='74'/>
      <enumerator name='DEMANGLE_COMPONENT_CLONE' value='75'/>
    </enum-decl>
    <!-- struct demangle_component -->
    <class-decl name='demangle_component' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='453' column='1' id='ba4bc320'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component_type demangle_component::type -->
        <var-decl name='type' type-id='79b3b2c2' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='456' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- union {struct {const char* s; int len;} s_name; struct {const demangle_operator_info* op;} s_operator; struct {int args; demangle_component* name;} s_extended_operator; struct {demangle_component* length; short int accum; short int sat;} s_fixed; struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor; struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor; struct {const demangle_builtin_type_info* type;} s_builtin; struct {const char* string; int len;} s_string; struct {long int number;} s_number; struct {int character;} s_character; struct {demangle_component* left; demangle_component* right;} s_binary; struct {demangle_component* sub; int num;} s_unary_num;} demangle_component::u -->
        <var-decl name='u' type-id='ac5ab595' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='560' column='1'/>
      </data-member>
    </class-decl>
    <!-- union {struct {const char* s; int len;} s_name; struct {const demangle_operator_info* op;} s_operator; struct {int args; demangle_component* name;} s_extended_operator; struct {demangle_component* length; short int accum; short int sat;} s_fixed; struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor; struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor; struct {const demangle_builtin_type_info* type;} s_builtin; struct {const char* string; int len;} s_string; struct {long int number;} s_number; struct {int character;} s_character; struct {demangle_component* left; demangle_component* right;} s_binary; struct {demangle_component* sub; int num;} s_unary_num;} -->
    <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='458' column='1' id='ac5ab595'>
      <data-member access='public'>
        <!-- struct {const char* s; int len;} s_name -->
        <var-decl name='s_name' type-id='e7f43f72' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='467' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const demangle_operator_info* op;} s_operator -->
        <var-decl name='s_operator' type-id='e7f43f73' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='474' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {int args; demangle_component* name;} s_extended_operator -->
        <var-decl name='s_extended_operator' type-id='e7f43f74' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='483' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* length; short int accum; short int sat;} s_fixed -->
        <var-decl name='s_fixed' type-id='e7f43f75' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='494' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor -->
        <var-decl name='s_ctor' type-id='e7f43f76' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='503' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor -->
        <var-decl name='s_dtor' type-id='e7f43f77' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='512' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const demangle_builtin_type_info* type;} s_builtin -->
        <var-decl name='s_builtin' type-id='e7f43f78' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='519' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const char* string; int len;} s_string -->
        <var-decl name='s_string' type-id='e7f43f79' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='528' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {long int number;} s_number -->
        <var-decl name='s_number' type-id='e7f43f7a' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='535' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {int character;} s_character -->
        <var-decl name='s_character' type-id='e7f43f7b' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='541' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* left; demangle_component* right;} s_binary -->
        <var-decl name='s_binary' type-id='e7f43f7c' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='550' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* sub; int num;} s_unary_num -->
        <var-decl name='s_unary_num' type-id='e7f43f7d' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='558' column='1'/>
      </data-member>
    </union-decl>
    <!-- struct {const char* s; int len;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='461' column='1' id='e7f43f72'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* s -->
        <var-decl name='s' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='465' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int len -->
        <var-decl name='len' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='466' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {const demangle_operator_info* op;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='470' column='1' id='e7f43f73'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const demangle_operator_info* op -->
        <var-decl name='op' type-id='f11a4d87' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='473' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {int args; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__2' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='477' column='1' id='e7f43f74'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int args -->
        <var-decl name='args' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='480' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='482' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* length; short int accum; short int sat;} -->
    <class-decl name='__anonymous_struct__3' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='486' column='1' id='e7f43f75'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* length -->
        <var-decl name='length' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='489' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- short int accum -->
        <var-decl name='accum' type-id='a2185560' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='491' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- short int sat -->
        <var-decl name='sat' type-id='a2185560' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='493' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {gnu_v3_ctor_kinds kind; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__4' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='497' column='1' id='e7f43f76'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- gnu_v3_ctor_kinds kind -->
        <var-decl name='kind' type-id='192ea7e1' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='500' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='502' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {gnu_v3_dtor_kinds kind; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__5' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='506' column='1' id='e7f43f77'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- gnu_v3_dtor_kinds kind -->
        <var-decl name='kind' type-id='9de26e36' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='509' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='511' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {const demangle_builtin_type_info* type;} -->
    <class-decl name='__anonymous_struct__6' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='515' column='1' id='e7f43f78'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const demangle_builtin_type_info* type -->
        <var-decl name='type' type-id='228a5a2b' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='518' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {const char* string; int len;} -->
    <class-decl name='__anonymous_struct__7' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='522' column='1' id='e7f43f79'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* string -->
        <var-decl name='string' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='525' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int len -->
        <var-decl name='len' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='527' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {long int number;} -->
    <class-decl name='__anonymous_struct__8' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='531' column='1' id='e7f43f7a'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int number -->
        <var-decl name='number' type-id='bd54fe1a' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='534' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {int character;} -->
    <class-decl name='__anonymous_struct__9' size-in-bits='32' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='538' column='1' id='e7f43f7b'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int character -->
        <var-decl name='character' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='540' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* left; demangle_component* right;} -->
    <class-decl name='__anonymous_struct__10' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='544' column='1' id='e7f43f7c'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* left -->
        <var-decl name='left' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='547' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* right -->
        <var-decl name='right' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='549' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* sub; int num;} -->
    <class-decl name='__anonymous_struct__11' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='552' column='1' id='e7f43f7d'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* sub -->
        <var-decl name='sub' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='555' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int num -->
        <var-decl name='num' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/../include/demangle.h' line='557' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct demangle_operator_info -->
    <class-decl name='demangle_operator_info' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='37' column='1' id='cbc847f6'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* demangle_operator_info::code -->
        <var-decl name='code' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* demangle_operator_info::name -->
        <var-decl name='name' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int demangle_operator_info::len -->
        <var-decl name='len' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int demangle_operator_info::args -->
        <var-decl name='args' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='46' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum d_builtin_type_print -->
    <enum-decl name='d_builtin_type_print' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='51' column='1' id='46cd757d'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='D_PRINT_DEFAULT' value='0'/>
      <enumerator name='D_PRINT_INT' value='1'/>
      <enumerator name='D_PRINT_UNSIGNED' value='2'/>
      <enumerator name='D_PRINT_LONG' value='3'/>
      <enumerator name='D_PRINT_UNSIGNED_LONG' value='4'/>
      <enumerator name='D_PRINT_LONG_LONG' value='5'/>
      <enumerator name='D_PRINT_UNSIGNED_LONG_LONG' value='6'/>
      <enumerator name='D_PRINT_BOOL' value='7'/>
      <enumerator name='D_PRINT_FLOAT' value='8'/>
      <enumerator name='D_PRINT_VOID' value='9'/>
    </enum-decl>
    <!-- struct demangle_builtin_type_info -->
    <class-decl name='demangle_builtin_type_info' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='77' column='1' id='d810032e'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* demangle_builtin_type_info::name -->
        <var-decl name='name' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='80' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int demangle_builtin_type_info::len -->
        <var-decl name='len' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* demangle_builtin_type_info::java_name -->
        <var-decl name='java_name' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int demangle_builtin_type_info::java_len -->
        <var-decl name='java_len' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- d_builtin_type_print demangle_builtin_type_info::print -->
        <var-decl name='print' type-id='46cd757d' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='88' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct d_info -->
    <class-decl name='d_info' size-in-bits='768' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='93' column='1' id='b1858060'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* d_info::s -->
        <var-decl name='s' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* d_info::send -->
        <var-decl name='send' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int d_info::options -->
        <var-decl name='options' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const char* d_info::n -->
        <var-decl name='n' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- demangle_component* d_info::comps -->
        <var-decl name='comps' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int d_info::next_comp -->
        <var-decl name='next_comp' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- int d_info::num_comps -->
        <var-decl name='num_comps' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- demangle_component** d_info::subs -->
        <var-decl name='subs' type-id='2d318324' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='110' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- int d_info::next_sub -->
        <var-decl name='next_sub' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='112' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int d_info::num_subs -->
        <var-decl name='num_subs' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int d_info::did_subs -->
        <var-decl name='did_subs' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='118' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- demangle_component* d_info::last_name -->
        <var-decl name='last_name' type-id='e1bff6e6' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='120' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- int d_info::expansion -->
        <var-decl name='expansion' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='672'>
        <!-- int d_info::is_expression -->
        <var-decl name='is_expression' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='126' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- int d_info::is_conversion -->
        <var-decl name='is_conversion' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.h' line='129' column='1'/>
      </data-member>
    </class-decl>
    <!-- const demangle_builtin_type_info -->
    <qualified-type-def type-id='d810032e' const='yes' id='82ec0423'/>
    <!-- const demangle_builtin_type_info* -->
    <pointer-type-def type-id='82ec0423' size-in-bits='64' id='228a5a2b'/>
    <!-- const demangle_component -->
    <qualified-type-def type-id='ba4bc320' const='yes' id='0c7361ad'/>
    <!-- const demangle_component* -->
    <pointer-type-def type-id='0c7361ad' size-in-bits='64' id='20a28785'/>
    <!-- const demangle_operator_info -->
    <qualified-type-def type-id='cbc847f6' const='yes' id='28c8cc97'/>
    <!-- const demangle_operator_info* -->
    <pointer-type-def type-id='28c8cc97' size-in-bits='64' id='f11a4d87'/>
    <!-- d_info* -->
    <pointer-type-def type-id='b1858060' size-in-bits='64' id='89d35836'/>
    <!-- demangle_component* -->
    <pointer-type-def type-id='ba4bc320' size-in-bits='64' id='e1bff6e6'/>
    <!-- demangle_component** -->
    <pointer-type-def type-id='e1bff6e6' size-in-bits='64' id='2d318324'/>
    <!-- size_t* -->
    <pointer-type-def type-id='b59d7dce' size-in-bits='64' id='78c01427'/>
    <!-- void (const char*, typedef size_t, void*)* -->
    <pointer-type-def type-id='92128534' size-in-bits='64' id='0039c01e'/>
    <!-- int __asan_cplus_demangle_fill_name(demangle_component*, const char*, int) -->
    <function-decl name='__asan_cplus_demangle_fill_name' mangled-name='__asan_cplus_demangle_fill_name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='783' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_fill_name'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='p' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='783' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='783' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='len' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='783' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_cplus_demangle_fill_extended_operator(demangle_component*, int, demangle_component*) -->
    <function-decl name='__asan_cplus_demangle_fill_extended_operator' mangled-name='__asan_cplus_demangle_fill_extended_operator' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='797' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_fill_extended_operator'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='p' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='797' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='args' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='797' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='798' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_cplus_demangle_fill_ctor(demangle_component*, gnu_v3_ctor_kinds, demangle_component*) -->
    <function-decl name='__asan_cplus_demangle_fill_ctor' mangled-name='__asan_cplus_demangle_fill_ctor' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='812' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_fill_ctor'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='p' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='812' column='1'/>
      <!-- parameter of type 'enum gnu_v3_ctor_kinds' -->
      <parameter type-id='192ea7e1' name='kind' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='813' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='814' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_cplus_demangle_fill_dtor(demangle_component*, gnu_v3_dtor_kinds, demangle_component*) -->
    <function-decl name='__asan_cplus_demangle_fill_dtor' mangled-name='__asan_cplus_demangle_fill_dtor' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='831' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_fill_dtor'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='p' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='831' column='1'/>
      <!-- parameter of type 'enum gnu_v3_dtor_kinds' -->
      <parameter type-id='9de26e36' name='kind' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='832' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='e1bff6e6' name='name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='833' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- demangle_component* __asan_cplus_demangle_mangled_name(d_info*, int) -->
    <function-decl name='__asan_cplus_demangle_mangled_name' mangled-name='__asan_cplus_demangle_mangled_name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='1140' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_mangled_name'>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='89d35836' name='di' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='1140' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='top_level' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='1140' column='1'/>
      <!-- demangle_component* -->
      <return type-id='e1bff6e6'/>
    </function-decl>
    <!-- const demangle_operator_info __asan_cplus_demangle_operators[62] -->
    <var-decl name='__asan_cplus_demangle_operators' type-id='7fb58723' mangled-name='__asan_cplus_demangle_operators' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='1688' column='1' elf-symbol-id='__asan_cplus_demangle_operators'/>
    <!-- const demangle_builtin_type_info __asan_cplus_demangle_builtin_types[33] -->
    <var-decl name='__asan_cplus_demangle_builtin_types' type-id='d527b131' mangled-name='__asan_cplus_demangle_builtin_types' visibility='default' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='2188' column='1' elf-symbol-id='__asan_cplus_demangle_builtin_types'/>
    <!-- demangle_component* __asan_cplus_demangle_type(d_info*) -->
    <function-decl name='__asan_cplus_demangle_type' mangled-name='__asan_cplus_demangle_type' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='2230' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_type'>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='89d35836' name='di' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='2230' column='1'/>
      <!-- demangle_component* -->
      <return type-id='e1bff6e6'/>
    </function-decl>
    <!-- int __asan_cplus_demangle_print_callback(int, const demangle_component*, demangle_callbackref, void*) -->
    <function-decl name='__asan_cplus_demangle_print_callback' mangled-name='__asan_cplus_demangle_print_callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4029' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_print_callback'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4029' column='1'/>
      <!-- parameter of type 'const demangle_component*' -->
      <parameter type-id='20a28785' name='dc' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4030' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='e69e46d6' name='callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4031' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='opaque' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4031' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __asan_cplus_demangle_print(int, const demangle_component*, int, size_t*) -->
    <function-decl name='__asan_cplus_demangle_print' mangled-name='__asan_cplus_demangle_print' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4069' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_print'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4069' column='1'/>
      <!-- parameter of type 'const demangle_component*' -->
      <parameter type-id='20a28785' name='dc' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4069' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='estimate' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4070' column='1'/>
      <!-- parameter of type 'size_t*' -->
      <parameter type-id='78c01427' name='palc' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='4070' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- void __asan_cplus_demangle_init_info(const char*, int, size_t, d_info*) -->
    <function-decl name='__asan_cplus_demangle_init_info' mangled-name='__asan_cplus_demangle_init_info' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='5731' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_init_info'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='5731' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='5731' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce' name='len' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='5731' column='1'/>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='89d35836' name='di' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='5732' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- char* __asan_cplus_demangle_v3(const char*, int) -->
    <function-decl name='__asan_cplus_demangle_v3' mangled-name='__asan_cplus_demangle_v3' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6018' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_v3'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6018' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6018' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __asan_cplus_demangle_v3_callback(const char*, int, demangle_callbackref, void*) -->
    <function-decl name='__asan_cplus_demangle_v3_callback' mangled-name='__asan_cplus_demangle_v3_callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6026' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_cplus_demangle_v3_callback'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6026' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6026' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='e69e46d6' name='callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6027' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='opaque' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6027' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __asan_java_demangle_v3(const char*) -->
    <function-decl name='__asan_java_demangle_v3' mangled-name='__asan_java_demangle_v3' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6039' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_java_demangle_v3'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6039' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __asan_java_demangle_v3_callback(const char*, demangle_callbackref, void*) -->
    <function-decl name='__asan_java_demangle_v3_callback' mangled-name='__asan_java_demangle_v3_callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6047' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_java_demangle_v3_callback'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6047' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='e69e46d6' name='callback' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6048' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='opaque' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6048' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- gnu_v3_ctor_kinds __asan_is_gnu_v3_mangled_ctor(const char*) -->
    <function-decl name='__asan_is_gnu_v3_mangled_ctor' mangled-name='__asan_is_gnu_v3_mangled_ctor' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6137' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_is_gnu_v3_mangled_ctor'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6137' column='1'/>
      <!-- enum gnu_v3_ctor_kinds -->
      <return type-id='192ea7e1'/>
    </function-decl>
    <!-- gnu_v3_dtor_kinds __asan_is_gnu_v3_mangled_dtor(const char*) -->
    <function-decl name='__asan_is_gnu_v3_mangled_dtor' mangled-name='__asan_is_gnu_v3_mangled_dtor' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6152' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__asan_is_gnu_v3_mangled_dtor'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6152' column='1'/>
      <!-- enum gnu_v3_dtor_kinds -->
      <return type-id='9de26e36'/>
    </function-decl>
    <!-- int __asan_internal_memcmp(void*, void*, size_t) -->
    <function-decl name='__asan_internal_memcmp' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __asan_internal_strncmp(const char*, const char*, size_t) -->
    <function-decl name='__asan_internal_strncmp' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- size_t __asan_internal_strlen(const char*) -->
    <function-decl name='__asan_internal_strlen' filepath='../../.././libsanitizer/libbacktrace/backtrace-rename.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- typedef size_t -->
      <return type-id='b59d7dce'/>
    </function-decl>
    <!-- int sprintf(char*, const char*, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='363' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='485' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/stdlib.h' line='488' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void (const char*, size_t, void*) -->
    <function-type size-in-bits='64' id='92128534'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- char* (const char*) -->
    <function-type size-in-bits='64' id='1258b361'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- void (void*) -->
    <function-type size-in-bits='64' id='c5c76c9c'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/libbacktrace/bridge.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/libbacktrace' language='LANG_C_plus_plus'>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- typedef unsigned long int __sanitizer::uptr -->
      <typedef-decl name='uptr' type-id='7359adad' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='56' column='1' id='c8e929d2'/>
    </namespace-decl>
    <!-- int (const char*, const char*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='55d73658'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='8a0bb7d6'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- __sanitizer::uptr (const char*) -->
    <function-type size-in-bits='64' id='289dc5a2'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-type>
    <!-- void* (void*, int, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='78df7a12'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (void*, void*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='3211796b'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- Header*[262144] -->
    <array-type-def dimensions='1' type-id='6cdced3a' size-in-bits='16777216' id='787a4dbd'>
      <!-- <anonymous range>[262144] -->
      <subrange length='262144' type-id='4c87fef4' id='67de4cb2'/>
    </array-type-def>
    <!-- SizeClassInfo[53] -->
    <array-type-def dimensions='1' type-id='77aae7d3' size-in-bits='27136' id='08341acb'>
      <!-- <anonymous range>[53] -->
      <subrange length='53' type-id='4c87fef4' id='3c1a9f65'/>
    </array-type-def>
    <!-- PerClass[53] -->
    <array-type-def dimensions='1' type-id='5c83a039' size-in-bits='440960' id='0109b7a1'>
      <!-- <anonymous range>[53] -->
      <subrange length='53' type-id='4c87fef4' id='3c1a9f65'/>
    </array-type-def>
    <!-- atomic_uint64_t[4] -->
    <array-type-def dimensions='1' type-id='46b20e41' size-in-bits='256' id='05604081'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='4c87fef4' id='16fe7105'/>
    </array-type-def>
    <!-- atomic_uintptr_t[2048] -->
    <array-type-def dimensions='1' type-id='48f335b9' size-in-bits='131072' id='115e0027'>
      <!-- <anonymous range>[2048] -->
      <subrange length='2048' type-id='4c87fef4' id='e5323efb'/>
    </array-type-def>
    <!-- char[32] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='256' id='16dc656a'>
      <!-- <anonymous range>[32] -->
      <subrange length='32' type-id='4c87fef4' id='ae5bde82'/>
    </array-type-def>
    <!-- unsigned long int[64] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='4096' id='3f38563f'>
      <!-- <anonymous range>[64] -->
      <subrange length='64' type-id='4c87fef4' id='b10be967'/>
    </array-type-def>
    <!-- void*[128] -->
    <array-type-def dimensions='1' type-id='eaa32e2f' size-in-bits='8192' id='47dd7ec8'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- void*[64] -->
    <array-type-def dimensions='1' type-id='eaa32e2f' size-in-bits='4096' id='56f066f9'>
      <!-- <anonymous range>[64] -->
      <subrange length='64' type-id='4c87fef4' id='b10be967'/>
    </array-type-def>
    <!-- __sanitizer::AllocatorGlobalStats* -->
    <pointer-type-def type-id='e586be27' size-in-bits='64' id='962983ef'/>
    <!-- __sanitizer::AllocatorStats* -->
    <pointer-type-def type-id='d97dbaba' size-in-bits='64' id='71e94878'/>
    <!-- __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >* -->
    <pointer-type-def type-id='119903f8' size-in-bits='64' id='b6513ace'/>
    <!-- __sanitizer::CommonFlags* -->
    <pointer-type-def type-id='b603f416' size-in-bits='64' id='5b7f17ec'/>
    <!-- __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>* -->
    <pointer-type-def type-id='60399268' size-in-bits='64' id='c46c724e'/>
    <!-- __sanitizer::InternalAllocator* -->
    <pointer-type-def type-id='a6afb05d' size-in-bits='64' id='02872a6a'/>
    <!-- __sanitizer::InternalAllocatorCache* -->
    <pointer-type-def type-id='1703d8dd' size-in-bits='64' id='92b9b9fc'/>
    <!-- __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>* -->
    <pointer-type-def type-id='0a5cf380' size-in-bits='64' id='f5ef6db6'/>
    <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>* -->
    <pointer-type-def type-id='2fd4a5b9' size-in-bits='64' id='d24b2ce1'/>
    <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* -->
    <pointer-type-def type-id='5331122c' size-in-bits='64' id='6cdced3a'/>
    <!-- __sanitizer::LowLevelAllocator* -->
    <pointer-type-def type-id='78f20903' size-in-bits='64' id='5e6e9e43'/>
    <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>* -->
    <pointer-type-def type-id='cc039988' size-in-bits='64' id='10b7d6fe'/>
    <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache* -->
    <pointer-type-def type-id='1bfa7a0a' size-in-bits='64' id='18f25021'/>
    <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch* -->
    <pointer-type-def type-id='21e3ade9' size-in-bits='64' id='e70acaaa'/>
    <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo* -->
    <pointer-type-def type-id='77aae7d3' size-in-bits='64' id='65509e83'/>
    <!-- __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >* -->
    <pointer-type-def type-id='cdd6cfb4' size-in-bits='64' id='8ebf0942'/>
    <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* -->
    <pointer-type-def type-id='fd7147de' size-in-bits='64' id='f62f8fc4'/>
    <!-- __sanitizer::SpinMutex* -->
    <pointer-type-def type-id='ae453aa5' size-in-bits='64' id='97841cd5'/>
    <!-- __sanitizer::StaticSpinMutex* -->
    <pointer-type-def type-id='c5c2fa97' size-in-bits='64' id='2c3af02f'/>
    <!-- __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>* -->
    <pointer-type-def type-id='31cd61f0' size-in-bits='64' id='8cb66236'/>
    <!-- __sanitizer::u64* -->
    <pointer-type-def type-id='ceed60aa' size-in-bits='64' id='92a71083'/>
    <!-- __sanitizer::u8* -->
    <pointer-type-def type-id='62fe98d0' size-in-bits='64' id='403b104b'/>
    <!-- const __sanitizer::AllocatorGlobalStats -->
    <qualified-type-def type-id='e586be27' const='yes' id='905a378c'/>
    <!-- const __sanitizer::AllocatorGlobalStats* -->
    <pointer-type-def type-id='905a378c' size-in-bits='64' id='e4059a52'/>
    <!-- const __sanitizer::AllocatorStats -->
    <qualified-type-def type-id='d97dbaba' const='yes' id='04b22859'/>
    <!-- const __sanitizer::AllocatorStats* -->
    <pointer-type-def type-id='04b22859' size-in-bits='64' id='d775ad09'/>
    <!-- const __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> > -->
    <qualified-type-def type-id='119903f8' const='yes' id='3f7ef1f9'/>
    <!-- const __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >* -->
    <pointer-type-def type-id='3f7ef1f9' size-in-bits='64' id='c7d6af29'/>
    <!-- const __sanitizer::CrashOnMapUnmap -->
    <qualified-type-def type-id='783b9e85' const='yes' id='9824c934'/>
    <!-- const __sanitizer::CrashOnMapUnmap* -->
    <pointer-type-def type-id='9824c934' size-in-bits='64' id='9fe89a3a'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex> -->
    <qualified-type-def type-id='60399268' const='yes' id='19ae1405'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>& -->
    <reference-type-def kind='lvalue' type-id='19ae1405' size-in-bits='64' id='9009b319'/>
    <!-- const __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch> -->
    <qualified-type-def type-id='0a5cf380' const='yes' id='81ba86a5'/>
    <!-- const __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>* -->
    <pointer-type-def type-id='81ba86a5' size-in-bits='64' id='c7a1d31d'/>
    <!-- const __sanitizer::NoOpMapUnmapCallback -->
    <qualified-type-def type-id='85b37b38' const='yes' id='ee1e904b'/>
    <!-- const __sanitizer::NoOpMapUnmapCallback* -->
    <pointer-type-def type-id='ee1e904b' size-in-bits='64' id='3b1d48b3'/>
    <!-- const __sanitizer::SpinMutex -->
    <qualified-type-def type-id='ae453aa5' const='yes' id='e9196088'/>
    <!-- const __sanitizer::SpinMutex& -->
    <reference-type-def kind='lvalue' type-id='e9196088' size-in-bits='64' id='a0f331ea'/>
    <!-- const __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback> -->
    <qualified-type-def type-id='31cd61f0' const='yes' id='54ec930f'/>
    <!-- const __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>* -->
    <pointer-type-def type-id='54ec930f' size-in-bits='64' id='d56ba33f'/>
    <!-- const __sanitizer::uptr -->
    <qualified-type-def type-id='c8e929d2' const='yes' id='870ffec2'/>
    <!-- const int -->
    <qualified-type-def type-id='95e97e5e' const='yes' id='2448a865'/>
    <!-- const volatile __sanitizer::atomic_uint64_t -->
    <qualified-type-def type-id='2cc60feb' const='yes' id='fd276754'/>
    <!-- const volatile __sanitizer::atomic_uint64_t* -->
    <pointer-type-def type-id='fd276754' size-in-bits='64' id='0307eb5a'/>
    <!-- const volatile __sanitizer::atomic_uint8_t -->
    <qualified-type-def type-id='bc18d65d' const='yes' id='40672b14'/>
    <!-- const volatile __sanitizer::atomic_uint8_t* -->
    <pointer-type-def type-id='40672b14' size-in-bits='64' id='a069129a'/>
    <!-- const volatile __sanitizer::atomic_uintptr_t -->
    <qualified-type-def type-id='8d2caa8f' const='yes' id='19d7f142'/>
    <!-- const volatile __sanitizer::atomic_uintptr_t* -->
    <pointer-type-def type-id='19d7f142' size-in-bits='64' id='16f106b8'/>
    <!-- void (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='c147927c' size-in-bits='64' id='9f2b2a0e'/>
    <!-- void (typedef __sanitizer::uptr, void*)* -->
    <pointer-type-def type-id='930359b3' size-in-bits='64' id='614c624f'/>
    <!-- volatile __sanitizer::atomic_uint64_t -->
    <qualified-type-def type-id='46b20e41' volatile='yes' id='2cc60feb'/>
    <!-- volatile __sanitizer::atomic_uint64_t* -->
    <pointer-type-def type-id='2cc60feb' size-in-bits='64' id='3ccaccd3'/>
    <!-- volatile __sanitizer::atomic_uint64_t::Type -->
    <qualified-type-def type-id='6805d964' volatile='yes' id='48f79e83'/>
    <!-- volatile __sanitizer::atomic_uint8_t -->
    <qualified-type-def type-id='2fc373cb' volatile='yes' id='bc18d65d'/>
    <!-- volatile __sanitizer::atomic_uint8_t* -->
    <pointer-type-def type-id='bc18d65d' size-in-bits='64' id='92199d55'/>
    <!-- volatile __sanitizer::atomic_uint8_t::Type -->
    <qualified-type-def type-id='b02550ac' volatile='yes' id='1307e4e5'/>
    <!-- volatile __sanitizer::atomic_uintptr_t -->
    <qualified-type-def type-id='48f335b9' volatile='yes' id='8d2caa8f'/>
    <!-- volatile __sanitizer::atomic_uintptr_t* -->
    <pointer-type-def type-id='8d2caa8f' size-in-bits='64' id='e250a1bf'/>
    <!-- volatile __sanitizer::atomic_uintptr_t::Type -->
    <qualified-type-def type-id='748d5322' volatile='yes' id='0ebc8057'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::SizeClassMap<17ul, 64ul, 14ul> -->
      <class-decl name='SizeClassMap&lt;17ul, 64ul, 14ul&gt;' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='89' column='1' id='7a6f0121'>
        <member-type access='public'>
          <!-- struct __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch -->
          <class-decl name='TransferBatch' size-in-bits='4224' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='103' column='1' id='fd7147de'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch::next -->
              <var-decl name='next' type-id='f62f8fc4' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='104' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch::count -->
              <var-decl name='count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='105' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- void* __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch::batch[64] -->
              <var-decl name='batch' type-id='56f066f9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='106' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMinSizeLog -->
          <var-decl name='kMinSizeLog' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='90' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMidSizeLog -->
          <var-decl name='kMidSizeLog' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='91' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMinSize -->
          <var-decl name='kMinSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='92' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMidSize -->
          <var-decl name='kMidSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='93' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMidClass -->
          <var-decl name='kMidClass' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='94' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::S -->
          <var-decl name='S' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='95' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::M -->
          <var-decl name='M' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='96' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMaxNumCached -->
          <var-decl name='kMaxNumCached' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='99' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kMaxSize -->
          <var-decl name='kMaxSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='109' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='110' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::kNumClassesRounded -->
          <var-decl name='kNumClassesRounded' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='113' column='1'/>
        </data-member>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::ClassID() -->
          <function-decl name='ClassID' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm64ELm14EE7ClassIDEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::Size() -->
          <function-decl name='Size' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm64ELm14EE4SizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::MaxCached() -->
          <function-decl name='MaxCached' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm64ELm14EE9MaxCachedEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::SizeClassRequiresSeparateTransferBatch() -->
          <function-decl name='SizeClassRequiresSeparateTransferBatch' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm64ELm14EE38SizeClassRequiresSeparateTransferBatchEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __sanitizer::AllocatorStat -->
      <enum-decl name='AllocatorStat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='198' column='1' id='d3f20cd4'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='AllocatorStatMalloced' value='0'/>
        <enumerator name='AllocatorStatFreed' value='1'/>
        <enumerator name='AllocatorStatMmapped' value='2'/>
        <enumerator name='AllocatorStatUnmapped' value='3'/>
        <enumerator name='AllocatorStatCount' value='4'/>
      </enum-decl>
      <!-- class __sanitizer::AllocatorStats -->
      <class-decl name='AllocatorStats' size-in-bits='384' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='209' column='1' id='d97dbaba'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::AllocatorStats* __sanitizer::AllocatorStats::next_ -->
          <var-decl name='next_' type-id='71e94878' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='230' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::AllocatorStats* __sanitizer::AllocatorStats::prev_ -->
          <var-decl name='prev_' type-id='71e94878' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='231' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::atomic_uint64_t __sanitizer::AllocatorStats::stats_[4] -->
          <var-decl name='stats_' type-id='05604081' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='232' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::AllocatorStats::Add(__sanitizer::AllocatorStat, __sanitizer::u64) -->
          <function-decl name='Add' mangled-name='_ZN11__sanitizer14AllocatorStats3AddENS_13AllocatorStatEy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='215' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878' is-artificial='yes'/>
            <!-- parameter of type 'enum __sanitizer::AllocatorStat' -->
            <parameter type-id='d3f20cd4'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __sanitizer::AllocatorStats::Get(__sanitizer::AllocatorStat) -->
          <function-decl name='Get' mangled-name='_ZNK11__sanitizer14AllocatorStats3GetENS_13AllocatorStatE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='224' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AllocatorStats*' -->
            <parameter type-id='d775ad09' is-artificial='yes'/>
            <!-- parameter of type 'enum __sanitizer::AllocatorStat' -->
            <parameter type-id='d3f20cd4'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::AllocatorStats::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer14AllocatorStats4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='211' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::AllocatorGlobalStats -->
      <class-decl name='AllocatorGlobalStats' size-in-bits='448' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='236' column='1' id='e586be27'>
        <!-- class __sanitizer::AllocatorStats -->
        <base-class access='public' layout-offset-in-bits='0' type-id='d97dbaba'/>
        <data-member access='private' layout-offset-in-bits='384'>
          <!-- __sanitizer::SpinMutex __sanitizer::AllocatorGlobalStats::mu_ -->
          <var-decl name='mu_' type-id='ae453aa5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='274' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::AllocatorGlobalStats::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer20AllocatorGlobalStats4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='238' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::AllocatorGlobalStats::Register(__sanitizer::AllocatorStats*) -->
          <function-decl name='Register' mangled-name='_ZN11__sanitizer20AllocatorGlobalStats8RegisterEPNS_14AllocatorStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void __sanitizer::AllocatorGlobalStats::Get(__sanitizer::u64*) -->
          <function-decl name='Get' mangled-name='_ZNK11__sanitizer20AllocatorGlobalStats3GetEPy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='260' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='e4059a52' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::u64*' -->
            <parameter type-id='92a71083'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::AllocatorGlobalStats::Unregister(__sanitizer::AllocatorStats*) -->
          <function-decl name='Unregister' mangled-name='_ZN11__sanitizer20AllocatorGlobalStats10UnregisterEPNS_14AllocatorStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::NoOpMapUnmapCallback -->
      <class-decl name='NoOpMapUnmapCallback' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='278' column='1' id='85b37b38'>
        <member-function access='public' const='yes'>
          <!-- void __sanitizer::NoOpMapUnmapCallback::OnMap(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='OnMap' mangled-name='_ZNK11__sanitizer20NoOpMapUnmapCallback5OnMapEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='279' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::NoOpMapUnmapCallback*' -->
            <parameter type-id='3b1d48b3' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef void (typedef __sanitizer::uptr, void*)* __sanitizer::ForEachChunkCallback -->
      <typedef-decl name='ForEachChunkCallback' type-id='614c624f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='284' column='1' id='3124ca59'/>
      <!-- class __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback> -->
      <class-decl name='TwoLevelByteMap&lt;2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback&gt;' size-in-bits='131136' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='594' column='1' id='31cd61f0'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::atomic_uintptr_t __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::map1_[2048] -->
          <var-decl name='map1_' type-id='115e0027' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='648' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='131072'>
          <!-- __sanitizer::StaticSpinMutex __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::mu_ -->
          <var-decl name='mu_' type-id='c5c2fa97' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='649' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::TestOnlyInit() -->
          <function-decl name='TestOnlyInit' mangled-name='_ZN11__sanitizer15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEE12TestOnlyInitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='596' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='8cb66236' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' const='yes'>
          <!-- __sanitizer::u8* __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::Get(__sanitizer::uptr) -->
          <function-decl name='Get' mangled-name='_ZNK11__sanitizer15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEE3GetEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='628' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='d56ba33f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::u8* -->
            <return type-id='403b104b'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u8 __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK11__sanitizer15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='d56ba33f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::u8 -->
            <return type-id='62fe98d0'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::u8* __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::GetOrCreate(__sanitizer::uptr) -->
          <function-decl name='GetOrCreate' mangled-name='_ZN11__sanitizer15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEE11GetOrCreateEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='634' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='8cb66236' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::u8* -->
            <return type-id='403b104b'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>::set(__sanitizer::uptr, __sanitizer::u8) -->
          <function-decl name='set' mangled-name='_ZN11__sanitizer15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEE3setEmh' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='613' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='8cb66236' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::u8' -->
            <parameter type-id='62fe98d0'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> -->
      <class-decl name='SizeClassAllocator32&lt;0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap&lt;17ul, 64ul, 14ul&gt;, 24ul, __sanitizer::TwoLevelByteMap&lt;2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback&gt;, __sanitizer::NoOpMapUnmapCallback&gt;' size-in-bits='158272' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='677' column='1' id='cc039988'>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch -->
          <typedef-decl name='Batch' type-id='fd7147de' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='679' column='1' id='21e3ade9'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> > __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache -->
          <typedef-decl name='AllocatorCache' type-id='cdd6cfb4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='682' column='1' id='1bfa7a0a'/>
        </member-type>
        <member-type access='private'>
          <!-- struct __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo -->
          <class-decl name='SizeClassInfo' size-in-bits='512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='820' column='1' id='77aae7d3'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::SpinMutex __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo::mutex -->
              <var-decl name='mutex' type-id='ae453aa5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='821' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch> __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo::free_list -->
              <var-decl name='free_list' type-id='0a5cf380' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='822' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='256'>
              <!-- char __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo::padding[32] -->
              <var-decl name='padding' type-id='16dc656a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='823' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='814' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::kRegionSize -->
          <var-decl name='kRegionSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='817' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::kNumPossibleRegions -->
          <var-decl name='kNumPossibleRegions' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='818' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback> __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::possible_regions -->
          <var-decl name='possible_regions' type-id='31cd61f0' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='881' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='131136'>
          <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::size_class_info_array[53] -->
          <var-decl name='size_class_info_array' type-id='08341acb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='882' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::ClassID(__sanitizer::uptr) -->
          <function-decl name='ClassID' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E7ClassIDEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='762' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::ComputeRegionId(__sanitizer::uptr) -->
          <function-decl name='ComputeRegionId' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E15ComputeRegionIdEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='827' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo* __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::GetSizeClassInfo(__sanitizer::uptr) -->
          <function-decl name='GetSizeClassInfo' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E16GetSizeClassInfoEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='848' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo* -->
            <return type-id='65509e83'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::GetSizeClass(void*) -->
          <function-decl name='GetSizeClass' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E12GetSizeClassEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='742' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::DeallocateBatch(__sanitizer::AllocatorStats*, __sanitizer::uptr, __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch*) -->
          <function-decl name='DeallocateBatch' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='730' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch*' -->
            <parameter type-id='e70acaaa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocateRegion(__sanitizer::AllocatorStats*, __sanitizer::uptr) -->
          <function-decl name='AllocateRegion' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E14AllocateRegionEPNS_14AllocatorStatsEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='837' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::CanAllocate(__sanitizer::uptr) -->
          <function-decl name='CanAllocate' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E11CanAllocateEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='701' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='684' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::PopulateFreeList(__sanitizer::AllocatorStats*, __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache*, __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo*, __sanitizer::uptr) -->
          <function-decl name='PopulateFreeList' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E16PopulateFreeListEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS6_EEPNS6_13SizeClassInfoEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='853' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache*' -->
            <parameter type-id='18f25021'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::SizeClassInfo*' -->
            <parameter type-id='65509e83'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch* __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocateBatch(__sanitizer::AllocatorStats*, __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache*, __sanitizer::uptr) -->
          <function-decl name='AllocateBatch' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS6_EEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='717' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::AllocatorCache*' -->
            <parameter type-id='18f25021'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::Batch* -->
            <return type-id='e70acaaa'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>::PointerIsMine(void*) -->
          <function-decl name='PointerIsMine' mangled-name='_ZN11__sanitizer20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES4_E13PointerIsMineEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='738' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> > -->
      <class-decl name='SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator32&lt;0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap&lt;17ul, 64ul, 14ul&gt;, 24ul, __sanitizer::TwoLevelByteMap&lt;2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback&gt;, __sanitizer::NoOpMapUnmapCallback&gt; &gt;' size-in-bits='441344' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='889' column='1' id='cdd6cfb4'>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Batch -->
          <typedef-decl name='Batch' type-id='fd7147de' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='941' column='1' id='6e12dfa1'/>
        </member-type>
        <member-type access='public'>
          <!-- struct __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::PerClass -->
          <class-decl name='PerClass' size-in-bits='8320' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='942' column='1' id='5c83a039'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::PerClass::count -->
              <var-decl name='count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='943' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::PerClass::max_count -->
              <var-decl name='max_count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='944' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- void* __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::PerClass::batch[128] -->
              <var-decl name='batch' type-id='47dd7ec8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='945' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='891' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::PerClass __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::per_class_[53] -->
          <var-decl name='per_class_' type-id='0109b7a1' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='947' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='440960'>
          <!-- __sanitizer::AllocatorStats __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::stats_ -->
          <var-decl name='stats_' type-id='d97dbaba' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='948' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::InitCache() -->
          <function-decl name='InitCache' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE9InitCacheEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='950' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Allocate(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE8AllocateEPS7_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='905' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Deallocate(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*, __sanitizer::uptr, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE10DeallocateEPS7_mPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='917' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Refill(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Refill' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE6RefillEPS7_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='959' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Drain(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Drain' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE5DrainEPS7_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='971' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Init(__sanitizer::AllocatorGlobalStats*) -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE4InitEPNS_20AllocatorGlobalStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='893' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Destroy(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*, __sanitizer::AllocatorGlobalStats*) -->
          <function-decl name='Destroy' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE7DestroyEPS7_PNS_20AllocatorGlobalStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='899' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >::Drain(__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*) -->
          <function-decl name='Drain' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EEE5DrainEPS7_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='931' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>*' -->
            <parameter type-id='10b7d6fe'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> -->
      <class-decl name='LargeMmapAllocator&lt;__sanitizer::CrashOnMapUnmap&gt;' size-in-bits='16781952' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='995' column='1' id='2fd4a5b9'>
        <member-type access='private'>
          <!-- struct __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header -->
          <class-decl name='Header' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1186' column='1' id='5331122c'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header::map_beg -->
              <var-decl name='map_beg' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1187' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header::map_size -->
              <var-decl name='map_size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1188' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header::size -->
              <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1189' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header::chunk_idx -->
              <var-decl name='chunk_idx' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1190' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <member-type access='private'>
          <!-- struct __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats -->
          <class-decl name='Stats' size-in-bits='4352' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1215' column='1' id='0df76e78'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats::n_allocs -->
              <var-decl name='n_allocs' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats::n_frees -->
              <var-decl name='n_frees' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats::currently_allocated -->
              <var-decl name='currently_allocated' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats::max_allocated -->
              <var-decl name='max_allocated' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='256'>
              <!-- unsigned long int __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats::by_size_log[64] -->
              <var-decl name='by_size_log' type-id='3f38563f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const int __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::kMaxNumChunks -->
          <var-decl name='kMaxNumChunks' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1185' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::page_size_ -->
          <var-decl name='page_size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1210' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::chunks_[262144] -->
          <var-decl name='chunks_' type-id='787a4dbd' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1211' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777280'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::n_chunks_ -->
          <var-decl name='n_chunks_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1212' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777344'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::min_mmap_ -->
          <var-decl name='min_mmap_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1213' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777408'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::max_mmap_ -->
          <var-decl name='max_mmap_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1213' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777472'>
          <!-- bool __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::chunks_sorted_ -->
          <var-decl name='chunks_sorted_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1214' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777536'>
          <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Stats __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::stats -->
          <var-decl name='stats' type-id='0df76e78' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1217' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16781888'>
          <!-- __sanitizer::SpinMutex __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::mutex_ -->
          <var-decl name='mutex_' type-id='ae453aa5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1218' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::RoundUpMapSize(__sanitizer::uptr) -->
          <function-decl name='RoundUpMapSize' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE14RoundUpMapSizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1206' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Allocate(__sanitizer::AllocatorStats*, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE8AllocateEPNS_14AllocatorStatsEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1002' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::GetHeader(void*) -->
          <function-decl name='GetHeader' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE9GetHeaderEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1197' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* -->
            <return type-id='6cdced3a'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='997' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::GetHeader(__sanitizer::uptr) -->
          <function-decl name='GetHeader' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE9GetHeaderEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1193' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Header* -->
            <return type-id='6cdced3a'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>::Deallocate(__sanitizer::AllocatorStats*, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorINS_15CrashOnMapUnmapEE10DeallocateEPNS_14AllocatorStatsEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1040' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap>*' -->
            <parameter type-id='d24b2ce1' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> > -->
      <class-decl name='CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap&lt;17ul, 64ul, 14ul&gt;, 24ul, __sanitizer::TwoLevelByteMap&lt;2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback&gt;, __sanitizer::NoOpMapUnmapCallback&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator32&lt;0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap&lt;17ul, 64ul, 14ul&gt;, 24ul, __sanitizer::TwoLevelByteMap&lt;2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback&gt;, __sanitizer::NoOpMapUnmapCallback&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__sanitizer::CrashOnMapUnmap&gt; &gt;' size-in-bits='16940672' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1229' column='1' id='119903f8'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::primary_ -->
          <var-decl name='primary_' type-id='cc039988' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1368' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='158272'>
          <!-- __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::secondary_ -->
          <var-decl name='secondary_' type-id='2fd4a5b9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1369' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16940224'>
          <!-- __sanitizer::AllocatorGlobalStats __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::stats_ -->
          <var-decl name='stats_' type-id='e586be27' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1370' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void* __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::Allocate(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*, __sanitizer::uptr, __sanitizer::uptr, bool) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE8AllocateEPS9_mmb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1237' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1231' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::Deallocate(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE10DeallocateEPS9_Pv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1259' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::InitCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*) -->
          <function-decl name='InitCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE9InitCacheEPS9_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::DestroyCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*) -->
          <function-decl name='DestroyCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE12DestroyCacheEPS9_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1331' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >::SwallowCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*) -->
          <function-decl name='SwallowCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32ILm0ELy140737488355328ELm16ENS_12SizeClassMapILm17ELm64ELm14EEELm24ENS_15TwoLevelByteMapILy2048ELy4096ENS_20NoOpMapUnmapCallbackEEES5_EENS_28SizeClassAllocatorLocalCacheIS7_EENS_18LargeMmapAllocatorINS_15CrashOnMapUnmapEEEE12SwallowCacheEPS9_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1335' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> >*' -->
            <parameter type-id='b6513ace' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >*' -->
            <parameter type-id='8ebf0942'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> > __sanitizer::InternalAllocatorCache -->
      <typedef-decl name='InternalAllocatorCache' type-id='cdd6cfb4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator_internal.h' line='43' column='1' id='1703d8dd'/>
      <!-- struct __sanitizer::CrashOnMapUnmap -->
      <class-decl name='CrashOnMapUnmap' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator_internal.h' line='47' column='1' id='783b9e85'>
        <member-function access='public' const='yes'>
          <!-- void __sanitizer::CrashOnMapUnmap::OnMap(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='OnMap' mangled-name='_ZNK11__sanitizer15CrashOnMapUnmap5OnMapEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator_internal.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::CrashOnMapUnmap*' -->
            <parameter type-id='9fe89a3a' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void __sanitizer::CrashOnMapUnmap::OnUnmap(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='OnUnmap' mangled-name='_ZNK11__sanitizer15CrashOnMapUnmap7OnUnmapEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator_internal.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::CrashOnMapUnmap*' -->
            <parameter type-id='9fe89a3a' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator32<0ul, 140737488355328ull, 16ul, __sanitizer::SizeClassMap<17ul, 64ul, 14ul>, 24ul, __sanitizer::TwoLevelByteMap<2048ull, 4096ull, __sanitizer::NoOpMapUnmapCallback>, __sanitizer::NoOpMapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__sanitizer::CrashOnMapUnmap> > __sanitizer::InternalAllocator -->
      <typedef-decl name='InternalAllocator' type-id='119903f8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator_internal.h' line='58' column='1' id='a6afb05d'/>
      <!-- enum __sanitizer::memory_order -->
      <enum-decl name='memory_order' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='19' column='1' id='6a042121'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='memory_order_relaxed' value='1'/>
        <enumerator name='memory_order_consume' value='2'/>
        <enumerator name='memory_order_acquire' value='4'/>
        <enumerator name='memory_order_release' value='8'/>
        <enumerator name='memory_order_acq_rel' value='16'/>
        <enumerator name='memory_order_seq_cst' value='32'/>
      </enum-decl>
      <!-- struct __sanitizer::atomic_uint8_t -->
      <class-decl name='atomic_uint8_t' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='28' column='1' id='2fc373cb'>
        <member-type access='public'>
          <!-- typedef __sanitizer::u8 __sanitizer::atomic_uint8_t::Type -->
          <typedef-decl name='Type' type-id='62fe98d0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='29' column='1' id='b02550ac'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- volatile __sanitizer::atomic_uint8_t::Type __sanitizer::atomic_uint8_t::val_dont_use -->
          <var-decl name='val_dont_use' type-id='1307e4e5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='30' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::atomic_uint64_t -->
      <class-decl name='atomic_uint64_t' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='43' column='1' id='46b20e41'>
        <member-type access='public'>
          <!-- typedef __sanitizer::u64 __sanitizer::atomic_uint64_t::Type -->
          <typedef-decl name='Type' type-id='ceed60aa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='44' column='1' id='6805d964'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- volatile __sanitizer::atomic_uint64_t::Type __sanitizer::atomic_uint64_t::val_dont_use -->
          <var-decl name='val_dont_use' type-id='48f79e83' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='45' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::atomic_uintptr_t -->
      <class-decl name='atomic_uintptr_t' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='48' column='1' id='48f335b9'>
        <member-type access='public'>
          <!-- typedef __sanitizer::uptr __sanitizer::atomic_uintptr_t::Type -->
          <typedef-decl name='Type' type-id='c8e929d2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='49' column='1' id='748d5322'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- volatile __sanitizer::atomic_uintptr_t::Type __sanitizer::atomic_uintptr_t::val_dont_use -->
          <var-decl name='val_dont_use' type-id='0ebc8057' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='50' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::LowLevelAllocator -->
      <class-decl name='LowLevelAllocator' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='108' column='1' id='78f20903'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::LowLevelAllocator::allocated_end_ -->
          <var-decl name='allocated_end_' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='113' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- char* __sanitizer::LowLevelAllocator::allocated_current_ -->
          <var-decl name='allocated_current_' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='114' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void* __sanitizer::LowLevelAllocator::Allocate(__sanitizer::uptr) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer17LowLevelAllocator8AllocateEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LowLevelAllocator*' -->
            <parameter type-id='5e6e9e43' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef void (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* __sanitizer::LowLevelAllocateCallback -->
      <typedef-decl name='LowLevelAllocateCallback' type-id='9f2b2a0e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='116' column='1' id='87a1dc59'/>
      <!-- struct __sanitizer::CommonFlags -->
      <class-decl name='CommonFlags' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='23' column='1' id='b603f416'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- bool __sanitizer::CommonFlags::symbolize -->
          <var-decl name='symbolize' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='25' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- const char* __sanitizer::CommonFlags::external_symbolizer_path -->
          <var-decl name='external_symbolizer_path' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='28' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- const char* __sanitizer::CommonFlags::strip_path_prefix -->
          <var-decl name='strip_path_prefix' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- bool __sanitizer::CommonFlags::fast_unwind_on_fatal -->
          <var-decl name='fast_unwind_on_fatal' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='32' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='200'>
          <!-- bool __sanitizer::CommonFlags::fast_unwind_on_malloc -->
          <var-decl name='fast_unwind_on_malloc' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='34' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='208'>
          <!-- bool __sanitizer::CommonFlags::handle_ioctl -->
          <var-decl name='handle_ioctl' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='36' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='224'>
          <!-- int __sanitizer::CommonFlags::malloc_context_size -->
          <var-decl name='malloc_context_size' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='38' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- const char* __sanitizer::CommonFlags::log_path -->
          <var-decl name='log_path' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='42' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- int __sanitizer::CommonFlags::verbosity -->
          <var-decl name='verbosity' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='44' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='352'>
          <!-- bool __sanitizer::CommonFlags::detect_leaks -->
          <var-decl name='detect_leaks' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='46' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='360'>
          <!-- bool __sanitizer::CommonFlags::leak_check_at_exit -->
          <var-decl name='leak_check_at_exit' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='50' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='368'>
          <!-- bool __sanitizer::CommonFlags::allocator_may_return_null -->
          <var-decl name='allocator_may_return_null' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='52' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='376'>
          <!-- bool __sanitizer::CommonFlags::print_summary -->
          <var-decl name='print_summary' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='54' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef unsigned char __sanitizer::u8 -->
      <typedef-decl name='u8' type-id='002ac4a6' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='66' column='1' id='62fe98d0'/>
      <!-- typedef long long unsigned int __sanitizer::u64 -->
      <typedef-decl name='u64' type-id='3a47d82b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='69' column='1' id='ceed60aa'/>
      <!-- struct __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch> -->
      <class-decl name='IntrusiveList&lt;__sanitizer::SizeClassMap&lt;17ul, 64ul, 14ul&gt;::TransferBatch&gt;' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='26' column='1' id='0a5cf380'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='115' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::first_ -->
          <var-decl name='first_' type-id='f62f8fc4' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='116' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::last_ -->
          <var-decl name='last_' type-id='f62f8fc4' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='117' column='1'/>
        </data-member>
        <member-function access='public' const='yes'>
          <!-- bool __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::empty() -->
          <function-decl name='empty' mangled-name='_ZNK11__sanitizer13IntrusiveListINS_12SizeClassMapILm17ELm64ELm14EE13TransferBatchEE5emptyEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>*' -->
            <parameter type-id='c7a1d31d' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::front() -->
          <function-decl name='front' mangled-name='_ZN11__sanitizer13IntrusiveListINS_12SizeClassMapILm17ELm64ELm14EE13TransferBatchEE5frontEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>*' -->
            <parameter type-id='f5ef6db6' is-artificial='yes'/>
            <!-- __sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch* -->
            <return type-id='f62f8fc4'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::push_front(__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch*) -->
          <function-decl name='push_front' mangled-name='_ZN11__sanitizer13IntrusiveListINS_12SizeClassMapILm17ELm64ELm14EE13TransferBatchEE10push_frontEPS3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>*' -->
            <parameter type-id='f5ef6db6' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch*' -->
            <parameter type-id='f62f8fc4'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::push_back(__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch*) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer13IntrusiveListINS_12SizeClassMapILm17ELm64ELm14EE13TransferBatchEE9push_backEPS3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>*' -->
            <parameter type-id='f5ef6db6' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch*' -->
            <parameter type-id='f62f8fc4'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>::pop_front() -->
          <function-decl name='pop_front' mangled-name='_ZN11__sanitizer13IntrusiveListINS_12SizeClassMapILm17ELm64ELm14EE13TransferBatchEE9pop_frontEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::SizeClassMap<17ul, 64ul, 14ul>::TransferBatch>*' -->
            <parameter type-id='f5ef6db6' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::StaticSpinMutex -->
      <class-decl name='StaticSpinMutex' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='21' column='1' id='c5c2fa97'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::atomic_uint8_t __sanitizer::StaticSpinMutex::state_ -->
          <var-decl name='state_' type-id='2fc373cb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='46' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- bool __sanitizer::StaticSpinMutex::TryLock() -->
          <function-decl name='TryLock' mangled-name='_ZN11__sanitizer15StaticSpinMutex7TryLockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::StaticSpinMutex::Unlock() -->
          <function-decl name='Unlock' mangled-name='_ZN11__sanitizer15StaticSpinMutex6UnlockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::StaticSpinMutex::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer15StaticSpinMutex4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::StaticSpinMutex::LockSlow() -->
          <function-decl name='LockSlow' mangled-name='_ZN11__sanitizer15StaticSpinMutex8LockSlowEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::StaticSpinMutex::Lock() -->
          <function-decl name='Lock' mangled-name='_ZN11__sanitizer15StaticSpinMutex4LockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::SpinMutex -->
      <class-decl name='SpinMutex' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='61' column='1' id='ae453aa5'>
        <!-- class __sanitizer::StaticSpinMutex -->
        <base-class access='public' layout-offset-in-bits='0' type-id='c5c2fa97'/>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::SpinMutex::SpinMutex() -->
          <function-decl name='SpinMutex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SpinMutex*' -->
            <parameter type-id='97841cd5' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::SpinMutex::SpinMutex(const __sanitizer::SpinMutex&) -->
          <function-decl name='SpinMutex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SpinMutex*' -->
            <parameter type-id='97841cd5' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::SpinMutex&' -->
            <parameter type-id='a0f331ea'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex> -->
      <class-decl name='GenericScopedLock&lt;__sanitizer::StaticSpinMutex&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='85' column='1' id='60399268'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::StaticSpinMutex* __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>::mu_ -->
          <var-decl name='mu_' type-id='2c3af02f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='97' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>::GenericScopedLock(__sanitizer::StaticSpinMutex*) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>*' -->
            <parameter type-id='c46c724e' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::StaticSpinMutex*' -->
            <parameter type-id='2c3af02f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>::~GenericScopedLock(int) -->
          <function-decl name='~GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>*' -->
            <parameter type-id='c46c724e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>::GenericScopedLock(const __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>&) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>*' -->
            <parameter type-id='c46c724e' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedLock<__sanitizer::StaticSpinMutex>&' -->
            <parameter type-id='9009b319'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- __sanitizer::InternalAllocator* __sanitizer::internal_allocator() -->
      <function-decl name='internal_allocator' mangled-name='_ZN11__sanitizer18internal_allocatorEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.cc' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __sanitizer::InternalAllocator* -->
        <return type-id='02872a6a'/>
      </function-decl>
      <!-- void* __sanitizer::AllocatorReturnNull() -->
      <function-decl name='AllocatorReturnNull' mangled-name='_ZN11__sanitizer19AllocatorReturnNullEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.cc' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void* -->
        <return type-id='eaa32e2f'/>
      </function-decl>
      <!-- void __sanitizer::atomic_signal_fence(__sanitizer::memory_order) -->
      <function-decl name='atomic_signal_fence' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='18' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::atomic_thread_fence(__sanitizer::memory_order) -->
      <function-decl name='atomic_thread_fence' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='22' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::proc_yield(int) -->
      <function-decl name='proc_yield' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- __sanitizer::atomic_uint64_t::Type __sanitizer::atomic_load<__sanitizer::atomic_uint64_t>(const volatile __sanitizer::atomic_uint64_t*, __sanitizer::memory_order) -->
      <function-decl name='atomic_load&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='0307eb5a'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint64_t::Type -->
        <return type-id='6805d964'/>
      </function-decl>
      <!-- __sanitizer::atomic_uint8_t::Type __sanitizer::atomic_load<__sanitizer::atomic_uint8_t>(const volatile __sanitizer::atomic_uint8_t*, __sanitizer::memory_order) -->
      <function-decl name='atomic_load&lt;__sanitizer::atomic_uint8_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const volatile __sanitizer::atomic_uint8_t*' -->
        <parameter type-id='a069129a'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint8_t::Type -->
        <return type-id='b02550ac'/>
      </function-decl>
      <!-- __sanitizer::atomic_uintptr_t::Type __sanitizer::atomic_load<__sanitizer::atomic_uintptr_t>(const volatile __sanitizer::atomic_uintptr_t*, __sanitizer::memory_order) -->
      <function-decl name='atomic_load&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='16f106b8'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uintptr_t::Type -->
        <return type-id='748d5322'/>
      </function-decl>
      <!-- void __sanitizer::atomic_store<__sanitizer::atomic_uint64_t>(volatile __sanitizer::atomic_uint64_t*, __sanitizer::atomic_uint64_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_store&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='3ccaccd3'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint64_t::Type' -->
        <parameter type-id='6805d964'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::atomic_store<__sanitizer::atomic_uint8_t>(volatile __sanitizer::atomic_uint8_t*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_store&lt;__sanitizer::atomic_uint8_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint8_t*' -->
        <parameter type-id='92199d55'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint8_t::Type' -->
        <parameter type-id='b02550ac'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::atomic_store<__sanitizer::atomic_uintptr_t>(volatile __sanitizer::atomic_uintptr_t*, __sanitizer::atomic_uintptr_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_store&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='e250a1bf'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uintptr_t::Type' -->
        <parameter type-id='748d5322'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- __sanitizer::atomic_uint8_t::Type __sanitizer::atomic_exchange<__sanitizer::atomic_uint8_t>(volatile __sanitizer::atomic_uint8_t*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_exchange&lt;__sanitizer::atomic_uint8_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint8_t*' -->
        <parameter type-id='92199d55'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint8_t::Type' -->
        <parameter type-id='b02550ac'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint8_t::Type -->
        <return type-id='b02550ac'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::MostSignificantSetBitIndex(__sanitizer::uptr) -->
      <function-decl name='MostSignificantSetBitIndex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='233' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- bool __sanitizer::IsPowerOfTwo(__sanitizer::uptr) -->
      <function-decl name='IsPowerOfTwo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='246' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::RoundUpTo(__sanitizer::uptr, __sanitizer::uptr) -->
      <function-decl name='RoundUpTo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='260' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- bool __sanitizer::IsAligned(__sanitizer::uptr, __sanitizer::uptr) -->
      <function-decl name='IsAligned' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='269' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- unsigned long int __sanitizer::Min<long unsigned int>(unsigned long int, unsigned long int) -->
      <function-decl name='Min&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- unsigned long int -->
        <return type-id='7359adad'/>
      </function-decl>
      <!-- unsigned long int __sanitizer::Max<long unsigned int>(unsigned long int, unsigned long int) -->
      <function-decl name='Max&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='291' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- unsigned long int -->
        <return type-id='7359adad'/>
      </function-decl>
      <!-- __sanitizer::CommonFlags* __sanitizer::common_flags() -->
      <function-decl name='common_flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_flags.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __sanitizer::CommonFlags* -->
        <return type-id='5b7f17ec'/>
      </function-decl>
    </namespace-decl>
    <!-- void (__sanitizer::uptr, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='c147927c'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (__sanitizer::uptr, void*) -->
    <function-type size-in-bits='64' id='930359b3'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void () -->
    <function-type size-in-bits='64' id='ee076206'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (const char*) -->
    <function-type size-in-bits='64' id='b77bdc37'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (const char*, int, const char*, __sanitizer::u64, __sanitizer::u64) -->
    <function-type size-in-bits='64' id='73cabc0d'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (int) -->
    <function-type size-in-bits='64' id='f712e2b7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- AddressRange[6] -->
    <array-type-def dimensions='1' type-id='14943646' size-in-bits='768' id='19d8bc52'>
      <!-- <anonymous range>[6] -->
      <subrange length='6' type-id='4c87fef4' id='52fa524b'/>
    </array-type-def>
    <!-- char[4096] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='32768' id='d16c6df4'>
      <!-- <anonymous range>[4096] -->
      <subrange length='4096' type-id='4c87fef4' id='bc1b5ddc'/>
    </array-type-def>
    <!-- unsigned long int[256] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='16384' id='d362a102'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='4c87fef4' id='36e5b9fa'/>
    </array-type-def>
    <!-- __sanitizer::AddressInfo* -->
    <pointer-type-def type-id='39f1f1c6' size-in-bits='64' id='b5fba8cc'/>
    <!-- __sanitizer::InternalScopedBuffer<char>* -->
    <pointer-type-def type-id='a137668f' size-in-bits='64' id='f39b4c27'/>
    <!-- __sanitizer::InternalScopedString* -->
    <pointer-type-def type-id='d19834e2' size-in-bits='64' id='de331450'/>
    <!-- __sanitizer::LoadedModule* -->
    <pointer-type-def type-id='3c87abeb' size-in-bits='64' id='30b3560b'/>
    <!-- __sanitizer::StackTrace* -->
    <pointer-type-def type-id='44c4da33' size-in-bits='64' id='bc3acb33'/>
    <!-- __sanitizer::Symbolizer* -->
    <pointer-type-def type-id='30a82206' size-in-bits='64' id='8d9c69cc'/>
    <!-- __sanitizer::uptr* -->
    <pointer-type-def type-id='c8e929d2' size-in-bits='64' id='60a62555'/>
    <!-- bool (const unsigned long int&, const unsigned long int&)* -->
    <pointer-type-def type-id='96035b84' size-in-bits='64' id='fdcd7b56'/>
    <!-- bool (void*, char*, int)* -->
    <pointer-type-def type-id='0c8f1687' size-in-bits='64' id='eb904c8b'/>
    <!-- char& -->
    <reference-type-def kind='lvalue' type-id='a84c031d' size-in-bits='64' id='2aa915e1'/>
    <!-- char** -->
    <pointer-type-def type-id='26a90f95' size-in-bits='64' id='9b23c9ad'/>
    <!-- const __sanitizer::InternalScopedBuffer<char> -->
    <qualified-type-def type-id='a137668f' const='yes' id='fcd9a480'/>
    <!-- const __sanitizer::InternalScopedBuffer<char>& -->
    <reference-type-def kind='lvalue' type-id='fcd9a480' size-in-bits='64' id='b09e3152'/>
    <!-- const __sanitizer::LoadedModule -->
    <qualified-type-def type-id='3c87abeb' const='yes' id='5ece1df0'/>
    <!-- const __sanitizer::LoadedModule* -->
    <pointer-type-def type-id='5ece1df0' size-in-bits='64' id='1878fe2e'/>
    <!-- const __sanitizer::uptr* -->
    <pointer-type-def type-id='870ffec2' size-in-bits='64' id='862e4738'/>
    <!-- const unsigned long int -->
    <qualified-type-def type-id='7359adad' const='yes' id='9cbd1c16'/>
    <!-- const unsigned long int& -->
    <reference-type-def kind='lvalue' type-id='9cbd1c16' size-in-bits='64' id='edb35f90'/>
    <!-- unsigned long int& -->
    <reference-type-def kind='lvalue' type-id='7359adad' size-in-bits='64' id='212c31d1'/>
    <!-- unsigned long int* -->
    <pointer-type-def type-id='7359adad' size-in-bits='64' id='1d2c2b85'/>
    <!-- unsigned long int** -->
    <pointer-type-def type-id='1d2c2b85' size-in-bits='64' id='9b88c47d'/>
    <!-- void ()* -->
    <pointer-type-def type-id='ee076206' size-in-bits='64' id='953b12f8'/>
    <!-- void (const char*, int, const char*, typedef __sanitizer::u64, typedef __sanitizer::u64)* -->
    <pointer-type-def type-id='73cabc0d' size-in-bits='64' id='3c440d01'/>
    <!-- void __sanitizer_set_report_path(const char*) -->
    <function-decl name='__sanitizer_set_report_path' mangled-name='__sanitizer_set_report_path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_set_report_path'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_sandbox_on_notify(void*) -->
    <function-decl name='__sanitizer_sandbox_on_notify' mangled-name='__sanitizer_sandbox_on_notify' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='277' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_sandbox_on_notify'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_report_error_summary(const char*) -->
    <function-decl name='__sanitizer_report_error_summary' mangled-name='__sanitizer_report_error_summary' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='282' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_report_error_summary'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalScopedBuffer<char> -->
      <class-decl name='InternalScopedBuffer&lt;char&gt;' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='67' column='1' id='a137668f'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::InternalScopedBuffer<char>::ptr_ -->
          <var-decl name='ptr_' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<char>::cnt_ -->
          <var-decl name='cnt_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='82' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedBuffer<char>::InternalScopedBuffer(__sanitizer::uptr) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalScopedBuffer<char>::~InternalScopedBuffer(int) -->
          <function-decl name='~InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalScopedBuffer<char>::InternalScopedBuffer(const __sanitizer::InternalScopedBuffer<char>&) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalScopedBuffer<char>&' -->
            <parameter type-id='b09e3152'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char* __sanitizer::InternalScopedBuffer<char>::data() -->
          <function-decl name='data' mangled-name='_ZN11__sanitizer20InternalScopedBufferIcE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- char* -->
            <return type-id='26a90f95'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<char>::size() -->
          <function-decl name='size' mangled-name='_ZN11__sanitizer20InternalScopedBufferIcE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char& __sanitizer::InternalScopedBuffer<char>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer20InternalScopedBufferIcEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<char>*' -->
            <parameter type-id='f39b4c27' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- char& -->
            <return type-id='2aa915e1'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalScopedString -->
      <class-decl name='InternalScopedString' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='88' column='1' id='d19834e2'>
        <!-- class __sanitizer::InternalScopedBuffer<char> -->
        <base-class access='public' layout-offset-in-bits='0' type-id='a137668f'/>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedString::length_ -->
          <var-decl name='length_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='102' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::InternalScopedString::InternalScopedString(__sanitizer::uptr) -->
          <function-decl name='InternalScopedString' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedString*' -->
            <parameter type-id='de331450' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedString::append(const char*, ...) -->
          <function-decl name='append' mangled-name='_ZN11__sanitizer20InternalScopedString6appendEPKcz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedString*' -->
            <parameter type-id='de331450' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <parameter is-variadic='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedString::clear() -->
          <function-decl name='clear' mangled-name='_ZN11__sanitizer20InternalScopedString5clearEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedString*' -->
            <parameter type-id='de331450' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef void ()* __sanitizer::DieCallbackType -->
      <typedef-decl name='DieCallbackType' type-id='953b12f8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='202' column='1' id='ad9506aa'/>
      <!-- typedef void (const char*, int, const char*, typedef __sanitizer::u64, typedef __sanitizer::u64)* __sanitizer::CheckFailedCallbackType -->
      <typedef-decl name='CheckFailedCallbackType' type-id='3c440d01' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='205' column='1' id='33cca925'/>
      <!-- class __sanitizer::LoadedModule -->
      <class-decl name='LoadedModule' size-in-bits='960' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='442' column='1' id='3c87abeb'>
        <member-type access='private'>
          <!-- struct __sanitizer::LoadedModule::AddressRange -->
          <class-decl name='AddressRange' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='452' column='1' id='14943646'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LoadedModule::AddressRange::beg -->
              <var-decl name='beg' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='453' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LoadedModule::AddressRange::end -->
              <var-decl name='end' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='454' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::LoadedModule::full_name_ -->
          <var-decl name='full_name_' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='456' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::LoadedModule::base_address_ -->
          <var-decl name='base_address_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='457' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::LoadedModule::kMaxNumberOfAddressRanges -->
          <var-decl name='kMaxNumberOfAddressRanges' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='458' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::LoadedModule::AddressRange __sanitizer::LoadedModule::ranges_[6] -->
          <var-decl name='ranges_' type-id='19d8bc52' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='459' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='896'>
          <!-- __sanitizer::uptr __sanitizer::LoadedModule::n_ranges_ -->
          <var-decl name='n_ranges_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='460' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::LoadedModule::LoadedModule(const char*, __sanitizer::uptr) -->
          <function-decl name='LoadedModule' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='444' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LoadedModule*' -->
            <parameter type-id='30b3560b' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::LoadedModule::LoadedModule(const char*, __sanitizer::uptr) -->
          <function-decl name='LoadedModule' mangled-name='_ZN11__sanitizer12LoadedModuleC2EPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='444' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LoadedModule*' -->
            <parameter type-id='30b3560b' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LoadedModule::addAddressRange(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='addAddressRange' mangled-name='_ZN11__sanitizer12LoadedModule15addAddressRangeEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='445' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LoadedModule*' -->
            <parameter type-id='30b3560b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __sanitizer::LoadedModule::containsAddress(__sanitizer::uptr) -->
          <function-decl name='containsAddress' mangled-name='_ZNK11__sanitizer12LoadedModule15containsAddressEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='446' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::LoadedModule*' -->
            <parameter type-id='1878fe2e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::LoadedModule::full_name() -->
          <function-decl name='full_name' mangled-name='_ZNK11__sanitizer12LoadedModule9full_nameEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='448' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::LoadedModule*' -->
            <parameter type-id='1878fe2e' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::LoadedModule::base_address() -->
          <function-decl name='base_address' mangled-name='_ZNK11__sanitizer12LoadedModule12base_addressEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='449' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::LoadedModule*' -->
            <parameter type-id='1878fe2e' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef int __sanitizer::fd_t -->
      <typedef-decl name='fd_t' type-id='95e97e5e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='74' column='1' id='32bd5dec'/>
      <!-- struct __sanitizer::StackTrace -->
      <class-decl name='StackTrace' size-in-bits='16512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='31' column='1' id='44c4da33'>
        <member-type access='public'>
          <!-- typedef bool (void*, char*, int)* __sanitizer::StackTrace::SymbolizeCallback -->
          <typedef-decl name='SymbolizeCallback' type-id='eb904c8b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='33' column='1' id='c27db549'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::StackTrace::top_frame_bp -->
          <var-decl name='top_frame_bp' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='34' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::StackTrace::size -->
          <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned long int __sanitizer::StackTrace::trace[256] -->
          <var-decl name='trace' type-id='d362a102' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='36' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- void __sanitizer::StackTrace::SlowUnwindStack(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='SlowUnwindStack' mangled-name='_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackTrace*' -->
            <parameter type-id='bc3acb33' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::StackTrace::GetPreviousInstructionPc() -->
          <function-decl name='GetPreviousInstructionPc' mangled-name='_ZN11__sanitizer10StackTrace24GetPreviousInstructionPcEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- void __sanitizer::StackTrace::PrintStack(__sanitizer::uptr, __sanitizer::StackTrace::SymbolizeCallback) -->
          <function-decl name='PrintStack' mangled-name='_ZN11__sanitizer10StackTrace10PrintStackEPKmmPFbPKvPciE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const __sanitizer::uptr*' -->
            <parameter type-id='862e4738'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::StackTrace::SymbolizeCallback' -->
            <parameter type-id='c27db549'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::StackTrace::GetCurrentPc() -->
          <function-decl name='GetCurrentPc' mangled-name='_ZN11__sanitizer10StackTrace12GetCurrentPcEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::StackTrace::FastUnwindStack(__sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='FastUnwindStack' mangled-name='_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackTrace*' -->
            <parameter type-id='bc3acb33' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::StackTrace::PopStackFrames(__sanitizer::uptr) -->
          <function-decl name='PopStackFrames' mangled-name='_ZN11__sanitizer10StackTrace14PopStackFramesEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackTrace*' -->
            <parameter type-id='bc3acb33' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::uptr __sanitizer::StackTrace::LocatePcInTrace(__sanitizer::uptr) -->
          <function-decl name='LocatePcInTrace' mangled-name='_ZN11__sanitizer10StackTrace15LocatePcInTraceEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackTrace*' -->
            <parameter type-id='bc3acb33' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::StackTrace::WillUseFastUnwind() -->
          <function-decl name='WillUseFastUnwind' mangled-name='_ZN11__sanitizer10StackTrace17WillUseFastUnwindEb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::StackTrace::Unwind(__sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, bool) -->
          <function-decl name='Unwind' mangled-name='_ZN11__sanitizer10StackTrace6UnwindEmmmmmb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackTrace*' -->
            <parameter type-id='bc3acb33' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::AddressInfo -->
      <class-decl name='AddressInfo' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='26' column='1' id='39f1f1c6'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::AddressInfo::address -->
          <var-decl name='address' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='27' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* __sanitizer::AddressInfo::module -->
          <var-decl name='module' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='28' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::AddressInfo::module_offset -->
          <var-decl name='module_offset' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='29' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* __sanitizer::AddressInfo::function -->
          <var-decl name='function' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- char* __sanitizer::AddressInfo::file -->
          <var-decl name='file' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='31' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- int __sanitizer::AddressInfo::line -->
          <var-decl name='line' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='32' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='352'>
          <!-- int __sanitizer::AddressInfo::column -->
          <var-decl name='column' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='33' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::AddressInfo::AddressInfo() -->
          <function-decl name='AddressInfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::AddressInfo::Clear() -->
          <function-decl name='Clear' mangled-name='_ZN11__sanitizer11AddressInfo5ClearEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::AddressInfo::FillAddressAndModuleInfo(__sanitizer::uptr, const char*, __sanitizer::uptr) -->
          <function-decl name='FillAddressAndModuleInfo' mangled-name='_ZN11__sanitizer11AddressInfo24FillAddressAndModuleInfoEmPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- const char* __sanitizer::SanitizerToolName -->
      <var-decl name='SanitizerToolName' type-id='80f4b756' mangled-name='_ZN11__sanitizer17SanitizerToolNameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='20' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::GetPageSizeCached() -->
      <function-decl name='GetPageSizeCached' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='22' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::fd_t __sanitizer::report_fd -->
      <var-decl name='report_fd' type-id='32bd5dec' mangled-name='_ZN11__sanitizer9report_fdE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='33' column='1'/>
      <!-- bool __sanitizer::log_to_file -->
      <var-decl name='log_to_file' type-id='c894953d' mangled-name='_ZN11__sanitizer11log_to_fileE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='36' column='1'/>
      <!-- char __sanitizer::report_path_prefix[4096] -->
      <var-decl name='report_path_prefix' type-id='d16c6df4' mangled-name='_ZN11__sanitizer18report_path_prefixE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='37' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::report_fd_pid -->
      <var-decl name='report_fd_pid' type-id='c8e929d2' mangled-name='_ZN11__sanitizer13report_fd_pidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='41' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::stoptheworld_tracer_pid -->
      <var-decl name='stoptheworld_tracer_pid' type-id='c8e929d2' mangled-name='_ZN11__sanitizer23stoptheworld_tracer_pidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='45' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::stoptheworld_tracer_ppid -->
      <var-decl name='stoptheworld_tracer_ppid' type-id='c8e929d2' mangled-name='_ZN11__sanitizer24stoptheworld_tracer_ppidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='48' column='1'/>
      <!-- void __sanitizer::CheckFailed(const char*, int, const char*, __sanitizer::u64, __sanitizer::u64) -->
      <function-decl name='CheckFailed' mangled-name='_ZN11__sanitizer11CheckFailedEPKciS1_yy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='71' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN11__sanitizer11CheckFailedEPKciS1_yy'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::ReportErrorSummary(const char*) -->
      <function-decl name='ReportErrorSummary' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='177' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::ReportErrorSummary(const char*, const char*, int, const char*) -->
      <function-decl name='ReportErrorSummary' mangled-name='_ZN11__sanitizer18ReportErrorSummaryEPKcS1_iS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.cc' line='186' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::Swap<long unsigned int>(unsigned long int&, unsigned long int&) -->
      <function-decl name='Swap&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int&' -->
        <parameter type-id='212c31d1'/>
        <!-- parameter of type 'unsigned long int&' -->
        <parameter type-id='212c31d1'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- class __sanitizer::Symbolizer -->
      <class-decl name='Symbolizer' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='64' column='1' is-declaration-only='yes' id='30a82206'>
        <member-type access='public'>
          <!-- typedef void ()* __sanitizer::Symbolizer::StartSymbolizationHook -->
          <typedef-decl name='StartSymbolizationHook' type-id='953b12f8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='110' column='1' id='61ee0926'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef void ()* __sanitizer::Symbolizer::EndSymbolizationHook -->
          <typedef-decl name='EndSymbolizationHook' type-id='953b12f8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='111' column='1' id='38b4de49'/>
        </member-type>
        <member-type access='protected'>
          <!-- class __sanitizer::Symbolizer::SymbolizerScope -->
          <class-decl name='SymbolizerScope' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='133' column='1' id='30c6fc56'>
            <data-member access='private' layout-offset-in-bits='0'>
              <!-- const __sanitizer::Symbolizer* __sanitizer::Symbolizer::SymbolizerScope::sym_ -->
              <var-decl name='sym_' type-id='90e9cf69' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='138' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- __sanitizer::Symbolizer::SymbolizerScope::SymbolizerScope(const __sanitizer::Symbolizer*) -->
              <function-decl name='SymbolizerScope' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='135' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__sanitizer::Symbolizer::SymbolizerScope*' -->
                <parameter type-id='401c651c' is-artificial='yes'/>
                <!-- parameter of type 'const __sanitizer::Symbolizer*' -->
                <parameter type-id='90e9cf69'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
            <member-function access='public' destructor='yes'>
              <!-- __sanitizer::Symbolizer::SymbolizerScope::~SymbolizerScope(int) -->
              <function-decl name='~SymbolizerScope' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__sanitizer::Symbolizer::SymbolizerScope*' -->
                <parameter type-id='401c651c' is-artificial='yes'/>
                <!-- artificial parameter of type 'int' -->
                <parameter type-id='95e97e5e' is-artificial='yes'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- __sanitizer::Symbolizer::SymbolizerScope::SymbolizerScope(const __sanitizer::Symbolizer*) -->
              <function-decl name='SymbolizerScope' mangled-name='_ZN11__sanitizer10Symbolizer15SymbolizerScopeC2EPKS0_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='135' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__sanitizer::Symbolizer::SymbolizerScope*' -->
                <parameter type-id='401c651c' is-artificial='yes'/>
                <!-- parameter of type 'const __sanitizer::Symbolizer*' -->
                <parameter type-id='90e9cf69'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
            <member-function access='public' destructor='yes'>
              <!-- __sanitizer::Symbolizer::SymbolizerScope::~SymbolizerScope(int) -->
              <function-decl name='~SymbolizerScope' mangled-name='_ZN11__sanitizer10Symbolizer15SymbolizerScopeD2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__sanitizer::Symbolizer::SymbolizerScope*' -->
                <parameter type-id='401c651c' is-artificial='yes'/>
                <!-- artificial parameter of type 'int' -->
                <parameter type-id='95e97e5e' is-artificial='yes'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static __sanitizer::Symbolizer* __sanitizer::Symbolizer::symbolizer_ -->
          <var-decl name='symbolizer_' type-id='8d9c69cc' mangled-name='_ZN11__sanitizer10Symbolizer11symbolizer_E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='19' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static __sanitizer::StaticSpinMutex __sanitizer::Symbolizer::init_mu_ -->
          <var-decl name='init_mu_' type-id='c5c2fa97' mangled-name='_ZN11__sanitizer10Symbolizer8init_mu_E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='20' column='1'/>
        </data-member>
        <data-member access='protected' static='yes'>
          <!-- static __sanitizer::LowLevelAllocator __sanitizer::Symbolizer::symbolizer_allocator_ -->
          <var-decl name='symbolizer_allocator_' type-id='78f20903' mangled-name='_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='21' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='64'>
          <!-- __sanitizer::Symbolizer::StartSymbolizationHook __sanitizer::Symbolizer::start_hook_ -->
          <var-decl name='start_hook_' type-id='61ee0926' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='131' column='1'/>
        </data-member>
        <data-member access='protected' layout-offset-in-bits='128'>
          <!-- __sanitizer::Symbolizer::EndSymbolizationHook __sanitizer::Symbolizer::end_hook_ -->
          <var-decl name='end_hook_' type-id='38b4de49' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='132' column='1'/>
        </data-member>
        <member-function access='protected' constructor='yes'>
          <!-- __sanitizer::Symbolizer::Symbolizer() -->
          <function-decl name='Symbolizer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::GetOrNull() -->
          <function-decl name='GetOrNull' mangled-name='_ZN11__sanitizer10Symbolizer9GetOrNullEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::Get() -->
          <function-decl name='Get' mangled-name='_ZN11__sanitizer10Symbolizer3GetEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::Disable() -->
          <function-decl name='Disable' mangled-name='_ZN11__sanitizer10Symbolizer7DisableEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::Symbolizer::AddHooks(__sanitizer::Symbolizer::StartSymbolizationHook, __sanitizer::Symbolizer::EndSymbolizationHook) -->
          <function-decl name='AddHooks' mangled-name='_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::Symbolizer::StartSymbolizationHook' -->
            <parameter type-id='61ee0926'/>
            <!-- parameter of type 'typedef __sanitizer::Symbolizer::EndSymbolizationHook' -->
            <parameter type-id='38b4de49'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='protected' constructor='yes'>
          <!-- __sanitizer::Symbolizer::Symbolizer() -->
          <function-decl name='Symbolizer' mangled-name='_ZN11__sanitizer10SymbolizerC2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::CreateAndStore() -->
          <function-decl name='CreateAndStore' mangled-name='_ZN11__sanitizer10Symbolizer14CreateAndStoreEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libcdep.cc' line='17' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer10Symbolizer4InitEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libcdep.cc' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::GetOrInit() -->
          <function-decl name='GetOrInit' mangled-name='_ZN11__sanitizer10Symbolizer9GetOrInitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libcdep.cc' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- __sanitizer::Symbolizer* __sanitizer::Symbolizer::PlatformInit() -->
          <function-decl name='PlatformInit' mangled-name='_ZN11__sanitizer10Symbolizer12PlatformInitEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='593' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- __sanitizer::Symbolizer* -->
            <return type-id='8d9c69cc'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='0'>
          <!-- __sanitizer::uptr __sanitizer::Symbolizer::SymbolizeCode(__sanitizer::uptr, __sanitizer::AddressInfo*, __sanitizer::uptr) -->
          <function-decl name='SymbolizeCode' mangled-name='_ZN11__sanitizer10Symbolizer13SymbolizeCodeEmPNS_11AddressInfoEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='1'>
          <!-- bool __sanitizer::Symbolizer::SymbolizeData(__sanitizer::uptr, __sanitizer::DataInfo*) -->
          <function-decl name='SymbolizeData' mangled-name='_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::DataInfo*' -->
            <parameter type-id='7ee29db4'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='2'>
          <!-- bool __sanitizer::Symbolizer::IsAvailable() -->
          <function-decl name='IsAvailable' mangled-name='_ZN11__sanitizer10Symbolizer11IsAvailableEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='3'>
          <!-- bool __sanitizer::Symbolizer::IsExternalAvailable() -->
          <function-decl name='IsExternalAvailable' mangled-name='_ZN11__sanitizer10Symbolizer19IsExternalAvailableEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='4'>
          <!-- void __sanitizer::Symbolizer::Flush() -->
          <function-decl name='Flush' mangled-name='_ZN11__sanitizer10Symbolizer5FlushEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='5'>
          <!-- const char* __sanitizer::Symbolizer::Demangle(const char*) -->
          <function-decl name='Demangle' mangled-name='_ZN11__sanitizer10Symbolizer8DemangleEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='6'>
          <!-- void __sanitizer::Symbolizer::PrepareForSandboxing() -->
          <function-decl name='PrepareForSandboxing' mangled-name='_ZN11__sanitizer10Symbolizer20PrepareForSandboxingEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='104' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::Symbolizer*' -->
            <parameter type-id='8d9c69cc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- bool (const unsigned long int&, const unsigned long int&) -->
    <function-type size-in-bits='64' id='96035b84'>
      <!-- parameter of type 'const unsigned long int&' -->
      <parameter type-id='edb35f90'/>
      <!-- parameter of type 'const unsigned long int&' -->
      <parameter type-id='edb35f90'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
    <!-- bool (void*, char*, int) -->
    <function-type size-in-bits='64' id='0c8f1687'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
    <!-- const char* (const char*, const char*) -->
    <function-type size-in-bits='64' id='7b76db83'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- const char* -->
      <return type-id='80f4b756'/>
    </function-type>
    <!-- void (void*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='3583ca35'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_common_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_coverage.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- unsigned long int[10] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='640' id='d6aba012'>
      <!-- <anonymous range>[10] -->
      <subrange length='10' type-id='4c87fef4' id='487da03a'/>
    </array-type-def>
    <!-- enum LinkerInitialized -->
    <enum-decl name='LinkerInitialized' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='283' column='1' id='98c488cb'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='LINKER_INITIALIZED' value='0'/>
    </enum-decl>
    <!-- __sanitizer::BlockingMutex* -->
    <pointer-type-def type-id='cb1fb5cc' size-in-bits='64' id='5c7637fa'/>
    <!-- __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>* -->
    <pointer-type-def type-id='e582785d' size-in-bits='64' id='79a09d1d'/>
    <!-- __sanitizer::InternalMmapVector<long unsigned int>* -->
    <pointer-type-def type-id='8cc28fcb' size-in-bits='64' id='ea7cc69b'/>
    <!-- __sanitizer::InternalMmapVector<unsigned int>* -->
    <pointer-type-def type-id='9f831407' size-in-bits='64' id='fe02747f'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex> -->
    <qualified-type-def type-id='e582785d' const='yes' id='22ba72f0'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>& -->
    <reference-type-def kind='lvalue' type-id='22ba72f0' size-in-bits='64' id='8182c6e2'/>
    <!-- const __sanitizer::InternalMmapVector<long unsigned int> -->
    <qualified-type-def type-id='8cc28fcb' const='yes' id='41c50b2e'/>
    <!-- const __sanitizer::InternalMmapVector<long unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='41c50b2e' size-in-bits='64' id='91305d98'/>
    <!-- const __sanitizer::InternalMmapVector<long unsigned int>* -->
    <pointer-type-def type-id='41c50b2e' size-in-bits='64' id='8d30574c'/>
    <!-- const __sanitizer::InternalMmapVector<unsigned int> -->
    <qualified-type-def type-id='9f831407' const='yes' id='fe503888'/>
    <!-- const __sanitizer::InternalMmapVector<unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='fe503888' size-in-bits='64' id='064939ea'/>
    <!-- const __sanitizer::InternalMmapVector<unsigned int>* -->
    <pointer-type-def type-id='fe503888' size-in-bits='64' id='fa492706'/>
    <!-- const unsigned int -->
    <qualified-type-def type-id='f0981eeb' const='yes' id='20f5f452'/>
    <!-- const unsigned int& -->
    <reference-type-def kind='lvalue' type-id='20f5f452' size-in-bits='64' id='572fd29c'/>
    <!-- const unsigned int* -->
    <pointer-type-def type-id='20f5f452' size-in-bits='64' id='5b2fd8e8'/>
    <!-- const unsigned long int* -->
    <pointer-type-def type-id='9cbd1c16' size-in-bits='64' id='f9b37274'/>
    <!-- unsigned int& -->
    <reference-type-def kind='lvalue' type-id='f0981eeb' size-in-bits='64' id='8c787cb7'/>
    <!-- unsigned int* -->
    <pointer-type-def type-id='f0981eeb' size-in-bits='64' id='807869d3'/>
    <!-- void __sanitizer_cov(void*) -->
    <function-decl name='__sanitizer_cov' mangled-name='__sanitizer_cov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_coverage.cc' line='107' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_cov'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_cov_dump() -->
    <function-decl name='__sanitizer_cov_dump' mangled-name='__sanitizer_cov_dump' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_coverage.cc' line='110' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_cov_dump'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalMmapVector<long unsigned int> -->
      <class-decl name='InternalMmapVector&lt;long unsigned int&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='8cc28fcb'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned long int* __sanitizer::InternalMmapVector<long unsigned int>::data_ -->
          <var-decl name='data_' type-id='1d2c2b85' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<long unsigned int>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<long unsigned int>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<long unsigned int>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<long unsigned int>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<long unsigned int>::InternalMmapVector(const __sanitizer::InternalMmapVector<long unsigned int>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<long unsigned int>&' -->
            <parameter type-id='91305d98'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<long unsigned int>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorImE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='8d30574c' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const unsigned long int* __sanitizer::InternalMmapVector<long unsigned int>::data() -->
          <function-decl name='data' mangled-name='_ZNK11__sanitizer18InternalMmapVectorImE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='8d30574c' is-artificial='yes'/>
            <!-- const unsigned long int* -->
            <return type-id='f9b37274'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<long unsigned int>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorImE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- unsigned long int& __sanitizer::InternalMmapVector<long unsigned int>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer18InternalMmapVectorImEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='330' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- unsigned long int& -->
            <return type-id='212c31d1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<long unsigned int>::push_back(const unsigned long int&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorImE9push_backERKm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<long unsigned int>*' -->
            <parameter type-id='ea7cc69b' is-artificial='yes'/>
            <!-- parameter of type 'const unsigned long int&' -->
            <parameter type-id='edb35f90'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalMmapVector<unsigned int> -->
      <class-decl name='InternalMmapVector&lt;unsigned int&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='9f831407'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned int* __sanitizer::InternalMmapVector<unsigned int>::data_ -->
          <var-decl name='data_' type-id='807869d3' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<unsigned int>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<unsigned int>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<unsigned int>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<unsigned int>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<unsigned int>::InternalMmapVector(const __sanitizer::InternalMmapVector<unsigned int>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<unsigned int>&' -->
            <parameter type-id='064939ea'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<unsigned int>::clear() -->
          <function-decl name='clear' mangled-name='_ZN11__sanitizer18InternalMmapVectorIjE5clearEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const unsigned int* __sanitizer::InternalMmapVector<unsigned int>::data() -->
          <function-decl name='data' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIjE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fa492706' is-artificial='yes'/>
            <!-- const unsigned int* -->
            <return type-id='5b2fd8e8'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<unsigned int>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIjE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fa492706' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<unsigned int>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorIjE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<unsigned int>::push_back(const unsigned int&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorIjE9push_backERKj' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<unsigned int>*' -->
            <parameter type-id='fe02747f' is-artificial='yes'/>
            <!-- parameter of type 'const unsigned int&' -->
            <parameter type-id='572fd29c'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::BlockingMutex -->
      <class-decl name='BlockingMutex' size-in-bits='704' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='72' column='1' id='cb1fb5cc'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned long int __sanitizer::BlockingMutex::opaque_storage_[10] -->
          <var-decl name='opaque_storage_' type-id='d6aba012' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='640'>
          <!-- __sanitizer::uptr __sanitizer::BlockingMutex::owner_ -->
          <var-decl name='owner_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='81' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::BlockingMutex::BlockingMutex(LinkerInitialized) -->
          <function-decl name='BlockingMutex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- parameter of type 'enum LinkerInitialized' -->
            <parameter type-id='98c488cb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::BlockingMutex::BlockingMutex() -->
          <function-decl name='BlockingMutex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::BlockingMutex::BlockingMutex(LinkerInitialized) -->
          <function-decl name='BlockingMutex' mangled-name='_ZN11__sanitizer13BlockingMutexC2E17LinkerInitialized' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- parameter of type 'enum LinkerInitialized' -->
            <parameter type-id='98c488cb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::BlockingMutex::BlockingMutex() -->
          <function-decl name='BlockingMutex' mangled-name='_ZN11__sanitizer13BlockingMutexC2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::BlockingMutex::Lock() -->
          <function-decl name='Lock' mangled-name='_ZN11__sanitizer13BlockingMutex4LockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::BlockingMutex::Unlock() -->
          <function-decl name='Unlock' mangled-name='_ZN11__sanitizer13BlockingMutex6UnlockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::BlockingMutex::CheckLocked() -->
          <function-decl name='CheckLocked' mangled-name='_ZN11__sanitizer13BlockingMutex11CheckLockedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex> -->
      <class-decl name='GenericScopedLock&lt;__sanitizer::BlockingMutex&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='85' column='1' id='e582785d'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::BlockingMutex* __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>::mu_ -->
          <var-decl name='mu_' type-id='5c7637fa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='97' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>::GenericScopedLock(__sanitizer::BlockingMutex*) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>*' -->
            <parameter type-id='79a09d1d' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::BlockingMutex*' -->
            <parameter type-id='5c7637fa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>::~GenericScopedLock(int) -->
          <function-decl name='~GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>*' -->
            <parameter type-id='79a09d1d' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>::GenericScopedLock(const __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>&) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>*' -->
            <parameter type-id='79a09d1d' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedLock<__sanitizer::BlockingMutex>&' -->
            <parameter type-id='8182c6e2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- __sanitizer::uptr __sanitizer::RoundUpToPowerOfTwo(__sanitizer::uptr) -->
      <function-decl name='RoundUpToPowerOfTwo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='250' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_flags.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- long long int -->
    <type-decl name='long long int' size-in-bits='64' id='1eb56b1e'/>
    <!-- bool* -->
    <pointer-type-def type-id='c894953d' size-in-bits='64' id='d8e6b335'/>
    <!-- const char** -->
    <pointer-type-def type-id='80f4b756' size-in-bits='64' id='7d3cd834'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- typedef long long int __sanitizer::s64 -->
      <typedef-decl name='s64' type-id='1eb56b1e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='73' column='1' id='475d8470'/>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- __sanitizer::uptr __sanitizer::RoundDownTo(__sanitizer::uptr, __sanitizer::uptr) -->
      <function-decl name='RoundDownTo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='265' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- long long unsigned int __sanitizer::Min<long long unsigned int>(long long unsigned int, long long unsigned int) -->
      <function-decl name='Min&lt;long long unsigned int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long unsigned int' -->
        <parameter type-id='3a47d82b'/>
        <!-- parameter of type 'long long unsigned int' -->
        <parameter type-id='3a47d82b'/>
        <!-- long long unsigned int -->
        <return type-id='3a47d82b'/>
      </function-decl>
      <!-- bool __sanitizer::IsSpace(int) -->
      <function-decl name='IsSpace' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='299' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- bool __sanitizer::IsDigit(int) -->
      <function-decl name='IsDigit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='303' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- int __sanitizer::internal_memcmp(void*, void*, __sanitizer::uptr) -->
      <function-decl name='internal_memcmp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- int -->
        <return type-id='95e97e5e'/>
      </function-decl>
      <!-- void* __sanitizer::internal_memcpy(void*, void*, __sanitizer::uptr) -->
      <function-decl name='internal_memcpy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void* -->
        <return type-id='eaa32e2f'/>
      </function-decl>
      <!-- void* __sanitizer::internal_memset(void*, int, __sanitizer::uptr) -->
      <function-decl name='internal_memset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void* -->
        <return type-id='eaa32e2f'/>
      </function-decl>
      <!-- char* __sanitizer::internal_strchr(const char*, int) -->
      <function-decl name='internal_strchr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6018' column='1'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6018' column='1'/>
        <!-- char* -->
        <return type-id='26a90f95'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_strlen(const char*) -->
      <function-decl name='internal_strlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libc.cc' line='161' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- LibCodeRange[128] -->
    <array-type-def dimensions='1' type-id='29747b24' size-in-bits='16384' id='a436da01'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- Lib[128] -->
    <array-type-def dimensions='1' type-id='e71cb162' size-in-bits='32768' id='56671d43'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- __sanitizer::InternalMmapVector<__sanitizer::Suppression*>* -->
    <pointer-type-def type-id='45bd01dd' size-in-bits='64' id='3630ff7d'/>
    <!-- __sanitizer::InternalMmapVector<__sanitizer::Suppression>* -->
    <pointer-type-def type-id='659af46d' size-in-bits='64' id='78e5a0cd'/>
    <!-- __sanitizer::LibIgnore* -->
    <pointer-type-def type-id='978a6e2b' size-in-bits='64' id='b171dfbb'/>
    <!-- __sanitizer::Suppression& -->
    <reference-type-def kind='lvalue' type-id='a6594161' size-in-bits='64' id='f475e01d'/>
    <!-- __sanitizer::Suppression* -->
    <pointer-type-def type-id='a6594161' size-in-bits='64' id='e875cd39'/>
    <!-- __sanitizer::Suppression** -->
    <pointer-type-def type-id='e875cd39' size-in-bits='64' id='0471d4e9'/>
    <!-- __sanitizer::SuppressionContext* -->
    <pointer-type-def type-id='3f9b86c8' size-in-bits='64' id='c0924c0e'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression> -->
    <qualified-type-def type-id='659af46d' const='yes' id='34d6f536'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression>& -->
    <reference-type-def kind='lvalue' type-id='34d6f536' size-in-bits='64' id='3e63c830'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression>* -->
    <pointer-type-def type-id='34d6f536' size-in-bits='64' id='4a63db14'/>
    <!-- const __sanitizer::LibIgnore -->
    <qualified-type-def type-id='978a6e2b' const='yes' id='85c23cd6'/>
    <!-- const __sanitizer::LibIgnore& -->
    <reference-type-def kind='lvalue' type-id='85c23cd6' size-in-bits='64' id='80c5edd0'/>
    <!-- const __sanitizer::LibIgnore* -->
    <pointer-type-def type-id='85c23cd6' size-in-bits='64' id='8cc600b4'/>
    <!-- const __sanitizer::Suppression -->
    <qualified-type-def type-id='a6594161' const='yes' id='9e56ed50'/>
    <!-- const __sanitizer::Suppression& -->
    <reference-type-def kind='lvalue' type-id='9e56ed50' size-in-bits='64' id='b8d7d0c2'/>
    <!-- const __sanitizer::Suppression* -->
    <pointer-type-def type-id='9e56ed50' size-in-bits='64' id='bcd7d70e'/>
    <!-- const __sanitizer::SuppressionContext -->
    <qualified-type-def type-id='3f9b86c8' const='yes' id='7f789a83'/>
    <!-- const __sanitizer::SuppressionContext& -->
    <reference-type-def kind='lvalue' type-id='7f789a83' size-in-bits='64' id='4fdb71bf'/>
    <!-- const __sanitizer::SuppressionContext* -->
    <pointer-type-def type-id='7f789a83' size-in-bits='64' id='53db780b'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalMmapVector<__sanitizer::Suppression*> -->
      <class-decl name='InternalMmapVector&lt;__sanitizer::Suppression*&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='45bd01dd'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::Suppression** __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::data_ -->
          <var-decl name='data_' type-id='0471d4e9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::InternalMmapVector(const __sanitizer::InternalMmapVector<__sanitizer::Suppression*>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::Suppression*>&' -->
            <parameter type-id='12e28586'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorIPNS_11SuppressionEE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::push_back(__sanitizer::Suppression* const&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorIPNS_11SuppressionEE9push_backERKS2_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::Suppression* const&' -->
            <parameter type-id='27065bd0'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIPNS_11SuppressionEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='1ee2986a' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::Suppression*& __sanitizer::InternalMmapVector<__sanitizer::Suppression*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer18InternalMmapVectorIPNS_11SuppressionEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='330' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::Suppression*& -->
            <return type-id='1071e7cd'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalMmapVector<__sanitizer::Suppression> -->
      <class-decl name='InternalMmapVector&lt;__sanitizer::Suppression&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='659af46d'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::Suppression* __sanitizer::InternalMmapVector<__sanitizer::Suppression>::data_ -->
          <var-decl name='data_' type-id='e875cd39' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<__sanitizer::Suppression>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression>::InternalMmapVector(const __sanitizer::InternalMmapVector<__sanitizer::Suppression>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::Suppression>&' -->
            <parameter type-id='3e63c830'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::Suppression>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorINS_11SuppressionEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='4a63db14' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::Suppression& __sanitizer::InternalMmapVector<__sanitizer::Suppression>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_11SuppressionEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='330' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::Suppression& -->
            <return type-id='f475e01d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __sanitizer::Suppression& __sanitizer::InternalMmapVector<__sanitizer::Suppression>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK11__sanitizer18InternalMmapVectorINS_11SuppressionEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='4a63db14' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const __sanitizer::Suppression& -->
            <return type-id='b8d7d0c2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_11SuppressionEE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::Suppression>::push_back(const __sanitizer::Suppression&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_11SuppressionEE9push_backERKS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression>*' -->
            <parameter type-id='78e5a0cd' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::Suppression&' -->
            <parameter type-id='b8d7d0c2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::LibIgnore -->
      <class-decl name='LibIgnore' size-in-bits='49984' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='26' column='1' id='978a6e2b'>
        <member-type access='private'>
          <!-- struct __sanitizer::LibIgnore::Lib -->
          <class-decl name='Lib' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='43' column='1' id='e71cb162'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- char* __sanitizer::LibIgnore::Lib::templ -->
              <var-decl name='templ' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='44' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- char* __sanitizer::LibIgnore::Lib::name -->
              <var-decl name='name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='45' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- char* __sanitizer::LibIgnore::Lib::real_name -->
              <var-decl name='real_name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='46' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- bool __sanitizer::LibIgnore::Lib::loaded -->
              <var-decl name='loaded' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='47' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <member-type access='private'>
          <!-- struct __sanitizer::LibIgnore::LibCodeRange -->
          <class-decl name='LibCodeRange' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='50' column='1' id='29747b24'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LibIgnore::LibCodeRange::begin -->
              <var-decl name='begin' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='51' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LibIgnore::LibCodeRange::end -->
              <var-decl name='end' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='52' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::LibIgnore::kMaxLibs -->
          <var-decl name='kMaxLibs' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='55' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::atomic_uintptr_t __sanitizer::LibIgnore::loaded_count_ -->
          <var-decl name='loaded_count_' type-id='48f335b9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='58' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::LibIgnore::LibCodeRange __sanitizer::LibIgnore::code_ranges_[128] -->
          <var-decl name='code_ranges_' type-id='a436da01' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='59' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16448'>
          <!-- __sanitizer::BlockingMutex __sanitizer::LibIgnore::mutex_ -->
          <var-decl name='mutex_' type-id='cb1fb5cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='62' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='17152'>
          <!-- __sanitizer::uptr __sanitizer::LibIgnore::count_ -->
          <var-decl name='count_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='63' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='17216'>
          <!-- __sanitizer::LibIgnore::Lib __sanitizer::LibIgnore::libs_[128] -->
          <var-decl name='libs_' type-id='56671d43' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='64' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::LibIgnore::LibIgnore(LinkerInitialized) -->
          <function-decl name='LibIgnore' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- parameter of type 'enum LinkerInitialized' -->
            <parameter type-id='98c488cb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::LibIgnore::LibIgnore(const __sanitizer::LibIgnore&) -->
          <function-decl name='LibIgnore' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::LibIgnore&' -->
            <parameter type-id='80c5edd0'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::LibIgnore::LibIgnore(LinkerInitialized) -->
          <function-decl name='LibIgnore' mangled-name='_ZN11__sanitizer9LibIgnoreC2E17LinkerInitialized' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- parameter of type 'enum LinkerInitialized' -->
            <parameter type-id='98c488cb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LibIgnore::Init(const __sanitizer::SuppressionContext&) -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer9LibIgnore4InitERKNS_18SuppressionContextE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::SuppressionContext&' -->
            <parameter type-id='4fdb71bf'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LibIgnore::OnLibraryLoaded(const char*) -->
          <function-decl name='OnLibraryLoaded' mangled-name='_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LibIgnore::OnLibraryUnloaded() -->
          <function-decl name='OnLibraryUnloaded' mangled-name='_ZN11__sanitizer9LibIgnore17OnLibraryUnloadedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibIgnore*' -->
            <parameter type-id='b171dfbb' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __sanitizer::LibIgnore::IsIgnored(__sanitizer::uptr) -->
          <function-decl name='IsIgnored' mangled-name='_ZNK11__sanitizer9LibIgnore9IsIgnoredEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_libignore.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::LibIgnore*' -->
            <parameter type-id='8cc600b4' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __sanitizer::SuppressionType -->
      <enum-decl name='SuppressionType' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='19' column='1' id='8f71ba54'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='SuppressionNone' value='0'/>
        <enumerator name='SuppressionRace' value='1'/>
        <enumerator name='SuppressionMutex' value='2'/>
        <enumerator name='SuppressionThread' value='3'/>
        <enumerator name='SuppressionSignal' value='4'/>
        <enumerator name='SuppressionLeak' value='5'/>
        <enumerator name='SuppressionLib' value='6'/>
        <enumerator name='SuppressionTypeCount' value='7'/>
      </enum-decl>
      <!-- struct __sanitizer::Suppression -->
      <class-decl name='Suppression' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='30' column='1' id='a6594161'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::SuppressionType __sanitizer::Suppression::type -->
          <var-decl name='type' type-id='8f71ba54' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='31' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* __sanitizer::Suppression::templ -->
          <var-decl name='templ' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='32' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned int __sanitizer::Suppression::hit_count -->
          <var-decl name='hit_count' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='33' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr __sanitizer::Suppression::weight -->
          <var-decl name='weight' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='34' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::SuppressionContext -->
      <class-decl name='SuppressionContext' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='37' column='1' id='3f9b86c8'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::InternalMmapVector<__sanitizer::Suppression> __sanitizer::SuppressionContext::suppressions_ -->
          <var-decl name='suppressions_' type-id='659af46d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='47' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- bool __sanitizer::SuppressionContext::can_parse_ -->
          <var-decl name='can_parse_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='48' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::SuppressionContext::SuppressionContext() -->
          <function-decl name='SuppressionContext' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuppressionContext*' -->
            <parameter type-id='c0924c0e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::SuppressionContext::Match(const char*, __sanitizer::SuppressionType, __sanitizer::Suppression**) -->
          <function-decl name='Match' mangled-name='_ZN11__sanitizer18SuppressionContext5MatchEPKcNS_15SuppressionTypeEPPNS_11SuppressionE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuppressionContext*' -->
            <parameter type-id='c0924c0e' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'enum __sanitizer::SuppressionType' -->
            <parameter type-id='8f71ba54'/>
            <!-- parameter of type '__sanitizer::Suppression**' -->
            <parameter type-id='0471d4e9'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SuppressionContext::Parse(const char*) -->
          <function-decl name='Parse' mangled-name='_ZN11__sanitizer18SuppressionContext5ParseEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuppressionContext*' -->
            <parameter type-id='c0924c0e' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::SuppressionContext::SuppressionCount() -->
          <function-decl name='SuppressionCount' mangled-name='_ZNK11__sanitizer18SuppressionContext16SuppressionCountEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuppressionContext*' -->
            <parameter type-id='53db780b' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __sanitizer::Suppression* __sanitizer::SuppressionContext::SuppressionAt(__sanitizer::uptr) -->
          <function-decl name='SuppressionAt' mangled-name='_ZNK11__sanitizer18SuppressionContext13SuppressionAtEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuppressionContext*' -->
            <parameter type-id='53db780b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const __sanitizer::Suppression* -->
            <return type-id='bcd7d70e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SuppressionContext::GetMatched(__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*) -->
          <function-decl name='GetMatched' mangled-name='_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuppressionContext*' -->
            <parameter type-id='c0924c0e' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::InternalMmapVector<__sanitizer::Suppression*>*' -->
            <parameter type-id='3630ff7d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- char[256] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='2048' id='d1617432'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='4c87fef4' id='36e5b9fa'/>
    </array-type-def>
    <!-- unsigned char[8] -->
    <array-type-def dimensions='1' type-id='002ac4a6' size-in-bits='64' id='491d0410'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' type-id='4c87fef4' id='56e0c0b1'/>
    </array-type-def>
    <!-- struct sigaltstack -->
    <class-decl name='sigaltstack' size-in-bits='192' is-struct='yes' visibility='default' filepath='/usr/include/bits/sigstack.h' line='50' column='1' id='177987c3'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* sigaltstack::ss_sp -->
        <var-decl name='ss_sp' type-id='eaa32e2f' visibility='default' filepath='/usr/include/bits/sigstack.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int sigaltstack::ss_flags -->
        <var-decl name='ss_flags' type-id='95e97e5e' visibility='default' filepath='/usr/include/bits/sigstack.h' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- size_t sigaltstack::ss_size -->
        <var-decl name='ss_size' type-id='b59d7dce' visibility='default' filepath='/usr/include/bits/sigstack.h' line='54' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef int64_t Elf64_Sxword -->
    <typedef-decl name='Elf64_Sxword' type-id='9da381c4' filepath='/usr/include/elf.h' line='46' column='1' id='622e0f13'/>
    <!-- struct Elf64_Dyn -->
    <class-decl name='Elf64_Dyn' size-in-bits='128' is-struct='yes' naming-typedef-id='531428b7' visibility='default' filepath='/usr/include/elf.h' line='643' column='1' id='e2ec0844'>
      <member-type access='public'>
        <!-- union {Elf64_Xword d_val; Elf64_Addr d_ptr;} -->
        <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/usr/include/elf.h' line='646' column='1' id='ac5ab596'>
          <data-member access='public'>
            <!-- Elf64_Xword d_val -->
            <var-decl name='d_val' type-id='c87c44e4' visibility='default' filepath='/usr/include/elf.h' line='647' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- Elf64_Addr d_ptr -->
            <var-decl name='d_ptr' type-id='e14340cf' visibility='default' filepath='/usr/include/elf.h' line='648' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Elf64_Sxword Elf64_Dyn::d_tag -->
        <var-decl name='d_tag' type-id='622e0f13' visibility='default' filepath='/usr/include/elf.h' line='644' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- union {Elf64_Xword d_val; Elf64_Addr d_ptr;} Elf64_Dyn::d_un -->
        <var-decl name='d_un' type-id='ac5ab596' visibility='default' filepath='/usr/include/elf.h' line='649' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef Elf64_Dyn Elf64_Dyn -->
    <typedef-decl name='Elf64_Dyn' type-id='e2ec0844' filepath='/usr/include/elf.h' line='650' column='1' id='531428b7'/>
    <!-- struct link_map -->
    <class-decl name='link_map' size-in-bits='320' is-struct='yes' visibility='default' filepath='/usr/include/link.h' line='85' column='1' id='3e274cd4'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Elf64_Addr link_map::l_addr -->
        <var-decl name='l_addr' type-id='e14340cf' visibility='default' filepath='/usr/include/link.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* link_map::l_name -->
        <var-decl name='l_name' type-id='26a90f95' visibility='default' filepath='/usr/include/link.h' line='91' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- Elf64_Dyn* link_map::l_ld -->
        <var-decl name='l_ld' type-id='e981bfb2' visibility='default' filepath='/usr/include/link.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- link_map* link_map::l_next -->
        <var-decl name='l_next' type-id='981815f2' visibility='default' filepath='/usr/include/link.h' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- link_map* link_map::l_prev -->
        <var-decl name='l_prev' type-id='981815f2' visibility='default' filepath='/usr/include/link.h' line='93' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef long int int64_t -->
    <typedef-decl name='int64_t' type-id='bd54fe1a' filepath='/usr/include/sys/types.h' line='198' column='1' id='9da381c4'/>
    <!-- Elf64_Dyn* -->
    <pointer-type-def type-id='531428b7' size-in-bits='64' id='e981bfb2'/>
    <!-- __sanitizer::MemoryMappingLayout* -->
    <pointer-type-def type-id='61bb8ee3' size-in-bits='64' id='87bc8d23'/>
    <!-- __sanitizer::ThreadLister* -->
    <pointer-type-def type-id='6b597791' size-in-bits='64' id='d3713379'/>
    <!-- __sanitizer::__sanitizer_kernel_sigaction_t* -->
    <pointer-type-def type-id='d52dcf32' size-in-bits='64' id='d1a2ba30'/>
    <!-- __sanitizer::__sanitizer_kernel_sigset_t* -->
    <pointer-type-def type-id='a6ec5ee2' size-in-bits='64' id='849caae0'/>
    <!-- __sanitizer::linux_dirent* -->
    <pointer-type-def type-id='adab0775' size-in-bits='64' id='53d306a5'/>
    <!-- char* const -->
    <qualified-type-def type-id='26a90f95' const='yes' id='57de658a'/>
    <!-- char* const* -->
    <pointer-type-def type-id='57de658a' size-in-bits='64' id='f319fae0'/>
    <!-- const __sanitizer::__sanitizer_kernel_sigaction_t -->
    <qualified-type-def type-id='d52dcf32' const='yes' id='6d0f38a5'/>
    <!-- const __sanitizer::__sanitizer_kernel_sigaction_t* -->
    <pointer-type-def type-id='6d0f38a5' size-in-bits='64' id='3df6091d'/>
    <!-- const sigaltstack -->
    <qualified-type-def type-id='177987c3' const='yes' id='49cf13a8'/>
    <!-- const sigaltstack* -->
    <pointer-type-def type-id='49cf13a8' size-in-bits='64' id='b2fbb5a6'/>
    <!-- const volatile __sanitizer::atomic_uint32_t -->
    <qualified-type-def type-id='d5d8cb68' const='yes' id='a1544aeb'/>
    <!-- const volatile __sanitizer::atomic_uint32_t* -->
    <pointer-type-def type-id='a1544aeb' size-in-bits='64' id='b8b1add3'/>
    <!-- int (void*)* -->
    <pointer-type-def type-id='9efbfb11' size-in-bits='64' id='b9b212f5'/>
    <!-- link_map* -->
    <pointer-type-def type-id='3e274cd4' size-in-bits='64' id='981815f2'/>
    <!-- sigaltstack* -->
    <pointer-type-def type-id='177987c3' size-in-bits='64' id='9ff85163'/>
    <!-- void (int)* -->
    <pointer-type-def type-id='f712e2b7' size-in-bits='64' id='03347643'/>
    <!-- void (int, void*, void*)* -->
    <pointer-type-def type-id='49f60517' size-in-bits='64' id='fadefae3'/>
    <!-- void (typedef __sanitizer::uptr, typedef __sanitizer::uptr, bool, __sanitizer::uptr*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='226a6a65' size-in-bits='64' id='0a2d4379'/>
    <!-- void (void*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='3583ca35' size-in-bits='64' id='de0b2c31'/>
    <!-- volatile __sanitizer::atomic_uint32_t -->
    <qualified-type-def type-id='8e51b2c2' volatile='yes' id='d5d8cb68'/>
    <!-- volatile __sanitizer::atomic_uint32_t* -->
    <pointer-type-def type-id='d5d8cb68' size-in-bits='64' id='e647f8e6'/>
    <!-- volatile __sanitizer::atomic_uint32_t::Type -->
    <qualified-type-def type-id='9c64597f' volatile='yes' id='d669196c'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- struct __sanitizer::atomic_uint32_t -->
      <class-decl name='atomic_uint32_t' size-in-bits='32' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='38' column='1' id='8e51b2c2'>
        <member-type access='public'>
          <!-- typedef __sanitizer::u32 __sanitizer::atomic_uint32_t::Type -->
          <typedef-decl name='Type' type-id='3ae5bbe9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='39' column='1' id='9c64597f'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- volatile __sanitizer::atomic_uint32_t::Type __sanitizer::atomic_uint32_t::val_dont_use -->
          <var-decl name='val_dont_use' type-id='d669196c' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic.h' line='40' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef unsigned int __sanitizer::u32 -->
      <typedef-decl name='u32' type-id='f0981eeb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='68' column='1' id='3ae5bbe9'/>
      <!-- typedef __sanitizer::u64 __sanitizer::OFF_T -->
      <typedef-decl name='OFF_T' type-id='ceed60aa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='81' column='1' id='43055039'/>
      <!-- struct __sanitizer::linux_dirent -->
      <class-decl name='linux_dirent' size-in-bits='2240' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='565' column='1' id='adab0775'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned long int __sanitizer::linux_dirent::d_ino -->
          <var-decl name='d_ino' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='566' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- unsigned long int __sanitizer::linux_dirent::d_off -->
          <var-decl name='d_off' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='567' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned short int __sanitizer::linux_dirent::d_reclen -->
          <var-decl name='d_reclen' type-id='8efea9e5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='568' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='144'>
          <!-- char __sanitizer::linux_dirent::d_name[256] -->
          <var-decl name='d_name' type-id='d1617432' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='569' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::ThreadLister -->
      <class-decl name='ThreadLister' size-in-bits='384' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='46' column='1' id='6b597791'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- int __sanitizer::ThreadLister::pid_ -->
          <var-decl name='pid_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='59' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='32'>
          <!-- int __sanitizer::ThreadLister::descriptor_ -->
          <var-decl name='descriptor_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='60' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::InternalScopedBuffer<char> __sanitizer::ThreadLister::buffer_ -->
          <var-decl name='buffer_' type-id='a137668f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='61' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- bool __sanitizer::ThreadLister::error_ -->
          <var-decl name='error_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='62' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='256'>
          <!-- __sanitizer::linux_dirent* __sanitizer::ThreadLister::entry_ -->
          <var-decl name='entry_' type-id='53d306a5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='63' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='320'>
          <!-- int __sanitizer::ThreadLister::bytes_read_ -->
          <var-decl name='bytes_read_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='64' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadLister::ThreadLister(int) -->
          <function-decl name='ThreadLister' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ThreadLister::~ThreadLister(int) -->
          <function-decl name='~ThreadLister' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::ThreadLister::GetDirectoryEntries() -->
          <function-decl name='GetDirectoryEntries' mangled-name='_ZN11__sanitizer12ThreadLister19GetDirectoryEntriesEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadLister::ThreadLister(int) -->
          <function-decl name='ThreadLister' mangled-name='_ZN11__sanitizer12ThreadListerC2Ei' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadLister::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN11__sanitizer12ThreadLister5ResetEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ThreadLister::~ThreadLister(int) -->
          <function-decl name='~ThreadLister' mangled-name='_ZN11__sanitizer12ThreadListerD2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::ThreadLister::error() -->
          <function-decl name='error' mangled-name='_ZN11__sanitizer12ThreadLister5errorEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- int __sanitizer::ThreadLister::GetNextTID() -->
          <function-decl name='GetNextTID' mangled-name='_ZN11__sanitizer12ThreadLister10GetNextTIDEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadLister*' -->
            <parameter type-id='d3713379' is-artificial='yes'/>
            <!-- int -->
            <return type-id='95e97e5e'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_kernel_sigset_t -->
      <class-decl name='__sanitizer_kernel_sigset_t' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='419' column='1' id='a6ec5ee2'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned char __sanitizer::__sanitizer_kernel_sigset_t::sig[8] -->
          <var-decl name='sig' type-id='491d0410' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='420' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_kernel_sigaction_t -->
      <class-decl name='__sanitizer_kernel_sigaction_t' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='423' column='1' id='d52dcf32'>
        <member-type access='public'>
          <!-- union {void (int, void*, void*)* sigaction; void (int)* handler;} -->
          <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='424' column='1' id='ac5ab597'>
            <data-member access='public'>
              <!-- void (int, void*, void*)* sigaction -->
              <var-decl name='sigaction' type-id='fadefae3' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='425' column='1'/>
            </data-member>
            <data-member access='public'>
              <!-- void (int)* handler -->
              <var-decl name='handler' type-id='03347643' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='426' column='1'/>
            </data-member>
          </union-decl>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- union {void (int, void*, void*)* sigaction; void (int)* handler;} -->
          <var-decl name='' type-id='ac5ab597' visibility='default'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- unsigned long int __sanitizer::__sanitizer_kernel_sigaction_t::sa_flags -->
          <var-decl name='sa_flags' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='428' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- void ()* __sanitizer::__sanitizer_kernel_sigaction_t::sa_restorer -->
          <var-decl name='sa_restorer' type-id='953b12f8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='429' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::__sanitizer_kernel_sigset_t __sanitizer::__sanitizer_kernel_sigaction_t::sa_mask -->
          <var-decl name='sa_mask' type-id='a6ec5ee2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='430' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::ProcSelfMapsBuff -->
      <class-decl name='ProcSelfMapsBuff' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='35' column='1' id='945164e6'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::ProcSelfMapsBuff::data -->
          <var-decl name='data' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='36' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::ProcSelfMapsBuff::mmaped_size -->
          <var-decl name='mmaped_size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='37' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::ProcSelfMapsBuff::len -->
          <var-decl name='len' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='38' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::MemoryMappingLayout -->
      <class-decl name='MemoryMappingLayout' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='42' column='1' id='61bb8ee3'>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::MemoryMappingLayout::kProtectionRead -->
          <var-decl name='kProtectionRead' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='60' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::MemoryMappingLayout::kProtectionWrite -->
          <var-decl name='kProtectionWrite' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='61' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::MemoryMappingLayout::kProtectionExecute -->
          <var-decl name='kProtectionExecute' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='62' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::MemoryMappingLayout::kProtectionShared -->
          <var-decl name='kProtectionShared' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='63' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::ProcSelfMapsBuff __sanitizer::MemoryMappingLayout::proc_self_maps_ -->
          <var-decl name='proc_self_maps_' type-id='945164e6' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='100' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- char* __sanitizer::MemoryMappingLayout::current_ -->
          <var-decl name='current_' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='101' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static __sanitizer::ProcSelfMapsBuff __sanitizer::MemoryMappingLayout::cached_proc_self_maps_ -->
          <var-decl name='cached_proc_self_maps_' type-id='945164e6' mangled-name='_ZN11__sanitizer19MemoryMappingLayout22cached_proc_self_maps_E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='104' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static __sanitizer::StaticSpinMutex __sanitizer::MemoryMappingLayout::cache_lock_ -->
          <var-decl name='cache_lock_' type-id='c5c2fa97' mangled-name='_ZN11__sanitizer19MemoryMappingLayout11cache_lock_E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='105' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::MemoryMappingLayout::MemoryMappingLayout(bool) -->
          <function-decl name='MemoryMappingLayout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::MemoryMappingLayout::~MemoryMappingLayout(int) -->
          <function-decl name='~MemoryMappingLayout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::MemoryMappingLayout::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN11__sanitizer19MemoryMappingLayout5ResetEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::MemoryMappingLayout::~MemoryMappingLayout(int) -->
          <function-decl name='~MemoryMappingLayout' mangled-name='_ZN11__sanitizer19MemoryMappingLayoutD2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- void __sanitizer::MemoryMappingLayout::CacheMemoryMappings() -->
          <function-decl name='CacheMemoryMappings' mangled-name='_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::MemoryMappingLayout::LoadFromCache() -->
          <function-decl name='LoadFromCache' mangled-name='_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::MemoryMappingLayout::MemoryMappingLayout(bool) -->
          <function-decl name='MemoryMappingLayout' mangled-name='_ZN11__sanitizer19MemoryMappingLayoutC2Eb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::MemoryMappingLayout::Next(__sanitizer::uptr*, __sanitizer::uptr*, __sanitizer::uptr*, char*, __sanitizer::uptr, __sanitizer::uptr*) -->
          <function-decl name='Next' mangled-name='_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_PcmS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='26a90f95'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::MemoryMappingLayout::IterateForObjectNameAndOffset(__sanitizer::uptr, __sanitizer::uptr*, char*, __sanitizer::uptr, __sanitizer::uptr*) -->
          <function-decl name='IterateForObjectNameAndOffset' mangled-name='_ZN11__sanitizer19MemoryMappingLayout29IterateForObjectNameAndOffsetEmPmPcmS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='26a90f95'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::MemoryMappingLayout::GetObjectNameAndOffset(__sanitizer::uptr, __sanitizer::uptr*, char*, __sanitizer::uptr, __sanitizer::uptr*) -->
          <function-decl name='GetObjectNameAndOffset' mangled-name='_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcmS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::MemoryMappingLayout*' -->
            <parameter type-id='87bc8d23' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='26a90f95'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef void (typedef __sanitizer::uptr, typedef __sanitizer::uptr, bool, __sanitizer::uptr*, typedef __sanitizer::uptr)* __sanitizer::fill_profile_f -->
      <typedef-decl name='fill_profile_f' type-id='0a2d4379' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_procmaps.h' line='119' column='1' id='3afc2197'/>
      <!-- __sanitizer::atomic_uint32_t::Type __sanitizer::atomic_load<__sanitizer::atomic_uint32_t>(const volatile __sanitizer::atomic_uint32_t*, __sanitizer::memory_order) -->
      <function-decl name='atomic_load&lt;__sanitizer::atomic_uint32_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const volatile __sanitizer::atomic_uint32_t*' -->
        <parameter type-id='b8b1add3'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint32_t::Type -->
        <return type-id='9c64597f'/>
      </function-decl>
      <!-- __sanitizer::atomic_uint32_t::Type __sanitizer::atomic_exchange<__sanitizer::atomic_uint32_t>(volatile __sanitizer::atomic_uint32_t*, __sanitizer::atomic_uint32_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_exchange&lt;__sanitizer::atomic_uint32_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint32_t*' -->
        <parameter type-id='e647f8e6'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint32_t::Type' -->
        <parameter type-id='9c64597f'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint32_t::Type -->
        <return type-id='9c64597f'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_close(__sanitizer::fd_t) -->
      <function-decl name='internal_close' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::fd_t' -->
        <parameter type-id='32bd5dec'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_open(const char*, int) -->
      <function-decl name='internal_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_open(const char*, int, __sanitizer::u32) -->
      <function-decl name='internal_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'typedef __sanitizer::u32' -->
        <parameter type-id='3ae5bbe9'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_stat(const char*, void*) -->
      <function-decl name='internal_stat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_fstat(__sanitizer::fd_t, void*) -->
      <function-decl name='internal_fstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::fd_t' -->
        <parameter type-id='32bd5dec'/>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_readlink(const char*, char*, __sanitizer::uptr) -->
      <function-decl name='internal_readlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_sched_yield() -->
      <function-decl name='internal_sched_yield' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_execve(const char*, char* const*, char* const*) -->
      <function-decl name='internal_execve' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='201' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'char* const*' -->
        <parameter type-id='f319fae0'/>
        <!-- parameter of type 'char* const*' -->
        <parameter type-id='f319fae0'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_getdents(__sanitizer::fd_t, __sanitizer::linux_dirent*, unsigned int) -->
      <function-decl name='internal_getdents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='590' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::fd_t' -->
        <parameter type-id='32bd5dec'/>
        <!-- parameter of type '__sanitizer::linux_dirent*' -->
        <parameter type-id='53d306a5'/>
        <!-- parameter of type 'unsigned int' -->
        <parameter type-id='f0981eeb'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::internal_lseek(__sanitizer::fd_t, __sanitizer::OFF_T, int) -->
      <function-decl name='internal_lseek' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux.cc' line='594' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::fd_t' -->
        <parameter type-id='32bd5dec'/>
        <!-- parameter of type 'typedef __sanitizer::OFF_T' -->
        <parameter type-id='43055039'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- bool __sanitizer::internal_iserror(__sanitizer::uptr, int*) -->
      <function-decl name='internal_iserror' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_syscall_linux_x86_64.inc' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int*' -->
        <parameter type-id='7292109c'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
    </namespace-decl>
    <!-- int (void*) -->
    <function-type size-in-bits='64' id='9efbfb11'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- void (int, void*, void*) -->
    <function-type size-in-bits='64' id='49f60517'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (__sanitizer::uptr, __sanitizer::uptr, bool, __sanitizer::uptr*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='226a6a65'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='c894953d'/>
      <!-- parameter of type '__sanitizer::uptr*' -->
      <parameter type-id='60a62555'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- bool (const char*) -->
    <function-type size-in-bits='64' id='e0e37a39'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
    <!-- __sanitizer::uptr (int, int, void*, void*) -->
    <function-type size-in-bits='64' id='b341ae3f'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_linux_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- char[56] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='448' id='6093ff7c'>
      <!-- <anonymous range>[56] -->
      <subrange length='56' type-id='4c87fef4' id='f8137894'/>
    </array-type-def>
    <!-- typedef unsigned long int _Unwind_Ptr -->
    <typedef-decl name='_Unwind_Ptr' type-id='7359adad' filepath='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/host-x86_64-unknown-linux-gnu/gcc/include/unwind.h' line='53' column='1' id='d5d12e25'/>
    <!-- enum _Unwind_Reason_Code -->
    <enum-decl name='_Unwind_Reason_Code' naming-typedef-id='f2ae238b' linkage-name='19_Unwind_Reason_Code' filepath='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/host-x86_64-unknown-linux-gnu/gcc/include/unwind.h' line='66' column='1' id='708591b7'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='_URC_NO_REASON' value='0'/>
      <enumerator name='_URC_FOREIGN_EXCEPTION_CAUGHT' value='1'/>
      <enumerator name='_URC_FATAL_PHASE2_ERROR' value='2'/>
      <enumerator name='_URC_FATAL_PHASE1_ERROR' value='3'/>
      <enumerator name='_URC_NORMAL_STOP' value='4'/>
      <enumerator name='_URC_END_OF_STACK' value='5'/>
      <enumerator name='_URC_HANDLER_FOUND' value='6'/>
      <enumerator name='_URC_INSTALL_CONTEXT' value='7'/>
      <enumerator name='_URC_CONTINUE_UNWIND' value='8'/>
    </enum-decl>
    <!-- typedef _Unwind_Reason_Code _Unwind_Reason_Code -->
    <typedef-decl name='_Unwind_Reason_Code' type-id='708591b7' filepath='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/host-x86_64-unknown-linux-gnu/gcc/include/unwind.h' line='76' column='1' id='f2ae238b'/>
    <!-- union pthread_attr_t -->
    <union-decl name='pthread_attr_t' size-in-bits='448' naming-typedef-id='7d8569fd' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='54' column='1' id='b63afacd'>
      <data-member access='public'>
        <!-- char pthread_attr_t::__size[56] -->
        <var-decl name='__size' type-id='6093ff7c' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='55' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- long int pthread_attr_t::__align -->
        <var-decl name='__align' type-id='bd54fe1a' visibility='default' filepath='/usr/include/bits/pthreadtypes.h' line='56' column='1'/>
      </data-member>
    </union-decl>
    <!-- typedef pthread_attr_t pthread_attr_t -->
    <typedef-decl name='pthread_attr_t' type-id='b63afacd' filepath='/usr/include/bits/pthreadtypes.h' line='57' column='1' id='7d8569fd'/>
    <!-- _Unwind_Context* -->
    <pointer-type-def type-id='bc5b1d4b' size-in-bits='64' id='1fc2105b'/>
    <!-- bool (const char*)* -->
    <pointer-type-def type-id='e0e37a39' size-in-bits='64' id='af3b614d'/>
    <!-- const pthread_attr_t -->
    <qualified-type-def type-id='7d8569fd' const='yes' id='e06dee2d'/>
    <!-- const pthread_attr_t* -->
    <pointer-type-def type-id='e06dee2d' size-in-bits='64' id='540db505'/>
    <!-- pthread_attr_t* -->
    <pointer-type-def type-id='7d8569fd' size-in-bits='64' id='7347a39e'/>
    <!-- void** -->
    <pointer-type-def type-id='eaa32e2f' size-in-bits='64' id='63e171df'/>
    <!-- struct _Unwind_Context -->
    <class-decl name='_Unwind_Context' is-struct='yes' visibility='default' is-declaration-only='yes' id='bc5b1d4b'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- typedef bool (const char*)* __sanitizer::string_predicate_t -->
      <typedef-decl name='string_predicate_t' type-id='af3b614d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='467' column='1' id='11b7cc1d'/>
      <!-- __sanitizer::uptr __sanitizer::Unwind_GetIP(_Unwind_Context*) -->
      <function-decl name='Unwind_GetIP' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux_libcdep.cc' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '_Unwind_Context*' -->
        <parameter type-id='1fc2105b'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::GetTlsSize() -->
      <function-decl name='GetTlsSize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux_libcdep.cc' line='204' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::ThreadSelf() -->
      <function-decl name='ThreadSelf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_linux_libcdep.cc' line='254' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
    </namespace-decl>
    <!-- _Unwind_Ptr _Unwind_GetIP(_Unwind_Context*) -->
    <function-decl name='_Unwind_GetIP' filepath='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/host-x86_64-unknown-linux-gnu/gcc/include/unwind.h' line='173' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '_Unwind_Context*' -->
      <parameter type-id='1fc2105b'/>
      <!-- typedef _Unwind_Ptr -->
      <return type-id='d5d12e25'/>
    </function-decl>
    <!-- int pthread_attr_setstacksize(pthread_attr_t*, size_t) -->
    <function-decl name='pthread_attr_setstacksize' filepath='/usr/include/pthread.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'pthread_attr_t*' -->
      <parameter type-id='7347a39e'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_attr_getstack(const pthread_attr_t*, void**, size_t*) -->
    <function-decl name='pthread_attr_getstack' filepath='/usr/include/pthread.h' line='373' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const pthread_attr_t*' -->
      <parameter type-id='540db505'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df'/>
      <!-- parameter of type 'size_t*' -->
      <parameter type-id='78c01427'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int prctl(int, ...) -->
    <function-decl name='prctl' filepath='/usr/include/sys/prctl.h' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- size_t confstr(int, char*, size_t) -->
    <function-decl name='confstr' filepath='/usr/include/unistd.h' line='620' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- typedef size_t -->
      <return type-id='b59d7dce'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- unsigned int __sanitizer::struct_statfs64_sz -->
      <var-decl name='struct_statfs64_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_statfs64_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc' line='63' column='1'/>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- unsigned int __sanitizer::struct_utsname_sz -->
      <var-decl name='struct_utsname_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_utsname_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='120' column='1'/>
      <!-- unsigned int __sanitizer::struct_stat_sz -->
      <var-decl name='struct_stat_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14struct_stat_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='121' column='1'/>
      <!-- unsigned int __sanitizer::struct_stat64_sz -->
      <var-decl name='struct_stat64_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_stat64_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='123' column='1'/>
      <!-- unsigned int __sanitizer::struct_rusage_sz -->
      <var-decl name='struct_rusage_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_rusage_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='125' column='1'/>
      <!-- unsigned int __sanitizer::struct_tm_sz -->
      <var-decl name='struct_tm_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12struct_tm_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='126' column='1'/>
      <!-- unsigned int __sanitizer::struct_passwd_sz -->
      <var-decl name='struct_passwd_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_passwd_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='127' column='1'/>
      <!-- unsigned int __sanitizer::struct_group_sz -->
      <var-decl name='struct_group_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_group_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='128' column='1'/>
      <!-- unsigned int __sanitizer::siginfo_t_sz -->
      <var-decl name='siginfo_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12siginfo_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='129' column='1'/>
      <!-- unsigned int __sanitizer::struct_sigaction_sz -->
      <var-decl name='struct_sigaction_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_sigaction_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='130' column='1'/>
      <!-- unsigned int __sanitizer::struct_itimerval_sz -->
      <var-decl name='struct_itimerval_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_itimerval_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='131' column='1'/>
      <!-- unsigned int __sanitizer::pthread_t_sz -->
      <var-decl name='pthread_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12pthread_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='132' column='1'/>
      <!-- unsigned int __sanitizer::pthread_cond_t_sz -->
      <var-decl name='pthread_cond_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17pthread_cond_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='133' column='1'/>
      <!-- unsigned int __sanitizer::pid_t_sz -->
      <var-decl name='pid_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer8pid_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='134' column='1'/>
      <!-- unsigned int __sanitizer::timeval_sz -->
      <var-decl name='timeval_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer10timeval_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='135' column='1'/>
      <!-- unsigned int __sanitizer::uid_t_sz -->
      <var-decl name='uid_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer8uid_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='136' column='1'/>
      <!-- unsigned int __sanitizer::mbstate_t_sz -->
      <var-decl name='mbstate_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12mbstate_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='137' column='1'/>
      <!-- unsigned int __sanitizer::sigset_t_sz -->
      <var-decl name='sigset_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer11sigset_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='138' column='1'/>
      <!-- unsigned int __sanitizer::struct_timezone_sz -->
      <var-decl name='struct_timezone_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_timezone_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='139' column='1'/>
      <!-- unsigned int __sanitizer::struct_tms_sz -->
      <var-decl name='struct_tms_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13struct_tms_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='140' column='1'/>
      <!-- unsigned int __sanitizer::struct_sigevent_sz -->
      <var-decl name='struct_sigevent_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_sigevent_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='141' column='1'/>
      <!-- unsigned int __sanitizer::struct_sched_param_sz -->
      <var-decl name='struct_sched_param_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_sched_param_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='142' column='1'/>
      <!-- unsigned int __sanitizer::struct_statfs_sz -->
      <var-decl name='struct_statfs_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_statfs_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='143' column='1'/>
      <!-- unsigned int __sanitizer::ucontext_t_sz -->
      <var-decl name='ucontext_t_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13ucontext_t_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='150' column='1'/>
      <!-- unsigned int __sanitizer::struct_rlimit_sz -->
      <var-decl name='struct_rlimit_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_rlimit_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='154' column='1'/>
      <!-- unsigned int __sanitizer::struct_epoll_event_sz -->
      <var-decl name='struct_epoll_event_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_epoll_event_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='155' column='1'/>
      <!-- unsigned int __sanitizer::struct_sysinfo_sz -->
      <var-decl name='struct_sysinfo_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_sysinfo_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='156' column='1'/>
      <!-- unsigned int __sanitizer::struct_timespec_sz -->
      <var-decl name='struct_timespec_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_timespec_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='157' column='1'/>
      <!-- unsigned int __sanitizer::__user_cap_header_struct_sz -->
      <var-decl name='__user_cap_header_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27__user_cap_header_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='158' column='1'/>
      <!-- unsigned int __sanitizer::__user_cap_data_struct_sz -->
      <var-decl name='__user_cap_data_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25__user_cap_data_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='160' column='1'/>
      <!-- unsigned int __sanitizer::struct_utimbuf_sz -->
      <var-decl name='struct_utimbuf_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_utimbuf_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='161' column='1'/>
      <!-- unsigned int __sanitizer::struct_new_utsname_sz -->
      <var-decl name='struct_new_utsname_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_new_utsname_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='162' column='1'/>
      <!-- unsigned int __sanitizer::struct_old_utsname_sz -->
      <var-decl name='struct_old_utsname_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_old_utsname_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='163' column='1'/>
      <!-- unsigned int __sanitizer::struct_oldold_utsname_sz -->
      <var-decl name='struct_oldold_utsname_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_oldold_utsname_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='164' column='1'/>
      <!-- unsigned int __sanitizer::struct_itimerspec_sz -->
      <var-decl name='struct_itimerspec_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_itimerspec_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='165' column='1'/>
      <!-- unsigned int __sanitizer::struct_ustat_sz -->
      <var-decl name='struct_ustat_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_ustat_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='166' column='1'/>
      <!-- unsigned int __sanitizer::struct_rlimit64_sz -->
      <var-decl name='struct_rlimit64_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_rlimit64_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='170' column='1'/>
      <!-- unsigned int __sanitizer::struct_timex_sz -->
      <var-decl name='struct_timex_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_timex_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='171' column='1'/>
      <!-- unsigned int __sanitizer::struct_msqid_ds_sz -->
      <var-decl name='struct_msqid_ds_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_msqid_ds_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='172' column='1'/>
      <!-- unsigned int __sanitizer::struct_mq_attr_sz -->
      <var-decl name='struct_mq_attr_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_mq_attr_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='173' column='1'/>
      <!-- unsigned int __sanitizer::struct_statvfs_sz -->
      <var-decl name='struct_statvfs_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_statvfs_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='174' column='1'/>
      <!-- unsigned int __sanitizer::struct_statvfs64_sz -->
      <var-decl name='struct_statvfs64_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_statvfs64_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='175' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::sig_ign -->
      <var-decl name='sig_ign' type-id='c8e929d2' mangled-name='_ZN11__sanitizer7sig_ignE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='178' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::sig_dfl -->
      <var-decl name='sig_dfl' type-id='c8e929d2' mangled-name='_ZN11__sanitizer7sig_dflE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='179' column='1'/>
      <!-- __sanitizer::uptr __sanitizer::sa_siginfo -->
      <var-decl name='sa_siginfo' type-id='c8e929d2' mangled-name='_ZN11__sanitizer10sa_siginfoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='180' column='1'/>
      <!-- int __sanitizer::e_tabsz -->
      <var-decl name='e_tabsz' type-id='95e97e5e' mangled-name='_ZN11__sanitizer7e_tabszE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='183' column='1'/>
      <!-- unsigned int __sanitizer::struct_shminfo_sz -->
      <var-decl name='struct_shminfo_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_shminfo_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='188' column='1'/>
      <!-- unsigned int __sanitizer::struct_shm_info_sz -->
      <var-decl name='struct_shm_info_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_shm_info_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='189' column='1'/>
      <!-- int __sanitizer::shmctl_ipc_stat -->
      <var-decl name='shmctl_ipc_stat' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15shmctl_ipc_statE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='190' column='1'/>
      <!-- int __sanitizer::shmctl_ipc_info -->
      <var-decl name='shmctl_ipc_info' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15shmctl_ipc_infoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='191' column='1'/>
      <!-- int __sanitizer::shmctl_shm_info -->
      <var-decl name='shmctl_shm_info' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15shmctl_shm_infoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='192' column='1'/>
      <!-- int __sanitizer::shmctl_shm_stat -->
      <var-decl name='shmctl_shm_stat' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15shmctl_shm_statE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='193' column='1'/>
      <!-- int __sanitizer::af_inet -->
      <var-decl name='af_inet' type-id='95e97e5e' mangled-name='_ZN11__sanitizer7af_inetE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='196' column='1'/>
      <!-- int __sanitizer::af_inet6 -->
      <var-decl name='af_inet6' type-id='95e97e5e' mangled-name='_ZN11__sanitizer8af_inet6E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='197' column='1'/>
      <!-- int __sanitizer::glob_nomatch -->
      <var-decl name='glob_nomatch' type-id='95e97e5e' mangled-name='_ZN11__sanitizer12glob_nomatchE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='209' column='1'/>
      <!-- int __sanitizer::glob_altdirfunc -->
      <var-decl name='glob_altdirfunc' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15glob_altdirfuncE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='210' column='1'/>
      <!-- unsigned int __sanitizer::struct_user_regs_struct_sz -->
      <var-decl name='struct_user_regs_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26struct_user_regs_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='215' column='1'/>
      <!-- unsigned int __sanitizer::struct_user_fpregs_struct_sz -->
      <var-decl name='struct_user_fpregs_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28struct_user_fpregs_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='216' column='1'/>
      <!-- unsigned int __sanitizer::struct_user_fpxregs_struct_sz -->
      <var-decl name='struct_user_fpxregs_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29struct_user_fpxregs_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='218' column='1'/>
      <!-- int __sanitizer::ptrace_peektext -->
      <var-decl name='ptrace_peektext' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15ptrace_peektextE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='223' column='1'/>
      <!-- int __sanitizer::ptrace_peekdata -->
      <var-decl name='ptrace_peekdata' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15ptrace_peekdataE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='224' column='1'/>
      <!-- int __sanitizer::ptrace_peekuser -->
      <var-decl name='ptrace_peekuser' type-id='95e97e5e' mangled-name='_ZN11__sanitizer15ptrace_peekuserE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='225' column='1'/>
      <!-- int __sanitizer::ptrace_getregs -->
      <var-decl name='ptrace_getregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer14ptrace_getregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='226' column='1'/>
      <!-- int __sanitizer::ptrace_setregs -->
      <var-decl name='ptrace_setregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer14ptrace_setregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='227' column='1'/>
      <!-- int __sanitizer::ptrace_getfpregs -->
      <var-decl name='ptrace_getfpregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer16ptrace_getfpregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='228' column='1'/>
      <!-- int __sanitizer::ptrace_setfpregs -->
      <var-decl name='ptrace_setfpregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer16ptrace_setfpregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='229' column='1'/>
      <!-- int __sanitizer::ptrace_getfpxregs -->
      <var-decl name='ptrace_getfpxregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer17ptrace_getfpxregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='230' column='1'/>
      <!-- int __sanitizer::ptrace_setfpxregs -->
      <var-decl name='ptrace_setfpxregs' type-id='95e97e5e' mangled-name='_ZN11__sanitizer17ptrace_setfpxregsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='231' column='1'/>
      <!-- int __sanitizer::ptrace_getsiginfo -->
      <var-decl name='ptrace_getsiginfo' type-id='95e97e5e' mangled-name='_ZN11__sanitizer17ptrace_getsiginfoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='232' column='1'/>
      <!-- int __sanitizer::ptrace_setsiginfo -->
      <var-decl name='ptrace_setsiginfo' type-id='95e97e5e' mangled-name='_ZN11__sanitizer17ptrace_setsiginfoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='233' column='1'/>
      <!-- int __sanitizer::ptrace_getregset -->
      <var-decl name='ptrace_getregset' type-id='95e97e5e' mangled-name='_ZN11__sanitizer16ptrace_getregsetE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='238' column='1'/>
      <!-- int __sanitizer::ptrace_setregset -->
      <var-decl name='ptrace_setregset' type-id='95e97e5e' mangled-name='_ZN11__sanitizer16ptrace_setregsetE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='239' column='1'/>
      <!-- unsigned int __sanitizer::path_max -->
      <var-decl name='path_max' type-id='f0981eeb' mangled-name='_ZN11__sanitizer8path_maxE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='243' column='1'/>
      <!-- unsigned int __sanitizer::struct_arpreq_sz -->
      <var-decl name='struct_arpreq_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_arpreq_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='246' column='1'/>
      <!-- unsigned int __sanitizer::struct_ifreq_sz -->
      <var-decl name='struct_ifreq_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_ifreq_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='247' column='1'/>
      <!-- unsigned int __sanitizer::struct_termios_sz -->
      <var-decl name='struct_termios_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_termios_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='248' column='1'/>
      <!-- unsigned int __sanitizer::struct_winsize_sz -->
      <var-decl name='struct_winsize_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_winsize_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='249' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_msf_sz -->
      <var-decl name='struct_cdrom_msf_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_cdrom_msf_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='252' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_multisession_sz -->
      <var-decl name='struct_cdrom_multisession_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28struct_cdrom_multisession_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='253' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_read_audio_sz -->
      <var-decl name='struct_cdrom_read_audio_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26struct_cdrom_read_audio_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='254' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_subchnl_sz -->
      <var-decl name='struct_cdrom_subchnl_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_cdrom_subchnl_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='255' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_ti_sz -->
      <var-decl name='struct_cdrom_ti_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_cdrom_ti_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='256' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_tocentry_sz -->
      <var-decl name='struct_cdrom_tocentry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_cdrom_tocentry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='257' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_tochdr_sz -->
      <var-decl name='struct_cdrom_tochdr_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22struct_cdrom_tochdr_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='258' column='1'/>
      <!-- unsigned int __sanitizer::struct_cdrom_volctrl_sz -->
      <var-decl name='struct_cdrom_volctrl_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_cdrom_volctrl_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='259' column='1'/>
      <!-- unsigned int __sanitizer::struct_copr_buffer_sz -->
      <var-decl name='struct_copr_buffer_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_copr_buffer_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='265' column='1'/>
      <!-- unsigned int __sanitizer::struct_copr_debug_buf_sz -->
      <var-decl name='struct_copr_debug_buf_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_copr_debug_buf_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='266' column='1'/>
      <!-- unsigned int __sanitizer::struct_copr_msg_sz -->
      <var-decl name='struct_copr_msg_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_copr_msg_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='267' column='1'/>
      <!-- unsigned int __sanitizer::struct_ff_effect_sz -->
      <var-decl name='struct_ff_effect_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_ff_effect_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='269' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_drive_params_sz -->
      <var-decl name='struct_floppy_drive_params_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29struct_floppy_drive_params_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='270' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_drive_struct_sz -->
      <var-decl name='struct_floppy_drive_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29struct_floppy_drive_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='271' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_fdc_state_sz -->
      <var-decl name='struct_floppy_fdc_state_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26struct_floppy_fdc_state_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='272' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_max_errors_sz -->
      <var-decl name='struct_floppy_max_errors_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27struct_floppy_max_errors_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='273' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_raw_cmd_sz -->
      <var-decl name='struct_floppy_raw_cmd_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_floppy_raw_cmd_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='274' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_struct_sz -->
      <var-decl name='struct_floppy_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_floppy_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='275' column='1'/>
      <!-- unsigned int __sanitizer::struct_floppy_write_errors_sz -->
      <var-decl name='struct_floppy_write_errors_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29struct_floppy_write_errors_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='276' column='1'/>
      <!-- unsigned int __sanitizer::struct_format_descr_sz -->
      <var-decl name='struct_format_descr_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22struct_format_descr_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='277' column='1'/>
      <!-- unsigned int __sanitizer::struct_hd_driveid_sz -->
      <var-decl name='struct_hd_driveid_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_hd_driveid_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='278' column='1'/>
      <!-- unsigned int __sanitizer::struct_hd_geometry_sz -->
      <var-decl name='struct_hd_geometry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_hd_geometry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='279' column='1'/>
      <!-- unsigned int __sanitizer::struct_input_absinfo_sz -->
      <var-decl name='struct_input_absinfo_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_input_absinfo_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='280' column='1'/>
      <!-- unsigned int __sanitizer::struct_input_id_sz -->
      <var-decl name='struct_input_id_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_input_id_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='281' column='1'/>
      <!-- unsigned int __sanitizer::struct_midi_info_sz -->
      <var-decl name='struct_midi_info_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_midi_info_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='282' column='1'/>
      <!-- unsigned int __sanitizer::struct_mtget_sz -->
      <var-decl name='struct_mtget_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_mtget_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='283' column='1'/>
      <!-- unsigned int __sanitizer::struct_mtop_sz -->
      <var-decl name='struct_mtop_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14struct_mtop_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='284' column='1'/>
      <!-- unsigned int __sanitizer::struct_mtpos_sz -->
      <var-decl name='struct_mtpos_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15struct_mtpos_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='285' column='1'/>
      <!-- unsigned int __sanitizer::struct_rtentry_sz -->
      <var-decl name='struct_rtentry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_rtentry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='286' column='1'/>
      <!-- unsigned int __sanitizer::struct_sbi_instrument_sz -->
      <var-decl name='struct_sbi_instrument_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_sbi_instrument_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='287' column='1'/>
      <!-- unsigned int __sanitizer::struct_seq_event_rec_sz -->
      <var-decl name='struct_seq_event_rec_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_seq_event_rec_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='288' column='1'/>
      <!-- unsigned int __sanitizer::struct_synth_info_sz -->
      <var-decl name='struct_synth_info_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_synth_info_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='289' column='1'/>
      <!-- unsigned int __sanitizer::struct_termio_sz -->
      <var-decl name='struct_termio_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16struct_termio_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='290' column='1'/>
      <!-- unsigned int __sanitizer::struct_vt_consize_sz -->
      <var-decl name='struct_vt_consize_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_vt_consize_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='291' column='1'/>
      <!-- unsigned int __sanitizer::struct_vt_mode_sz -->
      <var-decl name='struct_vt_mode_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_vt_mode_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='292' column='1'/>
      <!-- unsigned int __sanitizer::struct_vt_sizes_sz -->
      <var-decl name='struct_vt_sizes_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_vt_sizes_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='293' column='1'/>
      <!-- unsigned int __sanitizer::struct_vt_stat_sz -->
      <var-decl name='struct_vt_stat_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_vt_stat_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='294' column='1'/>
      <!-- unsigned int __sanitizer::struct_audio_buf_info_sz -->
      <var-decl name='struct_audio_buf_info_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24struct_audio_buf_info_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='298' column='1'/>
      <!-- unsigned int __sanitizer::struct_ax25_parms_struct_sz -->
      <var-decl name='struct_ax25_parms_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27struct_ax25_parms_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='299' column='1'/>
      <!-- unsigned int __sanitizer::struct_cyclades_monitor_sz -->
      <var-decl name='struct_cyclades_monitor_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26struct_cyclades_monitor_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='300' column='1'/>
      <!-- unsigned int __sanitizer::struct_input_keymap_entry_sz -->
      <var-decl name='struct_input_keymap_entry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28struct_input_keymap_entry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='304' column='1'/>
      <!-- unsigned int __sanitizer::struct_ipx_config_data_sz -->
      <var-decl name='struct_ipx_config_data_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25struct_ipx_config_data_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='306' column='1'/>
      <!-- unsigned int __sanitizer::struct_kbdiacrs_sz -->
      <var-decl name='struct_kbdiacrs_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_kbdiacrs_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='307' column='1'/>
      <!-- unsigned int __sanitizer::struct_kbentry_sz -->
      <var-decl name='struct_kbentry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17struct_kbentry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='308' column='1'/>
      <!-- unsigned int __sanitizer::struct_kbkeycode_sz -->
      <var-decl name='struct_kbkeycode_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_kbkeycode_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='309' column='1'/>
      <!-- unsigned int __sanitizer::struct_kbsentry_sz -->
      <var-decl name='struct_kbsentry_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_kbsentry_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='310' column='1'/>
      <!-- unsigned int __sanitizer::struct_mtconfiginfo_sz -->
      <var-decl name='struct_mtconfiginfo_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22struct_mtconfiginfo_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='311' column='1'/>
      <!-- unsigned int __sanitizer::struct_nr_parms_struct_sz -->
      <var-decl name='struct_nr_parms_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25struct_nr_parms_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='312' column='1'/>
      <!-- unsigned int __sanitizer::struct_ppp_stats_sz -->
      <var-decl name='struct_ppp_stats_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_ppp_stats_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='313' column='1'/>
      <!-- unsigned int __sanitizer::struct_scc_modem_sz -->
      <var-decl name='struct_scc_modem_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19struct_scc_modem_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='314' column='1'/>
      <!-- unsigned int __sanitizer::struct_scc_stat_sz -->
      <var-decl name='struct_scc_stat_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18struct_scc_stat_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='315' column='1'/>
      <!-- unsigned int __sanitizer::struct_serial_multiport_struct_sz -->
      <var-decl name='struct_serial_multiport_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer33struct_serial_multiport_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='316' column='1'/>
      <!-- unsigned int __sanitizer::struct_serial_struct_sz -->
      <var-decl name='struct_serial_struct_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_serial_struct_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='318' column='1'/>
      <!-- unsigned int __sanitizer::struct_sockaddr_ax25_sz -->
      <var-decl name='struct_sockaddr_ax25_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23struct_sockaddr_ax25_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='319' column='1'/>
      <!-- unsigned int __sanitizer::struct_unimapdesc_sz -->
      <var-decl name='struct_unimapdesc_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_unimapdesc_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='320' column='1'/>
      <!-- unsigned int __sanitizer::struct_unimapinit_sz -->
      <var-decl name='struct_unimapinit_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20struct_unimapinit_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='321' column='1'/>
      <!-- unsigned int __sanitizer::struct_sioc_sg_req_sz -->
      <var-decl name='struct_sioc_sg_req_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21struct_sioc_sg_req_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='325' column='1'/>
      <!-- unsigned int __sanitizer::struct_sioc_vif_req_sz -->
      <var-decl name='struct_sioc_vif_req_sz' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22struct_sioc_vif_req_szE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='326' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_NOT_PRESENT -->
      <var-decl name='IOCTL_NOT_PRESENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_NOT_PRESENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='329' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIOASYNC -->
      <var-decl name='IOCTL_FIOASYNC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FIOASYNCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='331' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIOCLEX -->
      <var-decl name='IOCTL_FIOCLEX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_FIOCLEXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='332' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIOGETOWN -->
      <var-decl name='IOCTL_FIOGETOWN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_FIOGETOWNE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='333' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIONBIO -->
      <var-decl name='IOCTL_FIONBIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_FIONBIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='334' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIONCLEX -->
      <var-decl name='IOCTL_FIONCLEX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FIONCLEXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='335' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FIOSETOWN -->
      <var-decl name='IOCTL_FIOSETOWN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_FIOSETOWNE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='336' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCADDMULTI -->
      <var-decl name='IOCTL_SIOCADDMULTI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCADDMULTIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='337' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCATMARK -->
      <var-decl name='IOCTL_SIOCATMARK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCATMARKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='338' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCDELMULTI -->
      <var-decl name='IOCTL_SIOCDELMULTI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCDELMULTIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='339' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFADDR -->
      <var-decl name='IOCTL_SIOCGIFADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCGIFADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='340' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFBRDADDR -->
      <var-decl name='IOCTL_SIOCGIFBRDADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCGIFBRDADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='341' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFCONF -->
      <var-decl name='IOCTL_SIOCGIFCONF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCGIFCONFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='342' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFDSTADDR -->
      <var-decl name='IOCTL_SIOCGIFDSTADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCGIFDSTADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='343' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFFLAGS -->
      <var-decl name='IOCTL_SIOCGIFFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCGIFFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='344' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFMETRIC -->
      <var-decl name='IOCTL_SIOCGIFMETRIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCGIFMETRICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='345' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFMTU -->
      <var-decl name='IOCTL_SIOCGIFMTU' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCGIFMTUE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='346' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFNETMASK -->
      <var-decl name='IOCTL_SIOCGIFNETMASK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCGIFNETMASKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='347' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGPGRP -->
      <var-decl name='IOCTL_SIOCGPGRP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCGPGRPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='348' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFADDR -->
      <var-decl name='IOCTL_SIOCSIFADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCSIFADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='349' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFBRDADDR -->
      <var-decl name='IOCTL_SIOCSIFBRDADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCSIFBRDADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='350' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFDSTADDR -->
      <var-decl name='IOCTL_SIOCSIFDSTADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCSIFDSTADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='351' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFFLAGS -->
      <var-decl name='IOCTL_SIOCSIFFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCSIFFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='352' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFMETRIC -->
      <var-decl name='IOCTL_SIOCSIFMETRIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCSIFMETRICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='353' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFMTU -->
      <var-decl name='IOCTL_SIOCSIFMTU' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCSIFMTUE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='354' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFNETMASK -->
      <var-decl name='IOCTL_SIOCSIFNETMASK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCSIFNETMASKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='355' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSPGRP -->
      <var-decl name='IOCTL_SIOCSPGRP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCSPGRPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='356' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCCONS -->
      <var-decl name='IOCTL_TIOCCONS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCCONSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='357' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCEXCL -->
      <var-decl name='IOCTL_TIOCEXCL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCEXCLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='358' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGETD -->
      <var-decl name='IOCTL_TIOCGETD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCGETDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='359' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGPGRP -->
      <var-decl name='IOCTL_TIOCGPGRP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_TIOCGPGRPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='360' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGWINSZ -->
      <var-decl name='IOCTL_TIOCGWINSZ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_TIOCGWINSZE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='361' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCMBIC -->
      <var-decl name='IOCTL_TIOCMBIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCMBICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='362' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCMBIS -->
      <var-decl name='IOCTL_TIOCMBIS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCMBISE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='363' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCMGET -->
      <var-decl name='IOCTL_TIOCMGET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCMGETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='364' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCMSET -->
      <var-decl name='IOCTL_TIOCMSET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCMSETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='365' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCNOTTY -->
      <var-decl name='IOCTL_TIOCNOTTY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_TIOCNOTTYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='366' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCNXCL -->
      <var-decl name='IOCTL_TIOCNXCL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCNXCLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='367' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCOUTQ -->
      <var-decl name='IOCTL_TIOCOUTQ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCOUTQE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='368' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCPKT -->
      <var-decl name='IOCTL_TIOCPKT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TIOCPKTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='369' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSCTTY -->
      <var-decl name='IOCTL_TIOCSCTTY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_TIOCSCTTYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='370' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSETD -->
      <var-decl name='IOCTL_TIOCSETD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_TIOCSETDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='371' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSPGRP -->
      <var-decl name='IOCTL_TIOCSPGRP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_TIOCSPGRPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='372' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSTI -->
      <var-decl name='IOCTL_TIOCSTI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TIOCSTIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='373' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSWINSZ -->
      <var-decl name='IOCTL_TIOCSWINSZ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_TIOCSWINSZE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='374' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGETSGCNT -->
      <var-decl name='IOCTL_SIOCGETSGCNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCGETSGCNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='376' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGETVIFCNT -->
      <var-decl name='IOCTL_SIOCGETVIFCNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCGETVIFCNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='377' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGABS -->
      <var-decl name='IOCTL_EVIOCGABS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGABSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='380' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGBIT -->
      <var-decl name='IOCTL_EVIOCGBIT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGBITE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='381' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGEFFECTS -->
      <var-decl name='IOCTL_EVIOCGEFFECTS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_EVIOCGEFFECTSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='382' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGID -->
      <var-decl name='IOCTL_EVIOCGID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_EVIOCGIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='383' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGKEY -->
      <var-decl name='IOCTL_EVIOCGKEY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGKEYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='384' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGKEYCODE -->
      <var-decl name='IOCTL_EVIOCGKEYCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_EVIOCGKEYCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='385' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGLED -->
      <var-decl name='IOCTL_EVIOCGLED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGLEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='386' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGNAME -->
      <var-decl name='IOCTL_EVIOCGNAME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_EVIOCGNAMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='387' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGPHYS -->
      <var-decl name='IOCTL_EVIOCGPHYS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_EVIOCGPHYSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='388' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGRAB -->
      <var-decl name='IOCTL_EVIOCGRAB' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGRABE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='389' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGREP -->
      <var-decl name='IOCTL_EVIOCGREP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGREPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='390' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGSND -->
      <var-decl name='IOCTL_EVIOCGSND' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCGSNDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='391' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGSW -->
      <var-decl name='IOCTL_EVIOCGSW' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_EVIOCGSWE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='392' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGUNIQ -->
      <var-decl name='IOCTL_EVIOCGUNIQ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_EVIOCGUNIQE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='393' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGVERSION -->
      <var-decl name='IOCTL_EVIOCGVERSION' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_EVIOCGVERSIONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='394' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCRMFF -->
      <var-decl name='IOCTL_EVIOCRMFF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCRMFFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='395' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCSABS -->
      <var-decl name='IOCTL_EVIOCSABS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCSABSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='396' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCSFF -->
      <var-decl name='IOCTL_EVIOCSFF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_EVIOCSFFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='397' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCSKEYCODE -->
      <var-decl name='IOCTL_EVIOCSKEYCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_EVIOCSKEYCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='398' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCSREP -->
      <var-decl name='IOCTL_EVIOCSREP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_EVIOCSREPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='399' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKFLSBUF -->
      <var-decl name='IOCTL_BLKFLSBUF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_BLKFLSBUFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='400' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKGETSIZE -->
      <var-decl name='IOCTL_BLKGETSIZE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_BLKGETSIZEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='401' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKRAGET -->
      <var-decl name='IOCTL_BLKRAGET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_BLKRAGETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='402' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKRASET -->
      <var-decl name='IOCTL_BLKRASET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_BLKRASETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='403' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKROGET -->
      <var-decl name='IOCTL_BLKROGET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_BLKROGETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='404' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKROSET -->
      <var-decl name='IOCTL_BLKROSET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_BLKROSETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='405' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_BLKRRPART -->
      <var-decl name='IOCTL_BLKRRPART' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_BLKRRPARTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='406' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMAUDIOBUFSIZ -->
      <var-decl name='IOCTL_CDROMAUDIOBUFSIZ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_CDROMAUDIOBUFSIZE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='407' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMEJECT -->
      <var-decl name='IOCTL_CDROMEJECT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_CDROMEJECTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='408' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMEJECT_SW -->
      <var-decl name='IOCTL_CDROMEJECT_SW' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_CDROMEJECT_SWE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='409' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMMULTISESSION -->
      <var-decl name='IOCTL_CDROMMULTISESSION' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_CDROMMULTISESSIONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='410' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMPAUSE -->
      <var-decl name='IOCTL_CDROMPAUSE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_CDROMPAUSEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='411' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMPLAYMSF -->
      <var-decl name='IOCTL_CDROMPLAYMSF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CDROMPLAYMSFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='412' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMPLAYTRKIND -->
      <var-decl name='IOCTL_CDROMPLAYTRKIND' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_CDROMPLAYTRKINDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='413' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADAUDIO -->
      <var-decl name='IOCTL_CDROMREADAUDIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_CDROMREADAUDIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='414' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADCOOKED -->
      <var-decl name='IOCTL_CDROMREADCOOKED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_CDROMREADCOOKEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='415' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADMODE1 -->
      <var-decl name='IOCTL_CDROMREADMODE1' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_CDROMREADMODE1E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='416' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADMODE2 -->
      <var-decl name='IOCTL_CDROMREADMODE2' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_CDROMREADMODE2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='417' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADRAW -->
      <var-decl name='IOCTL_CDROMREADRAW' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CDROMREADRAWE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='418' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADTOCENTRY -->
      <var-decl name='IOCTL_CDROMREADTOCENTRY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_CDROMREADTOCENTRYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='419' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMREADTOCHDR -->
      <var-decl name='IOCTL_CDROMREADTOCHDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_CDROMREADTOCHDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='420' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMRESET -->
      <var-decl name='IOCTL_CDROMRESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_CDROMRESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='421' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMRESUME -->
      <var-decl name='IOCTL_CDROMRESUME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_CDROMRESUMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='422' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMSEEK -->
      <var-decl name='IOCTL_CDROMSEEK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_CDROMSEEKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='423' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMSTART -->
      <var-decl name='IOCTL_CDROMSTART' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_CDROMSTARTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='424' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMSTOP -->
      <var-decl name='IOCTL_CDROMSTOP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_CDROMSTOPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='425' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMSUBCHNL -->
      <var-decl name='IOCTL_CDROMSUBCHNL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CDROMSUBCHNLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='426' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMVOLCTRL -->
      <var-decl name='IOCTL_CDROMVOLCTRL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CDROMVOLCTRLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='427' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROMVOLREAD -->
      <var-decl name='IOCTL_CDROMVOLREAD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CDROMVOLREADE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='428' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CDROM_GET_UPC -->
      <var-decl name='IOCTL_CDROM_GET_UPC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_CDROM_GET_UPCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='429' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDCLRPRM -->
      <var-decl name='IOCTL_FDCLRPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDCLRPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='430' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDDEFPRM -->
      <var-decl name='IOCTL_FDDEFPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDDEFPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='431' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDFLUSH -->
      <var-decl name='IOCTL_FDFLUSH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_FDFLUSHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='432' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDFMTBEG -->
      <var-decl name='IOCTL_FDFMTBEG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDFMTBEGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='433' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDFMTEND -->
      <var-decl name='IOCTL_FDFMTEND' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDFMTENDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='434' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDFMTTRK -->
      <var-decl name='IOCTL_FDFMTTRK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDFMTTRKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='435' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETDRVPRM -->
      <var-decl name='IOCTL_FDGETDRVPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_FDGETDRVPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='436' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETDRVSTAT -->
      <var-decl name='IOCTL_FDGETDRVSTAT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_FDGETDRVSTATE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='437' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETDRVTYP -->
      <var-decl name='IOCTL_FDGETDRVTYP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_FDGETDRVTYPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='438' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETFDCSTAT -->
      <var-decl name='IOCTL_FDGETFDCSTAT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_FDGETFDCSTATE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='439' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETMAXERRS -->
      <var-decl name='IOCTL_FDGETMAXERRS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_FDGETMAXERRSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='440' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDGETPRM -->
      <var-decl name='IOCTL_FDGETPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDGETPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='441' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDMSGOFF -->
      <var-decl name='IOCTL_FDMSGOFF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDMSGOFFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='442' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDMSGON -->
      <var-decl name='IOCTL_FDMSGON' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_FDMSGONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='443' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDPOLLDRVSTAT -->
      <var-decl name='IOCTL_FDPOLLDRVSTAT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_FDPOLLDRVSTATE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='444' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDRAWCMD -->
      <var-decl name='IOCTL_FDRAWCMD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDRAWCMDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='445' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDRESET -->
      <var-decl name='IOCTL_FDRESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_FDRESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='446' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDSETDRVPRM -->
      <var-decl name='IOCTL_FDSETDRVPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_FDSETDRVPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='447' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDSETEMSGTRESH -->
      <var-decl name='IOCTL_FDSETEMSGTRESH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_FDSETEMSGTRESHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='448' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDSETMAXERRS -->
      <var-decl name='IOCTL_FDSETMAXERRS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_FDSETMAXERRSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='449' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDSETPRM -->
      <var-decl name='IOCTL_FDSETPRM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_FDSETPRME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='450' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDTWADDLE -->
      <var-decl name='IOCTL_FDTWADDLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_FDTWADDLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='451' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDWERRORCLR -->
      <var-decl name='IOCTL_FDWERRORCLR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_FDWERRORCLRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='452' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FDWERRORGET -->
      <var-decl name='IOCTL_FDWERRORGET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_FDWERRORGETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='453' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_DRIVE_CMD -->
      <var-decl name='IOCTL_HDIO_DRIVE_CMD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_HDIO_DRIVE_CMDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='454' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GETGEO -->
      <var-decl name='IOCTL_HDIO_GETGEO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_HDIO_GETGEOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='455' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_32BIT -->
      <var-decl name='IOCTL_HDIO_GET_32BIT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_HDIO_GET_32BITE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='456' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_DMA -->
      <var-decl name='IOCTL_HDIO_GET_DMA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_HDIO_GET_DMAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='457' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_IDENTITY -->
      <var-decl name='IOCTL_HDIO_GET_IDENTITY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_HDIO_GET_IDENTITYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='458' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_KEEPSETTINGS -->
      <var-decl name='IOCTL_HDIO_GET_KEEPSETTINGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_HDIO_GET_KEEPSETTINGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='459' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_MULTCOUNT -->
      <var-decl name='IOCTL_HDIO_GET_MULTCOUNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24IOCTL_HDIO_GET_MULTCOUNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='460' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_NOWERR -->
      <var-decl name='IOCTL_HDIO_GET_NOWERR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_HDIO_GET_NOWERRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='461' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_GET_UNMASKINTR -->
      <var-decl name='IOCTL_HDIO_GET_UNMASKINTR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_HDIO_GET_UNMASKINTRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='462' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_32BIT -->
      <var-decl name='IOCTL_HDIO_SET_32BIT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_HDIO_SET_32BITE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='463' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_DMA -->
      <var-decl name='IOCTL_HDIO_SET_DMA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_HDIO_SET_DMAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='464' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_KEEPSETTINGS -->
      <var-decl name='IOCTL_HDIO_SET_KEEPSETTINGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_HDIO_SET_KEEPSETTINGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='465' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_MULTCOUNT -->
      <var-decl name='IOCTL_HDIO_SET_MULTCOUNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24IOCTL_HDIO_SET_MULTCOUNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='466' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_NOWERR -->
      <var-decl name='IOCTL_HDIO_SET_NOWERR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_HDIO_SET_NOWERRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='467' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_HDIO_SET_UNMASKINTR -->
      <var-decl name='IOCTL_HDIO_SET_UNMASKINTR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_HDIO_SET_UNMASKINTRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='468' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_MTIOCGET -->
      <var-decl name='IOCTL_MTIOCGET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_MTIOCGETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='469' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_MTIOCPOS -->
      <var-decl name='IOCTL_MTIOCPOS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_MTIOCPOSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='470' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_MTIOCTOP -->
      <var-decl name='IOCTL_MTIOCTOP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_MTIOCTOPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='471' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCGASYNCMAP -->
      <var-decl name='IOCTL_PPPIOCGASYNCMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_PPPIOCGASYNCMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='472' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCGDEBUG -->
      <var-decl name='IOCTL_PPPIOCGDEBUG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_PPPIOCGDEBUGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='473' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCGFLAGS -->
      <var-decl name='IOCTL_PPPIOCGFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_PPPIOCGFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='474' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCGUNIT -->
      <var-decl name='IOCTL_PPPIOCGUNIT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_PPPIOCGUNITE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='475' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCGXASYNCMAP -->
      <var-decl name='IOCTL_PPPIOCGXASYNCMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_PPPIOCGXASYNCMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='476' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSASYNCMAP -->
      <var-decl name='IOCTL_PPPIOCSASYNCMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_PPPIOCSASYNCMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='477' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSDEBUG -->
      <var-decl name='IOCTL_PPPIOCSDEBUG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_PPPIOCSDEBUGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='478' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSFLAGS -->
      <var-decl name='IOCTL_PPPIOCSFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_PPPIOCSFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='479' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSMAXCID -->
      <var-decl name='IOCTL_PPPIOCSMAXCID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_PPPIOCSMAXCIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='480' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSMRU -->
      <var-decl name='IOCTL_PPPIOCSMRU' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_PPPIOCSMRUE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='481' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PPPIOCSXASYNCMAP -->
      <var-decl name='IOCTL_PPPIOCSXASYNCMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_PPPIOCSXASYNCMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='482' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCADDRT -->
      <var-decl name='IOCTL_SIOCADDRT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCADDRTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='483' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCDARP -->
      <var-decl name='IOCTL_SIOCDARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_SIOCDARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='484' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCDELRT -->
      <var-decl name='IOCTL_SIOCDELRT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCDELRTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='485' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCDRARP -->
      <var-decl name='IOCTL_SIOCDRARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCDRARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='486' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGARP -->
      <var-decl name='IOCTL_SIOCGARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_SIOCGARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='487' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFENCAP -->
      <var-decl name='IOCTL_SIOCGIFENCAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCGIFENCAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='488' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFHWADDR -->
      <var-decl name='IOCTL_SIOCGIFHWADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCGIFHWADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='489' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFMAP -->
      <var-decl name='IOCTL_SIOCGIFMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCGIFMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='490' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFMEM -->
      <var-decl name='IOCTL_SIOCGIFMEM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCGIFMEME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='491' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFNAME -->
      <var-decl name='IOCTL_SIOCGIFNAME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCGIFNAMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='492' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGIFSLAVE -->
      <var-decl name='IOCTL_SIOCGIFSLAVE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCGIFSLAVEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='493' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGRARP -->
      <var-decl name='IOCTL_SIOCGRARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCGRARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='494' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCGSTAMP -->
      <var-decl name='IOCTL_SIOCGSTAMP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCGSTAMPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='495' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSARP -->
      <var-decl name='IOCTL_SIOCSARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_SIOCSARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='496' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFENCAP -->
      <var-decl name='IOCTL_SIOCSIFENCAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCSIFENCAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='497' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFHWADDR -->
      <var-decl name='IOCTL_SIOCSIFHWADDR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCSIFHWADDRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='498' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFLINK -->
      <var-decl name='IOCTL_SIOCSIFLINK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCSIFLINKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='499' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFMAP -->
      <var-decl name='IOCTL_SIOCSIFMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCSIFMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='500' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFMEM -->
      <var-decl name='IOCTL_SIOCSIFMEM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_SIOCSIFMEME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='501' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSIFSLAVE -->
      <var-decl name='IOCTL_SIOCSIFSLAVE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCSIFSLAVEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='502' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCSRARP -->
      <var-decl name='IOCTL_SIOCSRARP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_SIOCSRARPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='503' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_HALT -->
      <var-decl name='IOCTL_SNDCTL_COPR_HALT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_COPR_HALTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='522' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_LOAD -->
      <var-decl name='IOCTL_SNDCTL_COPR_LOAD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_COPR_LOADE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='523' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_RCODE -->
      <var-decl name='IOCTL_SNDCTL_COPR_RCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_COPR_RCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='524' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_RCVMSG -->
      <var-decl name='IOCTL_SNDCTL_COPR_RCVMSG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24IOCTL_SNDCTL_COPR_RCVMSGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='525' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_RDATA -->
      <var-decl name='IOCTL_SNDCTL_COPR_RDATA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_COPR_RDATAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='526' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_RESET -->
      <var-decl name='IOCTL_SNDCTL_COPR_RESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_COPR_RESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='527' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_RUN -->
      <var-decl name='IOCTL_SNDCTL_COPR_RUN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_SNDCTL_COPR_RUNE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='528' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_SENDMSG -->
      <var-decl name='IOCTL_SNDCTL_COPR_SENDMSG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_COPR_SENDMSGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='529' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_WCODE -->
      <var-decl name='IOCTL_SNDCTL_COPR_WCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_COPR_WCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='530' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_COPR_WDATA -->
      <var-decl name='IOCTL_SNDCTL_COPR_WDATA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_COPR_WDATAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='531' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_READ_BITS -->
      <var-decl name='IOCTL_SOUND_PCM_READ_BITS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SOUND_PCM_READ_BITSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='532' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_READ_CHANNELS -->
      <var-decl name='IOCTL_SOUND_PCM_READ_CHANNELS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_PCM_READ_CHANNELSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='533' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_READ_FILTER -->
      <var-decl name='IOCTL_SOUND_PCM_READ_FILTER' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_PCM_READ_FILTERE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='534' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_READ_RATE -->
      <var-decl name='IOCTL_SOUND_PCM_READ_RATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SOUND_PCM_READ_RATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='535' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_WRITE_CHANNELS -->
      <var-decl name='IOCTL_SOUND_PCM_WRITE_CHANNELS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_PCM_WRITE_CHANNELSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='536' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_PCM_WRITE_FILTER -->
      <var-decl name='IOCTL_SOUND_PCM_WRITE_FILTER' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_PCM_WRITE_FILTERE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='537' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_GETBLKSIZE -->
      <var-decl name='IOCTL_SNDCTL_DSP_GETBLKSIZE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SNDCTL_DSP_GETBLKSIZEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='539' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_GETFMTS -->
      <var-decl name='IOCTL_SNDCTL_DSP_GETFMTS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24IOCTL_SNDCTL_DSP_GETFMTSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='540' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_NONBLOCK -->
      <var-decl name='IOCTL_SNDCTL_DSP_NONBLOCK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_DSP_NONBLOCKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='541' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_POST -->
      <var-decl name='IOCTL_SNDCTL_DSP_POST' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_SNDCTL_DSP_POSTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='542' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_RESET -->
      <var-decl name='IOCTL_SNDCTL_DSP_RESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_DSP_RESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='543' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_SETFMT -->
      <var-decl name='IOCTL_SNDCTL_DSP_SETFMT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_DSP_SETFMTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='544' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_SETFRAGMENT -->
      <var-decl name='IOCTL_SNDCTL_DSP_SETFRAGMENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SNDCTL_DSP_SETFRAGMENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='545' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_SPEED -->
      <var-decl name='IOCTL_SNDCTL_DSP_SPEED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_DSP_SPEEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='546' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_STEREO -->
      <var-decl name='IOCTL_SNDCTL_DSP_STEREO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_DSP_STEREOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='547' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_SUBDIVIDE -->
      <var-decl name='IOCTL_SNDCTL_DSP_SUBDIVIDE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_DSP_SUBDIVIDEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='548' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_SYNC -->
      <var-decl name='IOCTL_SNDCTL_DSP_SYNC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_SNDCTL_DSP_SYNCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='549' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_FM_4OP_ENABLE -->
      <var-decl name='IOCTL_SNDCTL_FM_4OP_ENABLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_FM_4OP_ENABLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='550' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_FM_LOAD_INSTR -->
      <var-decl name='IOCTL_SNDCTL_FM_LOAD_INSTR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_FM_LOAD_INSTRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='551' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_MIDI_INFO -->
      <var-decl name='IOCTL_SNDCTL_MIDI_INFO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_MIDI_INFOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='552' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_MIDI_PRETIME -->
      <var-decl name='IOCTL_SNDCTL_MIDI_PRETIME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_MIDI_PRETIMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='553' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_CTRLRATE -->
      <var-decl name='IOCTL_SNDCTL_SEQ_CTRLRATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_SEQ_CTRLRATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='554' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_GETINCOUNT -->
      <var-decl name='IOCTL_SNDCTL_SEQ_GETINCOUNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SNDCTL_SEQ_GETINCOUNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='555' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_GETOUTCOUNT -->
      <var-decl name='IOCTL_SNDCTL_SEQ_GETOUTCOUNT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SNDCTL_SEQ_GETOUTCOUNTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='556' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_NRMIDIS -->
      <var-decl name='IOCTL_SNDCTL_SEQ_NRMIDIS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer24IOCTL_SNDCTL_SEQ_NRMIDISE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='557' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_NRSYNTHS -->
      <var-decl name='IOCTL_SNDCTL_SEQ_NRSYNTHS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_SEQ_NRSYNTHSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='558' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_OUTOFBAND -->
      <var-decl name='IOCTL_SNDCTL_SEQ_OUTOFBAND' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_SEQ_OUTOFBANDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='559' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_PANIC -->
      <var-decl name='IOCTL_SNDCTL_SEQ_PANIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_SEQ_PANICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='560' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_PERCMODE -->
      <var-decl name='IOCTL_SNDCTL_SEQ_PERCMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_SEQ_PERCMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='561' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_RESET -->
      <var-decl name='IOCTL_SNDCTL_SEQ_RESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_SEQ_RESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='562' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_RESETSAMPLES -->
      <var-decl name='IOCTL_SNDCTL_SEQ_RESETSAMPLES' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SNDCTL_SEQ_RESETSAMPLESE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='563' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_SYNC -->
      <var-decl name='IOCTL_SNDCTL_SEQ_SYNC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_SNDCTL_SEQ_SYNCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='564' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_TESTMIDI -->
      <var-decl name='IOCTL_SNDCTL_SEQ_TESTMIDI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_SEQ_TESTMIDIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='565' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SEQ_THRESHOLD -->
      <var-decl name='IOCTL_SNDCTL_SEQ_THRESHOLD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_SEQ_THRESHOLDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='566' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SYNTH_INFO -->
      <var-decl name='IOCTL_SNDCTL_SYNTH_INFO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_SYNTH_INFOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='567' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_SYNTH_MEMAVL -->
      <var-decl name='IOCTL_SNDCTL_SYNTH_MEMAVL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_SYNTH_MEMAVLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='568' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_CONTINUE -->
      <var-decl name='IOCTL_SNDCTL_TMR_CONTINUE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_TMR_CONTINUEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='569' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_METRONOME -->
      <var-decl name='IOCTL_SNDCTL_TMR_METRONOME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_TMR_METRONOMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='570' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_SELECT -->
      <var-decl name='IOCTL_SNDCTL_TMR_SELECT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_TMR_SELECTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='571' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_SOURCE -->
      <var-decl name='IOCTL_SNDCTL_TMR_SOURCE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_SNDCTL_TMR_SOURCEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='572' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_START -->
      <var-decl name='IOCTL_SNDCTL_TMR_START' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_TMR_STARTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='573' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_STOP -->
      <var-decl name='IOCTL_SNDCTL_TMR_STOP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_SNDCTL_TMR_STOPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='574' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_TEMPO -->
      <var-decl name='IOCTL_SNDCTL_TMR_TEMPO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SNDCTL_TMR_TEMPOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='575' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_TMR_TIMEBASE -->
      <var-decl name='IOCTL_SNDCTL_TMR_TIMEBASE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SNDCTL_TMR_TIMEBASEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='576' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_ALTPCM -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_ALTPCM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_READ_ALTPCME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='577' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_BASS -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_BASS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_BASSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='578' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_CAPS -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_CAPS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_CAPSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='579' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_CD -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_CD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer25IOCTL_SOUND_MIXER_READ_CDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='580' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_DEVMASK -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_DEVMASK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_READ_DEVMASKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='581' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_ENHANCE -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_ENHANCE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_READ_ENHANCEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='582' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_IGAIN -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_IGAIN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_IGAINE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='583' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_IMIX -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_IMIX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_IMIXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='584' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_LINE -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_LINE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_LINEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='585' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_LINE1 -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_LINE1' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_LINE1E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='586' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_LINE2 -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_LINE2' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_LINE2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='587' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_LINE3 -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_LINE3' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_LINE3E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='588' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_LOUD -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_LOUD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_LOUDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='589' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_MIC -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_MIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SOUND_MIXER_READ_MICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='590' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_MUTE -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_MUTE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_READ_MUTEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='591' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_OGAIN -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_OGAIN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_OGAINE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='592' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_PCM -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_PCM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SOUND_MIXER_READ_PCME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='593' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_RECLEV -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_RECLEV' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_READ_RECLEVE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='594' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_RECMASK -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_RECMASK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_READ_RECMASKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='595' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_RECSRC -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_RECSRC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_READ_RECSRCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='596' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_SPEAKER -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_SPEAKER' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_READ_SPEAKERE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='597' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_STEREODEVS -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_STEREODEVS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer33IOCTL_SOUND_MIXER_READ_STEREODEVSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='598' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_SYNTH -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_SYNTH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_READ_SYNTHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='599' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_TREBLE -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_TREBLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_READ_TREBLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='600' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_READ_VOLUME -->
      <var-decl name='IOCTL_SOUND_MIXER_READ_VOLUME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_READ_VOLUMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='601' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_ALTPCM -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_ALTPCM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_WRITE_ALTPCME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='602' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_BASS -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_BASS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_WRITE_BASSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='603' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_CD -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_CD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SOUND_MIXER_WRITE_CDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='604' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_ENHANCE -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_ENHANCE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer31IOCTL_SOUND_MIXER_WRITE_ENHANCEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='605' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_IGAIN -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_IGAIN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_IGAINE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='606' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_IMIX -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_IMIX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_WRITE_IMIXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='607' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_LINE -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_LINE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_WRITE_LINEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='608' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_LINE1 -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_LINE1' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_LINE1E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='609' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_LINE2 -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_LINE2' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_LINE2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='610' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_LINE3 -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_LINE3' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_LINE3E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='611' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_LOUD -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_LOUD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_WRITE_LOUDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='612' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_MIC -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_MIC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_WRITE_MICE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='613' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_MUTE -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_MUTE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer28IOCTL_SOUND_MIXER_WRITE_MUTEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='614' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_OGAIN -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_OGAIN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_OGAINE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='615' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_PCM -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_PCM' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SOUND_MIXER_WRITE_PCME' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='616' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_RECLEV -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_RECLEV' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_WRITE_RECLEVE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='617' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_RECSRC -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_RECSRC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_WRITE_RECSRCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='618' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_SPEAKER -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_SPEAKER' type-id='f0981eeb' mangled-name='_ZN11__sanitizer31IOCTL_SOUND_MIXER_WRITE_SPEAKERE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='619' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_SYNTH -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_SYNTH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer29IOCTL_SOUND_MIXER_WRITE_SYNTHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='620' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_TREBLE -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_TREBLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_WRITE_TREBLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='621' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SOUND_MIXER_WRITE_VOLUME -->
      <var-decl name='IOCTL_SOUND_MIXER_WRITE_VOLUME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SOUND_MIXER_WRITE_VOLUMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='622' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCFLSH -->
      <var-decl name='IOCTL_TCFLSH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCFLSHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='623' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCGETA -->
      <var-decl name='IOCTL_TCGETA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCGETAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='624' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCGETS -->
      <var-decl name='IOCTL_TCGETS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCGETSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='625' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSBRK -->
      <var-decl name='IOCTL_TCSBRK' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCSBRKE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='626' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSBRKP -->
      <var-decl name='IOCTL_TCSBRKP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TCSBRKPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='627' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETA -->
      <var-decl name='IOCTL_TCSETA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCSETAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='628' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETAF -->
      <var-decl name='IOCTL_TCSETAF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TCSETAFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='629' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETAW -->
      <var-decl name='IOCTL_TCSETAW' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TCSETAWE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='630' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETS -->
      <var-decl name='IOCTL_TCSETS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCSETSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='631' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETSF -->
      <var-decl name='IOCTL_TCSETSF' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TCSETSFE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='632' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCSETSW -->
      <var-decl name='IOCTL_TCSETSW' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TCSETSWE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='633' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TCXONC -->
      <var-decl name='IOCTL_TCXONC' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_TCXONCE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='634' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGLCKTRMIOS -->
      <var-decl name='IOCTL_TIOCGLCKTRMIOS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_TIOCGLCKTRMIOSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='635' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGSOFTCAR -->
      <var-decl name='IOCTL_TIOCGSOFTCAR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_TIOCGSOFTCARE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='636' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCINQ -->
      <var-decl name='IOCTL_TIOCINQ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_TIOCINQE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='637' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCLINUX -->
      <var-decl name='IOCTL_TIOCLINUX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_TIOCLINUXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='638' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERCONFIG -->
      <var-decl name='IOCTL_TIOCSERCONFIG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_TIOCSERCONFIGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='639' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERGETLSR -->
      <var-decl name='IOCTL_TIOCSERGETLSR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_TIOCSERGETLSRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='640' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERGWILD -->
      <var-decl name='IOCTL_TIOCSERGWILD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_TIOCSERGWILDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='641' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERSWILD -->
      <var-decl name='IOCTL_TIOCSERSWILD' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_TIOCSERSWILDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='642' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSLCKTRMIOS -->
      <var-decl name='IOCTL_TIOCSLCKTRMIOS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_TIOCSLCKTRMIOSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='643' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSSOFTCAR -->
      <var-decl name='IOCTL_TIOCSSOFTCAR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_TIOCSSOFTCARE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='644' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_ACTIVATE -->
      <var-decl name='IOCTL_VT_ACTIVATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_VT_ACTIVATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='645' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_DISALLOCATE -->
      <var-decl name='IOCTL_VT_DISALLOCATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_VT_DISALLOCATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='646' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_GETMODE -->
      <var-decl name='IOCTL_VT_GETMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_GETMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='647' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_GETSTATE -->
      <var-decl name='IOCTL_VT_GETSTATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_VT_GETSTATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='648' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_OPENQRY -->
      <var-decl name='IOCTL_VT_OPENQRY' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_OPENQRYE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='649' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_RELDISP -->
      <var-decl name='IOCTL_VT_RELDISP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_RELDISPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='650' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_RESIZE -->
      <var-decl name='IOCTL_VT_RESIZE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_VT_RESIZEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='651' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_RESIZEX -->
      <var-decl name='IOCTL_VT_RESIZEX' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_RESIZEXE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='652' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_SENDSIG -->
      <var-decl name='IOCTL_VT_SENDSIG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_SENDSIGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='653' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_SETMODE -->
      <var-decl name='IOCTL_VT_SETMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_VT_SETMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='654' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_VT_WAITACTIVE -->
      <var-decl name='IOCTL_VT_WAITACTIVE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_VT_WAITACTIVEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='655' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYGETDEFTHRESH -->
      <var-decl name='IOCTL_CYGETDEFTHRESH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_CYGETDEFTHRESHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='658' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYGETDEFTIMEOUT -->
      <var-decl name='IOCTL_CYGETDEFTIMEOUT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_CYGETDEFTIMEOUTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='659' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYGETMON -->
      <var-decl name='IOCTL_CYGETMON' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_CYGETMONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='660' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYGETTHRESH -->
      <var-decl name='IOCTL_CYGETTHRESH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_CYGETTHRESHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='661' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYGETTIMEOUT -->
      <var-decl name='IOCTL_CYGETTIMEOUT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CYGETTIMEOUTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='662' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYSETDEFTHRESH -->
      <var-decl name='IOCTL_CYSETDEFTHRESH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_CYSETDEFTHRESHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='663' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYSETDEFTIMEOUT -->
      <var-decl name='IOCTL_CYSETDEFTIMEOUT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_CYSETDEFTIMEOUTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='664' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYSETTHRESH -->
      <var-decl name='IOCTL_CYSETTHRESH' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_CYSETTHRESHE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='665' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_CYSETTIMEOUT -->
      <var-decl name='IOCTL_CYSETTIMEOUT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_CYSETTIMEOUTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='666' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_EMANCIPATE -->
      <var-decl name='IOCTL_EQL_EMANCIPATE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_EQL_EMANCIPATEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='667' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_ENSLAVE -->
      <var-decl name='IOCTL_EQL_ENSLAVE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_EQL_ENSLAVEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='668' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_GETMASTRCFG -->
      <var-decl name='IOCTL_EQL_GETMASTRCFG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_EQL_GETMASTRCFGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='669' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_GETSLAVECFG -->
      <var-decl name='IOCTL_EQL_GETSLAVECFG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_EQL_GETSLAVECFGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='670' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_SETMASTRCFG -->
      <var-decl name='IOCTL_EQL_SETMASTRCFG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_EQL_SETMASTRCFGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='671' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EQL_SETSLAVECFG -->
      <var-decl name='IOCTL_EQL_SETSLAVECFG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_EQL_SETSLAVECFGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='672' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGKEYCODE_V2 -->
      <var-decl name='IOCTL_EVIOCGKEYCODE_V2' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_EVIOCGKEYCODE_V2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='678' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCGPROP -->
      <var-decl name='IOCTL_EVIOCGPROP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_EVIOCGPROPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='679' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_EVIOCSKEYCODE_V2 -->
      <var-decl name='IOCTL_EVIOCSKEYCODE_V2' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_EVIOCSKEYCODE_V2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='680' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FS_IOC_GETFLAGS -->
      <var-decl name='IOCTL_FS_IOC_GETFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_FS_IOC_GETFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='682' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FS_IOC_GETVERSION -->
      <var-decl name='IOCTL_FS_IOC_GETVERSION' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_FS_IOC_GETVERSIONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='683' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FS_IOC_SETFLAGS -->
      <var-decl name='IOCTL_FS_IOC_SETFLAGS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_FS_IOC_SETFLAGSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='684' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_FS_IOC_SETVERSION -->
      <var-decl name='IOCTL_FS_IOC_SETVERSION' type-id='f0981eeb' mangled-name='_ZN11__sanitizer23IOCTL_FS_IOC_SETVERSIONE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='685' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_GIO_CMAP -->
      <var-decl name='IOCTL_GIO_CMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_GIO_CMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='686' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_GIO_FONT -->
      <var-decl name='IOCTL_GIO_FONT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_GIO_FONTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='687' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_GIO_SCRNMAP -->
      <var-decl name='IOCTL_GIO_SCRNMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_GIO_SCRNMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='688' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_GIO_UNIMAP -->
      <var-decl name='IOCTL_GIO_UNIMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_GIO_UNIMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='689' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_GIO_UNISCRNMAP -->
      <var-decl name='IOCTL_GIO_UNISCRNMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_GIO_UNISCRNMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='690' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDADDIO -->
      <var-decl name='IOCTL_KDADDIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_KDADDIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='691' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDDELIO -->
      <var-decl name='IOCTL_KDDELIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_KDDELIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='692' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDDISABIO -->
      <var-decl name='IOCTL_KDDISABIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDDISABIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='693' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDENABIO -->
      <var-decl name='IOCTL_KDENABIO' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDENABIOE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='694' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGETKEYCODE -->
      <var-decl name='IOCTL_KDGETKEYCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_KDGETKEYCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='695' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGETLED -->
      <var-decl name='IOCTL_KDGETLED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDGETLEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='696' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGETMODE -->
      <var-decl name='IOCTL_KDGETMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDGETMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='697' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBDIACR -->
      <var-decl name='IOCTL_KDGKBDIACR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_KDGKBDIACRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='698' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBENT -->
      <var-decl name='IOCTL_KDGKBENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDGKBENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='699' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBLED -->
      <var-decl name='IOCTL_KDGKBLED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDGKBLEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='700' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBMETA -->
      <var-decl name='IOCTL_KDGKBMETA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDGKBMETAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='701' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBMODE -->
      <var-decl name='IOCTL_KDGKBMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDGKBMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='702' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBSENT -->
      <var-decl name='IOCTL_KDGKBSENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDGKBSENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='703' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDGKBTYPE -->
      <var-decl name='IOCTL_KDGKBTYPE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDGKBTYPEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='704' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDMAPDISP -->
      <var-decl name='IOCTL_KDMAPDISP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDMAPDISPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='705' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDMKTONE -->
      <var-decl name='IOCTL_KDMKTONE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDMKTONEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='706' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSETKEYCODE -->
      <var-decl name='IOCTL_KDSETKEYCODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_KDSETKEYCODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='707' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSETLED -->
      <var-decl name='IOCTL_KDSETLED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDSETLEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='708' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSETMODE -->
      <var-decl name='IOCTL_KDSETMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDSETMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='709' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSIGACCEPT -->
      <var-decl name='IOCTL_KDSIGACCEPT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_KDSIGACCEPTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='710' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBDIACR -->
      <var-decl name='IOCTL_KDSKBDIACR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_KDSKBDIACRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='711' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBENT -->
      <var-decl name='IOCTL_KDSKBENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDSKBENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='712' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBLED -->
      <var-decl name='IOCTL_KDSKBLED' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_KDSKBLEDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='713' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBMETA -->
      <var-decl name='IOCTL_KDSKBMETA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDSKBMETAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='714' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBMODE -->
      <var-decl name='IOCTL_KDSKBMODE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDSKBMODEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='715' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDSKBSENT -->
      <var-decl name='IOCTL_KDSKBSENT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KDSKBSENTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='716' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KDUNMAPDISP -->
      <var-decl name='IOCTL_KDUNMAPDISP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_KDUNMAPDISPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='717' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_KIOCSOUND -->
      <var-decl name='IOCTL_KIOCSOUND' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_KIOCSOUNDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='718' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPABORT -->
      <var-decl name='IOCTL_LPABORT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_LPABORTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='719' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPABORTOPEN -->
      <var-decl name='IOCTL_LPABORTOPEN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_LPABORTOPENE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='720' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPCAREFUL -->
      <var-decl name='IOCTL_LPCAREFUL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer15IOCTL_LPCAREFULE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='721' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPCHAR -->
      <var-decl name='IOCTL_LPCHAR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_LPCHARE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='722' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPGETIRQ -->
      <var-decl name='IOCTL_LPGETIRQ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_LPGETIRQE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='723' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPGETSTATUS -->
      <var-decl name='IOCTL_LPGETSTATUS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_LPGETSTATUSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='724' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPRESET -->
      <var-decl name='IOCTL_LPRESET' type-id='f0981eeb' mangled-name='_ZN11__sanitizer13IOCTL_LPRESETE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='725' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPSETIRQ -->
      <var-decl name='IOCTL_LPSETIRQ' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_LPSETIRQE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='726' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPTIME -->
      <var-decl name='IOCTL_LPTIME' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_LPTIMEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='727' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_LPWAIT -->
      <var-decl name='IOCTL_LPWAIT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer12IOCTL_LPWAITE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='728' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_MTIOCGETCONFIG -->
      <var-decl name='IOCTL_MTIOCGETCONFIG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_MTIOCGETCONFIGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='729' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_MTIOCSETCONFIG -->
      <var-decl name='IOCTL_MTIOCSETCONFIG' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_MTIOCSETCONFIGE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='730' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_CMAP -->
      <var-decl name='IOCTL_PIO_CMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_PIO_CMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='731' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_FONT -->
      <var-decl name='IOCTL_PIO_FONT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer14IOCTL_PIO_FONTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='732' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_SCRNMAP -->
      <var-decl name='IOCTL_PIO_SCRNMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_PIO_SCRNMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='733' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_UNIMAP -->
      <var-decl name='IOCTL_PIO_UNIMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer16IOCTL_PIO_UNIMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='734' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_UNIMAPCLR -->
      <var-decl name='IOCTL_PIO_UNIMAPCLR' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_PIO_UNIMAPCLRE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='735' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_PIO_UNISCRNMAP -->
      <var-decl name='IOCTL_PIO_UNISCRNMAP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_PIO_UNISCRNMAPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='736' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SCSI_IOCTL_GET_IDLUN -->
      <var-decl name='IOCTL_SCSI_IOCTL_GET_IDLUN' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SCSI_IOCTL_GET_IDLUNE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='737' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SCSI_IOCTL_PROBE_HOST -->
      <var-decl name='IOCTL_SCSI_IOCTL_PROBE_HOST' type-id='f0981eeb' mangled-name='_ZN11__sanitizer27IOCTL_SCSI_IOCTL_PROBE_HOSTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='738' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SCSI_IOCTL_TAGGED_DISABLE -->
      <var-decl name='IOCTL_SCSI_IOCTL_TAGGED_DISABLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer31IOCTL_SCSI_IOCTL_TAGGED_DISABLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='739' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SCSI_IOCTL_TAGGED_ENABLE -->
      <var-decl name='IOCTL_SCSI_IOCTL_TAGGED_ENABLE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer30IOCTL_SCSI_IOCTL_TAGGED_ENABLEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='740' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAIPXITFCRT -->
      <var-decl name='IOCTL_SIOCAIPXITFCRT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCAIPXITFCRTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='741' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAIPXPRISLT -->
      <var-decl name='IOCTL_SIOCAIPXPRISLT' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCAIPXPRISLTE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='742' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25ADDUID -->
      <var-decl name='IOCTL_SIOCAX25ADDUID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCAX25ADDUIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='743' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25DELUID -->
      <var-decl name='IOCTL_SIOCAX25DELUID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCAX25DELUIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='744' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25GETPARMS -->
      <var-decl name='IOCTL_SIOCAX25GETPARMS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SIOCAX25GETPARMSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='745' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25GETUID -->
      <var-decl name='IOCTL_SIOCAX25GETUID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCAX25GETUIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='746' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25NOUID -->
      <var-decl name='IOCTL_SIOCAX25NOUID' type-id='f0981eeb' mangled-name='_ZN11__sanitizer19IOCTL_SIOCAX25NOUIDE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='747' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCAX25SETPARMS -->
      <var-decl name='IOCTL_SIOCAX25SETPARMS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer22IOCTL_SIOCAX25SETPARMSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='748' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCDEVPLIP -->
      <var-decl name='IOCTL_SIOCDEVPLIP' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCDEVPLIPE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='749' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCIPXCFGDATA -->
      <var-decl name='IOCTL_SIOCIPXCFGDATA' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCIPXCFGDATAE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='750' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCNRDECOBS -->
      <var-decl name='IOCTL_SIOCNRDECOBS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer18IOCTL_SIOCNRDECOBSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='751' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCNRGETPARMS -->
      <var-decl name='IOCTL_SIOCNRGETPARMS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCNRGETPARMSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='752' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCNRRTCTL -->
      <var-decl name='IOCTL_SIOCNRRTCTL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_SIOCNRRTCTLE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='753' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SIOCNRSETPARMS -->
      <var-decl name='IOCTL_SIOCNRSETPARMS' type-id='f0981eeb' mangled-name='_ZN11__sanitizer20IOCTL_SIOCNRSETPARMSE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='754' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_GETISPACE -->
      <var-decl name='IOCTL_SNDCTL_DSP_GETISPACE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_DSP_GETISPACEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='755' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_SNDCTL_DSP_GETOSPACE -->
      <var-decl name='IOCTL_SNDCTL_DSP_GETOSPACE' type-id='f0981eeb' mangled-name='_ZN11__sanitizer26IOCTL_SNDCTL_DSP_GETOSPACEE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='756' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCGSERIAL -->
      <var-decl name='IOCTL_TIOCGSERIAL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_TIOCGSERIALE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='757' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERGETMULTI -->
      <var-decl name='IOCTL_TIOCSERGETMULTI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_TIOCSERGETMULTIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='758' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSERSETMULTI -->
      <var-decl name='IOCTL_TIOCSERSETMULTI' type-id='f0981eeb' mangled-name='_ZN11__sanitizer21IOCTL_TIOCSERSETMULTIE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='759' column='1'/>
      <!-- unsigned int __sanitizer::IOCTL_TIOCSSERIAL -->
      <var-decl name='IOCTL_TIOCSSERIAL' type-id='f0981eeb' mangled-name='_ZN11__sanitizer17IOCTL_TIOCSSERIALE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='760' column='1'/>
      <!-- const int __sanitizer::errno_EOWNERDEAD -->
      <var-decl name='errno_EOWNERDEAD' type-id='2448a865' mangled-name='_ZN11__sanitizer16errno_EOWNERDEADE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc' line='765' column='1'/>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_posix.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- void __sanitizer::UnmapOrDie(void*, __sanitizer::uptr) -->
      <function-decl name='UnmapOrDie' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_posix.cc' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __sanitizer::RawWrite(const char*) -->
      <function-decl name='RawWrite' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_posix.cc' line='223' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
    <!-- void* (__sanitizer::uptr, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='525203a4'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- typedef unsigned long int pthread_t -->
    <typedef-decl name='pthread_t' type-id='7359adad' filepath='/usr/include/bits/pthreadtypes.h' line='50' column='1' id='4051f5e7'/>
    <!-- typedef __rlim_t rlim_t -->
    <typedef-decl name='rlim_t' type-id='4eb8ed85' filepath='/usr/include/bits/resource.h' line='127' column='1' id='04dc9e3f'/>
    <!-- struct rlimit -->
    <class-decl name='rlimit' size-in-bits='128' is-struct='yes' visibility='default' filepath='/usr/include/bits/resource.h' line='135' column='1' id='60dcbf6c'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- rlim_t rlimit::rlim_cur -->
        <var-decl name='rlim_cur' type-id='04dc9e3f' visibility='default' filepath='/usr/include/bits/resource.h' line='138' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- rlim_t rlimit::rlim_max -->
        <var-decl name='rlim_max' type-id='04dc9e3f' visibility='default' filepath='/usr/include/bits/resource.h' line='140' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned int __uid_t -->
    <typedef-decl name='__uid_t' type-id='f0981eeb' filepath='/usr/include/bits/types.h' line='135' column='1' id='cc5fcceb'/>
    <!-- typedef unsigned long int __rlim_t -->
    <typedef-decl name='__rlim_t' type-id='7359adad' filepath='/usr/include/bits/types.h' line='146' column='1' id='4eb8ed85'/>
    <!-- typedef unsigned int __useconds_t -->
    <typedef-decl name='__useconds_t' type-id='f0981eeb' filepath='/usr/include/bits/types.h' line='150' column='1' id='4e80d4b1'/>
    <!-- typedef int __rlimit_resource_t -->
    <typedef-decl name='__rlimit_resource_t' type-id='95e97e5e' filepath='/usr/include/sys/resource.h' line='43' column='1' id='a39bb663'/>
    <!-- const rlimit -->
    <qualified-type-def type-id='60dcbf6c' const='yes' id='e37fe499'/>
    <!-- const rlimit* -->
    <pointer-type-def type-id='e37fe499' size-in-bits='64' id='d55505c9'/>
    <!-- rlimit* -->
    <pointer-type-def type-id='60dcbf6c' size-in-bits='64' id='5069456a'/>
    <!-- pthread_t pthread_self() -->
    <function-decl name='pthread_self' filepath='/usr/include/pthread.h' line='267' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef pthread_t -->
      <return type-id='4051f5e7'/>
    </function-decl>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='514' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='518' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='953b12f8'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int madvise(void*, size_t, int) -->
    <function-decl name='madvise' filepath='/usr/include/sys/mman.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='b59d7dce'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int getrlimit(__rlimit_resource_t, rlimit*) -->
    <function-decl name='getrlimit' filepath='/usr/include/sys/resource.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __rlimit_resource_t' -->
      <parameter type-id='a39bb663'/>
      <!-- parameter of type 'rlimit*' -->
      <parameter type-id='5069456a'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int setrlimit(__rlimit_resource_t, const rlimit*) -->
    <function-decl name='setrlimit' filepath='/usr/include/sys/resource.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __rlimit_resource_t' -->
      <parameter type-id='a39bb663'/>
      <!-- parameter of type 'const rlimit*' -->
      <parameter type-id='d55505c9'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- unsigned int sleep(unsigned int) -->
    <function-decl name='sleep' filepath='/usr/include/unistd.h' line='441' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb'/>
      <!-- unsigned int -->
      <return type-id='f0981eeb'/>
    </function-decl>
    <!-- int usleep(__useconds_t) -->
    <function-decl name='usleep' filepath='/usr/include/unistd.h' line='457' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __useconds_t' -->
      <parameter type-id='4e80d4b1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __uid_t getuid() -->
    <function-decl name='getuid' filepath='/usr/include/unistd.h' line='694' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef __uid_t -->
      <return type-id='cc5fcceb'/>
    </function-decl>
    <!-- int isatty(int) -->
    <function-decl name='isatty' filepath='/usr/include/unistd.h' line='798' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int (void ()*) -->
    <function-type size-in-bits='64' id='3a79f2fa'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='953b12f8'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- unsigned int (unsigned int) -->
    <function-type size-in-bits='64' id='32efe300'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb'/>
      <!-- unsigned int -->
      <return type-id='f0981eeb'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_printf.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- struct typedef __va_list_tag __va_list_tag -->
    <class-decl name='typedef __va_list_tag __va_list_tag' size-in-bits='192' is-struct='yes' visibility='default' id='ce184e0c'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int typedef __va_list_tag __va_list_tag::gp_offset -->
        <var-decl name='gp_offset' type-id='f0981eeb' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int typedef __va_list_tag __va_list_tag::fp_offset -->
        <var-decl name='fp_offset' type-id='f0981eeb' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* typedef __va_list_tag __va_list_tag::overflow_arg_area -->
        <var-decl name='overflow_arg_area' type-id='eaa32e2f' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* typedef __va_list_tag __va_list_tag::reg_save_area -->
        <var-decl name='reg_save_area' type-id='eaa32e2f' visibility='default'/>
      </data-member>
    </class-decl>
    <!-- typedef __va_list_tag __va_list_tag* -->
    <pointer-type-def type-id='ce184e0c' size-in-bits='64' id='38f76a2a'/>
    <!-- void (const char*)* -->
    <pointer-type-def type-id='b77bdc37' size-in-bits='64' id='2363ae2b'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- __sanitizer::StaticSpinMutex __sanitizer::CommonSanitizerReportMutex -->
      <var-decl name='CommonSanitizerReportMutex' type-id='c5c2fa97' mangled-name='_ZN11__sanitizer26CommonSanitizerReportMutexE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_printf.cc' line='28' column='1'/>
      <!-- void __sanitizer::OnPrint(const char*) -->
      <function-decl name='OnPrint' mangled-name='_ZN11__sanitizer7OnPrintEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_printf.cc' line='199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN11__sanitizer7OnPrintEPKc'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- unsigned long int[1] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='64' id='f066dd3c'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='4c87fef4' id='52f813b4'/>
    </array-type-def>
    <!-- __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>* -->
    <pointer-type-def type-id='ca1bdc6a' size-in-bits='64' id='7966df98'/>
    <!-- __sanitizer::StackDepotReverseMap* -->
    <pointer-type-def type-id='c26f3400' size-in-bits='64' id='56305976'/>
    <!-- __sanitizer::StackDepotReverseMap::IdDescPair& -->
    <reference-type-def kind='lvalue' type-id='8ccc79b0' size-in-bits='64' id='43a44a0a'/>
    <!-- __sanitizer::StackDepotReverseMap::IdDescPair* -->
    <pointer-type-def type-id='8ccc79b0' size-in-bits='64' id='37a43726'/>
    <!-- __sanitizer::StackDepotStats* -->
    <pointer-type-def type-id='17912203' size-in-bits='64' id='c6e9b243'/>
    <!-- __sanitizer::StackDesc* -->
    <pointer-type-def type-id='19e2532f' size-in-bits='64' id='e16f1207'/>
    <!-- __sanitizer::atomic_uintptr_t::Type* -->
    <pointer-type-def type-id='748d5322' size-in-bits='64' id='1cca5aa9'/>
    <!-- bool (const __sanitizer::StackDepotReverseMap::IdDescPair&, const __sanitizer::StackDepotReverseMap::IdDescPair&)* -->
    <pointer-type-def type-id='bb12b260' size-in-bits='64' id='a3ad65aa'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair> -->
    <qualified-type-def type-id='ca1bdc6a' const='yes' id='20d1ff6f'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>& -->
    <reference-type-def kind='lvalue' type-id='20d1ff6f' size-in-bits='64' id='f394dfeb'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>* -->
    <pointer-type-def type-id='20d1ff6f' size-in-bits='64' id='ef94d99f'/>
    <!-- const __sanitizer::StackDepotReverseMap -->
    <qualified-type-def type-id='c26f3400' const='yes' id='345d4f93'/>
    <!-- const __sanitizer::StackDepotReverseMap& -->
    <reference-type-def kind='lvalue' type-id='345d4f93' size-in-bits='64' id='23e479ef'/>
    <!-- const __sanitizer::StackDepotReverseMap::IdDescPair -->
    <qualified-type-def type-id='8ccc79b0' const='yes' id='f694f33f'/>
    <!-- const __sanitizer::StackDepotReverseMap::IdDescPair& -->
    <reference-type-def kind='lvalue' type-id='f694f33f' size-in-bits='64' id='457ab05b'/>
    <!-- const __sanitizer::StackDepotReverseMap::IdDescPair* -->
    <pointer-type-def type-id='f694f33f' size-in-bits='64' id='417aaa0f'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair> -->
      <class-decl name='InternalMmapVector&lt;__sanitizer::StackDepotReverseMap::IdDescPair&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='ca1bdc6a'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::StackDepotReverseMap::IdDescPair* __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::data_ -->
          <var-decl name='data_' type-id='37a43726' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::InternalMmapVector(const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>&' -->
            <parameter type-id='f394dfeb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorINS_20StackDepotReverseMap10IdDescPairEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='ef94d99f' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::StackDepotReverseMap::IdDescPair& __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_20StackDepotReverseMap10IdDescPairEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='330' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::StackDepotReverseMap::IdDescPair& -->
            <return type-id='43a44a0a'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_20StackDepotReverseMap10IdDescPairEE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __sanitizer::StackDepotReverseMap::IdDescPair& __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK11__sanitizer18InternalMmapVectorINS_20StackDepotReverseMap10IdDescPairEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='ef94d99f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const __sanitizer::StackDepotReverseMap::IdDescPair& -->
            <return type-id='457ab05b'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>::push_back(const __sanitizer::StackDepotReverseMap::IdDescPair&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>*' -->
            <parameter type-id='7966df98' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
            <parameter type-id='457ab05b'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::StackDesc -->
      <class-decl name='StackDesc' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='27' column='1' id='19e2532f'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::StackDesc* __sanitizer::StackDesc::link -->
          <var-decl name='link' type-id='e16f1207' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='28' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::u32 __sanitizer::StackDesc::id -->
          <var-decl name='id' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='29' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- __sanitizer::u32 __sanitizer::StackDesc::hash -->
          <var-decl name='hash' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::StackDesc::size -->
          <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='31' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- unsigned long int __sanitizer::StackDesc::stack[1] -->
          <var-decl name='stack' type-id='f066dd3c' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='32' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::StackDepotStats -->
      <class-decl name='StackDepotStats' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='26' column='1' id='17912203'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::StackDepotStats::n_uniq_ids -->
          <var-decl name='n_uniq_ids' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='27' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::StackDepotStats::mapped -->
          <var-decl name='mapped' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='28' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::StackDepotReverseMap -->
      <class-decl name='StackDepotReverseMap' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='39' column='1' id='c26f3400'>
        <member-type access='private'>
          <!-- struct __sanitizer::StackDepotReverseMap::IdDescPair -->
          <class-decl name='IdDescPair' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='45' column='1' id='8ccc79b0'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::u32 __sanitizer::StackDepotReverseMap::IdDescPair::id -->
              <var-decl name='id' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='46' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::StackDesc* __sanitizer::StackDepotReverseMap::IdDescPair::desc -->
              <var-decl name='desc' type-id='e16f1207' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='47' column='1'/>
            </data-member>
            <member-function access='public' static='yes'>
              <!-- bool __sanitizer::StackDepotReverseMap::IdDescPair::IdComparator(const __sanitizer::StackDepotReverseMap::IdDescPair&) -->
              <function-decl name='IdComparator' mangled-name='_ZN11__sanitizer20StackDepotReverseMap10IdDescPair12IdComparatorERKS1_S3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
                <parameter type-id='457ab05b'/>
                <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
                <parameter type-id='457ab05b'/>
                <!-- bool -->
                <return type-id='c894953d'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair> __sanitizer::StackDepotReverseMap::map_ -->
          <var-decl name='map_' type-id='ca1bdc6a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='52' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::StackDepotReverseMap::StackDepotReverseMap() -->
          <function-decl name='StackDepotReverseMap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackDepotReverseMap*' -->
            <parameter type-id='56305976' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::StackDepotReverseMap::StackDepotReverseMap(const __sanitizer::StackDepotReverseMap&) -->
          <function-decl name='StackDepotReverseMap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackDepotReverseMap*' -->
            <parameter type-id='56305976' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::StackDepotReverseMap&' -->
            <parameter type-id='23e479ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const __sanitizer::uptr* __sanitizer::StackDepotReverseMap::Get(__sanitizer::u32, __sanitizer::uptr*) -->
          <function-decl name='Get' mangled-name='_ZN11__sanitizer20StackDepotReverseMap3GetEjPm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackDepotReverseMap*' -->
            <parameter type-id='56305976' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- const __sanitizer::uptr* -->
            <return type-id='862e4738'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::StackDepotReverseMap::StackDepotReverseMap() -->
          <function-decl name='StackDepotReverseMap' mangled-name='_ZN11__sanitizer20StackDepotReverseMapC2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StackDepotReverseMap*' -->
            <parameter type-id='56305976' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- __sanitizer::atomic_uint32_t::Type __sanitizer::atomic_fetch_add<__sanitizer::atomic_uint32_t>(volatile __sanitizer::atomic_uint32_t*, __sanitizer::atomic_uint32_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_fetch_add&lt;__sanitizer::atomic_uint32_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint32_t*' -->
        <parameter type-id='e647f8e6'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint32_t::Type' -->
        <parameter type-id='9c64597f'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint32_t::Type -->
        <return type-id='9c64597f'/>
      </function-decl>
      <!-- bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uintptr_t>(volatile __sanitizer::atomic_uintptr_t*, __sanitizer::atomic_uintptr_t::Type*, __sanitizer::atomic_uintptr_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_compare_exchange_strong&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='e250a1bf'/>
        <!-- parameter of type '__sanitizer::atomic_uintptr_t::Type*' -->
        <parameter type-id='1cca5aa9'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uintptr_t::Type' -->
        <parameter type-id='748d5322'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- bool __sanitizer::atomic_compare_exchange_weak<__sanitizer::atomic_uintptr_t>(volatile __sanitizer::atomic_uintptr_t*, __sanitizer::atomic_uintptr_t::Type*, __sanitizer::atomic_uintptr_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_compare_exchange_weak&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='e250a1bf'/>
        <!-- parameter of type '__sanitizer::atomic_uintptr_t::Type*' -->
        <parameter type-id='1cca5aa9'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uintptr_t::Type' -->
        <parameter type-id='748d5322'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- void __sanitizer::Swap<__sanitizer::StackDepotReverseMap::IdDescPair>(__sanitizer::StackDepotReverseMap::IdDescPair&, __sanitizer::StackDepotReverseMap::IdDescPair&) -->
      <function-decl name='Swap&lt;__sanitizer::StackDepotReverseMap::IdDescPair&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__sanitizer::StackDepotReverseMap::IdDescPair&' -->
        <parameter type-id='43a44a0a'/>
        <!-- parameter of type '__sanitizer::StackDepotReverseMap::IdDescPair&' -->
        <parameter type-id='43a44a0a'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- __sanitizer::uptr __sanitizer::InternalBinarySearch<__sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>, __sanitizer::StackDepotReverseMap::IdDescPair, bool (*)(const __sanitizer::StackDepotReverseMap::IdDescPair&, const __sanitizer::StackDepotReverseMap::IdDescPair&)>(const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>&, __sanitizer::uptr, __sanitizer::uptr, const __sanitizer::StackDepotReverseMap::IdDescPair&, bool (const __sanitizer::StackDepotReverseMap::IdDescPair&, const __sanitizer::StackDepotReverseMap::IdDescPair&)*) -->
      <function-decl name='InternalBinarySearch&lt;__sanitizer::InternalMmapVector&lt;__sanitizer::StackDepotReverseMap::IdDescPair&gt;, __sanitizer::StackDepotReverseMap::IdDescPair, bool (*)(const __sanitizer::StackDepotReverseMap::IdDescPair&amp;, const __sanitizer::StackDepotReverseMap::IdDescPair&amp;)&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='425' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const __sanitizer::InternalMmapVector<__sanitizer::StackDepotReverseMap::IdDescPair>&' -->
        <parameter type-id='f394dfeb'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
        <parameter type-id='457ab05b'/>
        <!-- parameter of type 'bool (const __sanitizer::StackDepotReverseMap::IdDescPair&, const __sanitizer::StackDepotReverseMap::IdDescPair&)*' -->
        <parameter type-id='a3ad65aa'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::StackDepotStats* __sanitizer::StackDepotGetStats() -->
      <function-decl name='StackDepotGetStats' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stackdepot.cc' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __sanitizer::StackDepotStats* -->
        <return type-id='c6e9b243'/>
      </function-decl>
    </namespace-decl>
    <!-- bool (const __sanitizer::StackDepotReverseMap::IdDescPair&, const __sanitizer::StackDepotReverseMap::IdDescPair&) -->
    <function-type size-in-bits='64' id='bb12b260'>
      <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
      <parameter type-id='457ab05b'/>
      <!-- parameter of type 'const __sanitizer::StackDepotReverseMap::IdDescPair&' -->
      <parameter type-id='457ab05b'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- __sanitizer::AddressInfo& -->
    <reference-type-def kind='lvalue' type-id='39f1f1c6' size-in-bits='64' id='b9fbaf18'/>
    <!-- __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>* -->
    <pointer-type-def type-id='7fe4929e' size-in-bits='64' id='225be244'/>
    <!-- const __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo> -->
    <qualified-type-def type-id='7fe4929e' const='yes' id='8cf31189'/>
    <!-- const __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>& -->
    <reference-type-def kind='lvalue' type-id='8cf31189' size-in-bits='64' id='91a4d67d'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo> -->
      <class-decl name='InternalScopedBuffer&lt;__sanitizer::AddressInfo&gt;' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='67' column='1' id='7fe4929e'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::AddressInfo* __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::ptr_ -->
          <var-decl name='ptr_' type-id='b5fba8cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::cnt_ -->
          <var-decl name='cnt_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='82' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::InternalScopedBuffer(__sanitizer::uptr) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::~InternalScopedBuffer(int) -->
          <function-decl name='~InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::InternalScopedBuffer(const __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>&) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>&' -->
            <parameter type-id='91a4d67d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::AddressInfo* __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::data() -->
          <function-decl name='data' mangled-name='_ZN11__sanitizer20InternalScopedBufferINS_11AddressInfoEE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- __sanitizer::AddressInfo* -->
            <return type-id='b5fba8cc'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::size() -->
          <function-decl name='size' mangled-name='_ZN11__sanitizer20InternalScopedBufferINS_11AddressInfoEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::AddressInfo& __sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer20InternalScopedBufferINS_11AddressInfoEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__sanitizer::AddressInfo>*' -->
            <parameter type-id='225be244' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::AddressInfo& -->
            <return type-id='b9fbaf18'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_stacktrace_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- typedef int __pid_t -->
    <typedef-decl name='__pid_t' type-id='95e97e5e' filepath='/usr/include/bits/types.h' line='143' column='1' id='3629bad8'/>
    <!-- typedef __pid_t pid_t -->
    <typedef-decl name='pid_t' type-id='3629bad8' filepath='/usr/include/sched.h' line='37' column='1' id='587f89d2'/>
    <!-- __sanitizer::InternalMmapVector<int>* -->
    <pointer-type-def type-id='0c152318' size-in-bits='64' id='089a3e3e'/>
    <!-- __sanitizer::ScopedSetTracerPID* -->
    <pointer-type-def type-id='dd8992f8' size-in-bits='64' id='df7cc0de'/>
    <!-- __sanitizer::ScopedStackSpaceWithGuard* -->
    <pointer-type-def type-id='356f5731' size-in-bits='64' id='205a6159'/>
    <!-- __sanitizer::StopTheWorldScope* -->
    <pointer-type-def type-id='83eee231' size-in-bits='64' id='a0235589'/>
    <!-- __sanitizer::SuspendedThreadsList& -->
    <reference-type-def kind='lvalue' type-id='0afc63d0' size-in-bits='64' id='cf7cc99a'/>
    <!-- __sanitizer::SuspendedThreadsList* -->
    <pointer-type-def type-id='0afc63d0' size-in-bits='64' id='c37cb6b6'/>
    <!-- __sanitizer::ThreadSuspender* -->
    <pointer-type-def type-id='844cd341' size-in-bits='64' id='c1907c89'/>
    <!-- const __sanitizer::InternalMmapVector<int> -->
    <qualified-type-def type-id='0c152318' const='yes' id='c259bcad'/>
    <!-- const __sanitizer::InternalMmapVector<int>& -->
    <reference-type-def kind='lvalue' type-id='c259bcad' size-in-bits='64' id='7e43ced1'/>
    <!-- const __sanitizer::InternalMmapVector<int>* -->
    <pointer-type-def type-id='c259bcad' size-in-bits='64' id='7a43c885'/>
    <!-- const __sanitizer::ScopedStackSpaceWithGuard -->
    <qualified-type-def type-id='356f5731' const='yes' id='763d8820'/>
    <!-- const __sanitizer::ScopedStackSpaceWithGuard* -->
    <pointer-type-def type-id='763d8820' size-in-bits='64' id='2cdd27be'/>
    <!-- const __sanitizer::SuspendedThreadsList -->
    <qualified-type-def type-id='0afc63d0' const='yes' id='9a6c3a1f'/>
    <!-- const __sanitizer::SuspendedThreadsList& -->
    <reference-type-def kind='lvalue' type-id='9a6c3a1f' size-in-bits='64' id='515fa7bb'/>
    <!-- const __sanitizer::SuspendedThreadsList* -->
    <pointer-type-def type-id='9a6c3a1f' size-in-bits='64' id='4d5fa16f'/>
    <!-- const int& -->
    <reference-type-def kind='lvalue' type-id='2448a865' size-in-bits='64' id='6160e179'/>
    <!-- const int* -->
    <pointer-type-def type-id='2448a865' size-in-bits='64' id='6d60f45d'/>
    <!-- int& -->
    <reference-type-def kind='lvalue' type-id='95e97e5e' size-in-bits='64' id='769216e8'/>
    <!-- void (const __sanitizer::SuspendedThreadsList&, void*)* -->
    <pointer-type-def type-id='99291cee' size-in-bits='64' id='8abaf678'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalMmapVector<int> -->
      <class-decl name='InternalMmapVector&lt;int&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='0c152318'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- int* __sanitizer::InternalMmapVector<int>::data_ -->
          <var-decl name='data_' type-id='7292109c' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<int>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<int>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<int>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='089a3e3e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<int>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='089a3e3e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<int>::InternalMmapVector(const __sanitizer::InternalMmapVector<int>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='089a3e3e' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<int>&' -->
            <parameter type-id='7e43ced1'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<int>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIiE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='7a43c885' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const int& __sanitizer::InternalMmapVector<int>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIiEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='7a43c885' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const int& -->
            <return type-id='6160e179'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<int>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorIiE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='089a3e3e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<int>::push_back(const int&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorIiE9push_backERKi' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<int>*' -->
            <parameter type-id='089a3e3e' is-artificial='yes'/>
            <!-- parameter of type 'const int&' -->
            <parameter type-id='6160e179'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef int __sanitizer::SuspendedThreadID -->
      <typedef-decl name='SuspendedThreadID' type-id='95e97e5e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='19' column='1' id='e91744b3'/>
      <!-- class __sanitizer::SuspendedThreadsList -->
      <class-decl name='SuspendedThreadsList' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='23' column='1' id='0afc63d0'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::InternalMmapVector<int> __sanitizer::SuspendedThreadsList::thread_ids_ -->
          <var-decl name='thread_ids_' type-id='0c152318' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='47' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::SuspendedThreadsList::SuspendedThreadsList() -->
          <function-decl name='SuspendedThreadsList' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='c37cb6b6' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::SuspendedThreadsList::SuspendedThreadsList(const __sanitizer::SuspendedThreadsList&) -->
          <function-decl name='SuspendedThreadsList' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='c37cb6b6' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::SuspendedThreadsList&' -->
            <parameter type-id='515fa7bb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::SuspendedThreadsList::thread_count() -->
          <function-decl name='thread_count' mangled-name='_ZNK11__sanitizer20SuspendedThreadsList12thread_countEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='4d5fa16f' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SuspendedThreadsList::Append(__sanitizer::SuspendedThreadID) -->
          <function-decl name='Append' mangled-name='_ZN11__sanitizer20SuspendedThreadsList6AppendEi' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='c37cb6b6' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::SuspendedThreadID' -->
            <parameter type-id='e91744b3'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __sanitizer::SuspendedThreadsList::Contains(__sanitizer::SuspendedThreadID) -->
          <function-decl name='Contains' mangled-name='_ZNK11__sanitizer20SuspendedThreadsList8ContainsEi' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='4d5fa16f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::SuspendedThreadID' -->
            <parameter type-id='e91744b3'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::SuspendedThreadID __sanitizer::SuspendedThreadsList::GetThreadID(__sanitizer::uptr) -->
          <function-decl name='GetThreadID' mangled-name='_ZNK11__sanitizer20SuspendedThreadsList11GetThreadIDEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='4d5fa16f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::SuspendedThreadID -->
            <return type-id='e91744b3'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- int __sanitizer::SuspendedThreadsList::GetRegistersAndSP(__sanitizer::uptr, __sanitizer::uptr*, __sanitizer::uptr*) -->
          <function-decl name='GetRegistersAndSP' mangled-name='_ZNK11__sanitizer20SuspendedThreadsList17GetRegistersAndSPEmPmS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::SuspendedThreadsList*' -->
            <parameter type-id='4d5fa16f' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- int -->
            <return type-id='95e97e5e'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SuspendedThreadsList::RegisterCount() -->
          <function-decl name='RegisterCount' mangled-name='_ZN11__sanitizer20SuspendedThreadsList13RegisterCountEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef void (const __sanitizer::SuspendedThreadsList&, void*)* __sanitizer::StopTheWorldCallback -->
      <typedef-decl name='StopTheWorldCallback' type-id='8abaf678' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld.h' line='54' column='1' id='b5c9f18b'/>
      <!-- class __sanitizer::ThreadSuspender -->
      <class-decl name='ThreadSuspender' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='72' column='1' id='844cd341'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::SuspendedThreadsList __sanitizer::ThreadSuspender::suspended_threads_list_ -->
          <var-decl name='suspended_threads_list_' type-id='0afc63d0' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='85' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- pid_t __sanitizer::ThreadSuspender::pid_ -->
          <var-decl name='pid_' type-id='587f89d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='86' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadSuspender::ThreadSuspender(pid_t) -->
          <function-decl name='ThreadSuspender' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- parameter of type 'typedef pid_t' -->
            <parameter type-id='587f89d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::ThreadSuspender::SuspendThread(__sanitizer::SuspendedThreadID) -->
          <function-decl name='SuspendThread' mangled-name='_ZN11__sanitizer15ThreadSuspender13SuspendThreadEi' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::SuspendedThreadID' -->
            <parameter type-id='e91744b3'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::SuspendedThreadsList& __sanitizer::ThreadSuspender::suspended_threads_list() -->
          <function-decl name='suspended_threads_list' mangled-name='_ZN11__sanitizer15ThreadSuspender22suspended_threads_listEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- __sanitizer::SuspendedThreadsList& -->
            <return type-id='cf7cc99a'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadSuspender::ResumeAllThreads() -->
          <function-decl name='ResumeAllThreads' mangled-name='_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadSuspender::KillAllThreads() -->
          <function-decl name='KillAllThreads' mangled-name='_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::ThreadSuspender::SuspendAllThreads() -->
          <function-decl name='SuspendAllThreads' mangled-name='_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadSuspender*' -->
            <parameter type-id='c1907c89' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::TracerThreadArgument -->
      <class-decl name='TracerThreadArgument' size-in-bits='896' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='181' column='1' id='217de088'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::StopTheWorldCallback __sanitizer::TracerThreadArgument::callback -->
          <var-decl name='callback' type-id='b5c9f18b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='182' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- void* __sanitizer::TracerThreadArgument::callback_argument -->
          <var-decl name='callback_argument' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='183' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::BlockingMutex __sanitizer::TracerThreadArgument::mutex -->
          <var-decl name='mutex' type-id='cb1fb5cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='186' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='832'>
          <!-- __sanitizer::uptr __sanitizer::TracerThreadArgument::parent_pid -->
          <var-decl name='parent_pid' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='187' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __sanitizer::ScopedStackSpaceWithGuard -->
      <class-decl name='ScopedStackSpaceWithGuard' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='276' column='1' id='356f5731'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::ScopedStackSpaceWithGuard::stack_size_ -->
          <var-decl name='stack_size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='295' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::ScopedStackSpaceWithGuard::guard_size_ -->
          <var-decl name='guard_size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='296' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::ScopedStackSpaceWithGuard::guard_start_ -->
          <var-decl name='guard_start_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='297' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ScopedStackSpaceWithGuard::ScopedStackSpaceWithGuard(__sanitizer::uptr) -->
          <function-decl name='ScopedStackSpaceWithGuard' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='278' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ScopedStackSpaceWithGuard*' -->
            <parameter type-id='205a6159' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ScopedStackSpaceWithGuard::~ScopedStackSpaceWithGuard(int) -->
          <function-decl name='~ScopedStackSpaceWithGuard' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ScopedStackSpaceWithGuard*' -->
            <parameter type-id='205a6159' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void* __sanitizer::ScopedStackSpaceWithGuard::Bottom() -->
          <function-decl name='Bottom' mangled-name='_ZNK11__sanitizer25ScopedStackSpaceWithGuard6BottomEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::ScopedStackSpaceWithGuard*' -->
            <parameter type-id='2cdd27be' is-artificial='yes'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::StopTheWorldScope -->
      <class-decl name='StopTheWorldScope' size-in-bits='32' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='307' column='1' id='83eee231'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- int __sanitizer::StopTheWorldScope::process_was_dumpable_ -->
          <var-decl name='process_was_dumpable_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='354' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::StopTheWorldScope::StopTheWorldScope() -->
          <function-decl name='StopTheWorldScope' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StopTheWorldScope*' -->
            <parameter type-id='a0235589' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::StopTheWorldScope::~StopTheWorldScope(int) -->
          <function-decl name='~StopTheWorldScope' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='339' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::StopTheWorldScope*' -->
            <parameter type-id='a0235589' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::ScopedSetTracerPID -->
      <class-decl name='ScopedSetTracerPID' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='360' column='1' id='dd8992f8'>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ScopedSetTracerPID::ScopedSetTracerPID(__sanitizer::uptr) -->
          <function-decl name='ScopedSetTracerPID' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ScopedSetTracerPID*' -->
            <parameter type-id='df7cc0de' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ScopedSetTracerPID::~ScopedSetTracerPID(int) -->
          <function-decl name='~ScopedSetTracerPID' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ScopedSetTracerPID*' -->
            <parameter type-id='df7cc0de' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- void (const __sanitizer::SuspendedThreadsList&, void*) -->
    <function-type size-in-bits='64' id='99291cee'>
      <!-- parameter of type 'const __sanitizer::SuspendedThreadsList&' -->
      <parameter type-id='515fa7bb'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- __sanitizer::Suppression* const -->
    <qualified-type-def type-id='e875cd39' const='yes' id='53fcd6d6'/>
    <!-- __sanitizer::Suppression* const& -->
    <reference-type-def kind='lvalue' type-id='53fcd6d6' size-in-bits='64' id='27065bd0'/>
    <!-- __sanitizer::Suppression* const* -->
    <pointer-type-def type-id='53fcd6d6' size-in-bits='64' id='33066eb4'/>
    <!-- __sanitizer::Suppression*& -->
    <reference-type-def kind='lvalue' type-id='e875cd39' size-in-bits='64' id='1071e7cd'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression*> -->
    <qualified-type-def type-id='45bd01dd' const='yes' id='b6467004'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression*>& -->
    <reference-type-def kind='lvalue' type-id='b6467004' size-in-bits='64' id='12e28586'/>
    <!-- const __sanitizer::InternalMmapVector<__sanitizer::Suppression*>* -->
    <pointer-type-def type-id='b6467004' size-in-bits='64' id='1ee2986a'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- bool __sanitizer::TemplateMatch(char*, const char*) -->
      <function-decl name='TemplateMatch' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_suppressions.cc' line='24' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- __sanitizer::DataInfo* -->
    <pointer-type-def type-id='26b9307e' size-in-bits='64' id='7ee29db4'/>
    <!-- __sanitizer::Symbolizer::SymbolizerScope* -->
    <pointer-type-def type-id='30c6fc56' size-in-bits='64' id='401c651c'/>
    <!-- const __sanitizer::Symbolizer -->
    <qualified-type-def type-id='30a82206' const='yes' id='f9a478b9'/>
    <!-- const __sanitizer::Symbolizer* -->
    <pointer-type-def type-id='f9a478b9' size-in-bits='64' id='90e9cf69'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- struct __sanitizer::DataInfo -->
      <class-decl name='DataInfo' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='55' column='1' id='26b9307e'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::DataInfo::address -->
          <var-decl name='address' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='56' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* __sanitizer::DataInfo::module -->
          <var-decl name='module' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='57' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::DataInfo::module_offset -->
          <var-decl name='module_offset' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* __sanitizer::DataInfo::name -->
          <var-decl name='name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='59' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __sanitizer::uptr __sanitizer::DataInfo::start -->
          <var-decl name='start' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='60' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __sanitizer::uptr __sanitizer::DataInfo::size -->
          <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer.h' line='61' column='1'/>
        </data-member>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- __sanitizer::LibbacktraceSymbolizer* -->
    <pointer-type-def type-id='98aa7c2f' size-in-bits='64' id='b49049f7'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::LibbacktraceSymbolizer -->
      <class-decl name='LibbacktraceSymbolizer' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='23' column='1' id='98aa7c2f'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- void* __sanitizer::LibbacktraceSymbolizer::state_ -->
          <var-decl name='state_' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='37' column='1'/>
        </data-member>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::LibbacktraceSymbolizer::LibbacktraceSymbolizer(void*) -->
          <function-decl name='LibbacktraceSymbolizer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibbacktraceSymbolizer*' -->
            <parameter type-id='b49049f7' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::LibbacktraceSymbolizer* __sanitizer::LibbacktraceSymbolizer::get() -->
          <function-decl name='get' mangled-name='_ZN11__sanitizer22LibbacktraceSymbolizer3getEPNS_17LowLevelAllocatorE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type '__sanitizer::LowLevelAllocator*' -->
            <parameter type-id='5e6e9e43'/>
            <!-- __sanitizer::LibbacktraceSymbolizer* -->
            <return type-id='b49049f7'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::LibbacktraceSymbolizer::SymbolizeCode(__sanitizer::uptr, __sanitizer::AddressInfo*, __sanitizer::uptr, const char*, __sanitizer::uptr) -->
          <function-decl name='SymbolizeCode' mangled-name='_ZN11__sanitizer22LibbacktraceSymbolizer13SymbolizeCodeEmPNS_11AddressInfoEmPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibbacktraceSymbolizer*' -->
            <parameter type-id='b49049f7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::LibbacktraceSymbolizer::SymbolizeData(__sanitizer::DataInfo*) -->
          <function-decl name='SymbolizeData' mangled-name='_ZN11__sanitizer22LibbacktraceSymbolizer13SymbolizeDataEPNS_8DataInfoE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibbacktraceSymbolizer*' -->
            <parameter type-id='b49049f7' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::DataInfo*' -->
            <parameter type-id='7ee29db4'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __sanitizer::LibbacktraceSymbolizer::Demangle(const char*) -->
          <function-decl name='Demangle' mangled-name='_ZN11__sanitizer22LibbacktraceSymbolizer8DemangleEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libbacktrace.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LibbacktraceSymbolizer*' -->
            <parameter type-id='b49049f7' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- char[16384] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='131072' id='4125b4c1'>
      <!-- <anonymous range>[16384] -->
      <subrange length='16384' type-id='4c87fef4' id='b2964699'/>
    </array-type-def>
    <!-- __sanitizer::ExternalSymbolizer* -->
    <pointer-type-def type-id='eed3ae69' size-in-bits='64' id='617955f1'/>
    <!-- __sanitizer::InternalSymbolizer* -->
    <pointer-type-def type-id='8abf64fb' size-in-bits='64' id='0e1e9c6b'/>
    <!-- __sanitizer::InternalSymbolizer* const -->
    <qualified-type-def type-id='0e1e9c6b' const='yes' id='45bcd420'/>
    <!-- __sanitizer::POSIXSymbolizer* -->
    <pointer-type-def type-id='6c64f739' size-in-bits='64' id='02874851'/>
    <!-- bool (const char*, typedef __sanitizer::u64, char*, int)* -->
    <pointer-type-def type-id='50cd0e09' size-in-bits='64' id='af1bda0d'/>
    <!-- namespace __cxxabiv1 -->
    <namespace-decl name='__cxxabiv1'>
      <!-- char* __cxxabiv1::__cxa_demangle(const char*, char*, size_t*, int*) -->
      <function-decl name='__cxa_demangle' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'size_t*' -->
        <parameter type-id='78c01427'/>
        <!-- parameter of type 'int*' -->
        <parameter type-id='7292109c'/>
        <!-- char* -->
        <return type-id='26a90f95'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::ExternalSymbolizer -->
      <class-decl name='ExternalSymbolizer' size-in-bits='131328' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='208' column='1' id='eed3ae69'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const char* __sanitizer::ExternalSymbolizer::path_ -->
          <var-decl name='path_' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='294' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- int __sanitizer::ExternalSymbolizer::input_fd_ -->
          <var-decl name='input_fd_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='295' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='96'>
          <!-- int __sanitizer::ExternalSymbolizer::output_fd_ -->
          <var-decl name='output_fd_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='296' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::ExternalSymbolizer::kBufferSize -->
          <var-decl name='kBufferSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='298' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- char __sanitizer::ExternalSymbolizer::buffer_[16384] -->
          <var-decl name='buffer_' type-id='4125b4c1' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='299' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::ExternalSymbolizer::kMaxTimesRestarted -->
          <var-decl name='kMaxTimesRestarted' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='301' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='131200'>
          <!-- __sanitizer::uptr __sanitizer::ExternalSymbolizer::times_restarted_ -->
          <var-decl name='times_restarted_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='302' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='131264'>
          <!-- bool __sanitizer::ExternalSymbolizer::failed_to_start_ -->
          <var-decl name='failed_to_start_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='303' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ExternalSymbolizer::ExternalSymbolizer(const char*) -->
          <function-decl name='ExternalSymbolizer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='210' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ExternalSymbolizer::Flush() -->
          <function-decl name='Flush' mangled-name='_ZN11__sanitizer18ExternalSymbolizer5FlushEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='234' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::ExternalSymbolizer::readFromSymbolizer(char*, __sanitizer::uptr) -->
          <function-decl name='readFromSymbolizer' mangled-name='_ZN11__sanitizer18ExternalSymbolizer18readFromSymbolizerEPcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='260' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- parameter of type 'char*' -->
            <parameter type-id='26a90f95'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::ExternalSymbolizer::writeToSymbolizer(const char*, __sanitizer::uptr) -->
          <function-decl name='writeToSymbolizer' mangled-name='_ZN11__sanitizer18ExternalSymbolizer17writeToSymbolizerEPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='283' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char* __sanitizer::ExternalSymbolizer::SendCommand(bool, const char*, __sanitizer::uptr) -->
          <function-decl name='SendCommand' mangled-name='_ZN11__sanitizer18ExternalSymbolizer11SendCommandEbPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='220' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- char* -->
            <return type-id='26a90f95'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- char* __sanitizer::ExternalSymbolizer::SendCommandImpl(bool, const char*, __sanitizer::uptr) -->
          <function-decl name='SendCommandImpl' mangled-name='_ZN11__sanitizer18ExternalSymbolizer15SendCommandImplEbPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='246' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- char* -->
            <return type-id='26a90f95'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- bool __sanitizer::ExternalSymbolizer::Restart() -->
          <function-decl name='Restart' mangled-name='_ZN11__sanitizer18ExternalSymbolizer7RestartEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='238' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalSymbolizer -->
      <class-decl name='InternalSymbolizer' size-in-bits='131072' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='321' column='1' id='8abf64fb'>
        <member-type access='public'>
          <!-- typedef bool (const char*, typedef __sanitizer::u64, char*, int)* __sanitizer::InternalSymbolizer::SanitizerSymbolizeFn -->
          <typedef-decl name='SanitizerSymbolizeFn' type-id='af1bda0d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='323' column='1' id='ed3e3e8f'/>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const int __sanitizer::InternalSymbolizer::kBufferSize -->
          <var-decl name='kBufferSize' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='367' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const int __sanitizer::InternalSymbolizer::kMaxDemangledNameSize -->
          <var-decl name='kMaxDemangledNameSize' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='368' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- char __sanitizer::InternalSymbolizer::buffer_[16384] -->
          <var-decl name='buffer_' type-id='4125b4c1' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='369' column='1'/>
        </data-member>
        <member-function access='private' constructor='yes'>
          <!-- __sanitizer::InternalSymbolizer::InternalSymbolizer() -->
          <function-decl name='InternalSymbolizer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='365' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalSymbolizer*' -->
            <parameter type-id='0e1e9c6b' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalSymbolizer::Flush() -->
          <function-decl name='Flush' mangled-name='_ZN11__sanitizer18InternalSymbolizer5FlushEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='341' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalSymbolizer*' -->
            <parameter type-id='0e1e9c6b' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __sanitizer::InternalSymbolizer::Demangle(const char*) -->
          <function-decl name='Demangle' mangled-name='_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='346' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalSymbolizer*' -->
            <parameter type-id='0e1e9c6b' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- char* __sanitizer::InternalSymbolizer::SendCommand(bool, const char*, __sanitizer::uptr) -->
          <function-decl name='SendCommand' mangled-name='_ZN11__sanitizer18InternalSymbolizer11SendCommandEbPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalSymbolizer*' -->
            <parameter type-id='0e1e9c6b' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- char* -->
            <return type-id='26a90f95'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::InternalSymbolizer* __sanitizer::InternalSymbolizer::get() -->
          <function-decl name='get' mangled-name='_ZN11__sanitizer18InternalSymbolizer3getEPNS_17LowLevelAllocatorE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='325' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type '__sanitizer::LowLevelAllocator*' -->
            <parameter type-id='5e6e9e43'/>
            <!-- __sanitizer::InternalSymbolizer* -->
            <return type-id='0e1e9c6b'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::POSIXSymbolizer -->
      <class-decl name='POSIXSymbolizer' size-in-bits='1280' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='385' column='1' id='6c64f739'>
        <!-- class __sanitizer::Symbolizer -->
        <base-class access='public' layout-offset-in-bits='0' type-id='30a82206'/>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::POSIXSymbolizer::kMaxNumberOfModuleContexts -->
          <var-decl name='kMaxNumberOfModuleContexts' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='581' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __sanitizer::LoadedModule* __sanitizer::POSIXSymbolizer::modules_ -->
          <var-decl name='modules_' type-id='30b3560b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='582' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='256'>
          <!-- __sanitizer::uptr __sanitizer::POSIXSymbolizer::n_modules_ -->
          <var-decl name='n_modules_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='583' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='320'>
          <!-- bool __sanitizer::POSIXSymbolizer::modules_fresh_ -->
          <var-decl name='modules_fresh_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='585' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='384'>
          <!-- __sanitizer::BlockingMutex __sanitizer::POSIXSymbolizer::mu_ -->
          <var-decl name='mu_' type-id='cb1fb5cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='586' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1088'>
          <!-- __sanitizer::ExternalSymbolizer* __sanitizer::POSIXSymbolizer::external_symbolizer_ -->
          <var-decl name='external_symbolizer_' type-id='617955f1' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='588' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1152'>
          <!-- __sanitizer::InternalSymbolizer* const __sanitizer::POSIXSymbolizer::internal_symbolizer_ -->
          <var-decl name='internal_symbolizer_' type-id='45bcd420' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='589' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1216'>
          <!-- __sanitizer::LibbacktraceSymbolizer* __sanitizer::POSIXSymbolizer::libbacktrace_symbolizer_ -->
          <var-decl name='libbacktrace_symbolizer_' type-id='b49049f7' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='590' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::POSIXSymbolizer::POSIXSymbolizer(__sanitizer::ExternalSymbolizer*, __sanitizer::InternalSymbolizer*, __sanitizer::LibbacktraceSymbolizer*) -->
          <function-decl name='POSIXSymbolizer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='387' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::ExternalSymbolizer*' -->
            <parameter type-id='617955f1'/>
            <!-- parameter of type '__sanitizer::InternalSymbolizer*' -->
            <parameter type-id='0e1e9c6b'/>
            <!-- parameter of type '__sanitizer::LibbacktraceSymbolizer*' -->
            <parameter type-id='b49049f7'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- char* __sanitizer::POSIXSymbolizer::SendCommand(bool, const char*, __sanitizer::uptr) -->
          <function-decl name='SendCommand' mangled-name='_ZN11__sanitizer15POSIXSymbolizer11SendCommandEbPKcm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='533' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- char* -->
            <return type-id='26a90f95'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::LoadedModule* __sanitizer::POSIXSymbolizer::FindModuleForAddress(__sanitizer::uptr) -->
          <function-decl name='FindModuleForAddress' mangled-name='_ZN11__sanitizer15POSIXSymbolizer20FindModuleForAddressEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='549' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::LoadedModule* -->
            <return type-id='30b3560b'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='0'>
          <!-- __sanitizer::uptr __sanitizer::POSIXSymbolizer::SymbolizeCode(__sanitizer::uptr, __sanitizer::AddressInfo*, __sanitizer::uptr) -->
          <function-decl name='SymbolizeCode' mangled-name='_ZN11__sanitizer15POSIXSymbolizer13SymbolizeCodeEmPNS_11AddressInfoEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='395' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::AddressInfo*' -->
            <parameter type-id='b5fba8cc'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='1'>
          <!-- bool __sanitizer::POSIXSymbolizer::SymbolizeData(__sanitizer::uptr, __sanitizer::DataInfo*) -->
          <function-decl name='SymbolizeData' mangled-name='_ZN11__sanitizer15POSIXSymbolizer13SymbolizeDataEmPNS_8DataInfoE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='464' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::DataInfo*' -->
            <parameter type-id='7ee29db4'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='2'>
          <!-- bool __sanitizer::POSIXSymbolizer::IsAvailable() -->
          <function-decl name='IsAvailable' mangled-name='_ZN11__sanitizer15POSIXSymbolizer11IsAvailableEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='3'>
          <!-- bool __sanitizer::POSIXSymbolizer::IsExternalAvailable() -->
          <function-decl name='IsExternalAvailable' mangled-name='_ZN11__sanitizer15POSIXSymbolizer19IsExternalAvailableEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='495' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='4'>
          <!-- void __sanitizer::POSIXSymbolizer::Flush() -->
          <function-decl name='Flush' mangled-name='_ZN11__sanitizer15POSIXSymbolizer5FlushEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='499' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='5'>
          <!-- const char* __sanitizer::POSIXSymbolizer::Demangle(const char*) -->
          <function-decl name='Demangle' mangled-name='_ZN11__sanitizer15POSIXSymbolizer8DemangleEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='509' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='6'>
          <!-- void __sanitizer::POSIXSymbolizer::PrepareForSandboxing() -->
          <function-decl name='PrepareForSandboxing' mangled-name='_ZN11__sanitizer15POSIXSymbolizer20PrepareForSandboxingEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='524' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::POSIXSymbolizer*' -->
            <parameter type-id='02874851' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- bool __sanitizer::__sanitizer_symbolize_code(const char*, __sanitizer::u64, char*, int) -->
      <function-decl name='__sanitizer_symbolize_code' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='309' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- bool __sanitizer::__sanitizer_symbolize_data(const char*, __sanitizer::u64, char*, int) -->
      <function-decl name='__sanitizer_symbolize_data' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='312' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- void __sanitizer::__sanitizer_symbolize_flush() -->
      <function-decl name='__sanitizer_symbolize_flush' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='315' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- int __sanitizer::__sanitizer_symbolize_demangle(const char*, char*, int) -->
      <function-decl name='__sanitizer_symbolize_demangle' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_symbolizer_posix_libcdep.cc' line='317' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const char*' -->
        <parameter type-id='80f4b756'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- int -->
        <return type-id='95e97e5e'/>
      </function-decl>
    </namespace-decl>
    <!-- __pid_t waitpid(__pid_t, int*, int) -->
    <function-decl name='waitpid' filepath='/usr/include/sys/wait.h' line='139' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __pid_t' -->
      <parameter type-id='3629bad8'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- typedef __pid_t -->
      <return type-id='3629bad8'/>
    </function-decl>
    <!-- int pipe(int*) -->
    <function-decl name='pipe' filepath='/usr/include/unistd.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int execl(const char*, const char*, ...) -->
    <function-decl name='execl' filepath='/usr/include/unistd.h' line='570' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __pid_t fork() -->
    <function-decl name='fork' filepath='/usr/include/unistd.h' line='775' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef __pid_t -->
      <return type-id='3629bad8'/>
    </function-decl>
    <!-- int getdtablesize() -->
    <function-decl name='getdtablesize' filepath='/usr/include/unistd.h' line='997' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- bool (const char*, __sanitizer::u64, char*, int) -->
    <function-type size-in-bits='64' id='50cd0e09'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
    <!-- int (const char*, const char*, ...) -->
    <function-type size-in-bits='64' id='15187fe5'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int*) -->
    <function-type size-in-bits='64' id='e4423d2e'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common' language='LANG_C_plus_plus'>
    <!-- char[64] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='512' id='59daf3ef'>
      <!-- <anonymous range>[64] -->
      <subrange length='64' type-id='4c87fef4' id='b10be967'/>
    </array-type-def>
    <!-- __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>* -->
    <pointer-type-def type-id='f5e8dc42' size-in-bits='64' id='a153d140'/>
    <!-- __sanitizer::ThreadContextBase* -->
    <pointer-type-def type-id='daf5fe68' size-in-bits='64' id='f8b9299e'/>
    <!-- __sanitizer::ThreadContextBase* (typedef __sanitizer::u32)* -->
    <pointer-type-def type-id='51551141' size-in-bits='64' id='0b0bf71d'/>
    <!-- __sanitizer::ThreadContextBase** -->
    <pointer-type-def type-id='f8b9299e' size-in-bits='64' id='3f7ca65c'/>
    <!-- __sanitizer::ThreadRegistry* -->
    <pointer-type-def type-id='0b11c521' size-in-bits='64' id='08beeda9'/>
    <!-- bool (__sanitizer::ThreadContextBase*, void*)* -->
    <pointer-type-def type-id='9d6566fd' size-in-bits='64' id='9f44d379'/>
    <!-- const __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase> -->
    <qualified-type-def type-id='f5e8dc42' const='yes' id='4792b837'/>
    <!-- const __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>* -->
    <pointer-type-def type-id='4792b837' size-in-bits='64' id='c8f7d5a7'/>
    <!-- const __sanitizer::ThreadContextFactory -->
    <qualified-type-def type-id='4794537e' const='yes' id='7e54ec6e'/>
    <!-- const __sanitizer::u32 -->
    <qualified-type-def type-id='3ae5bbe9' const='yes' id='1f386899'/>
    <!-- void (__sanitizer::ThreadContextBase*, void*)* -->
    <pointer-type-def type-id='be56e60b' size-in-bits='64' id='2a2fa597'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- struct __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase> -->
      <class-decl name='IntrusiveList&lt;__sanitizer::ThreadContextBase&gt;' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='26' column='1' id='f5e8dc42'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='115' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::first_ -->
          <var-decl name='first_' type-id='f8b9299e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='116' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::last_ -->
          <var-decl name='last_' type-id='f8b9299e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='117' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::clear() -->
          <function-decl name='clear' mangled-name='_ZN11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE5clearEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='a153d140' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='c8f7d5a7' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::front() -->
          <function-decl name='front' mangled-name='_ZN11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE5frontEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='a153d140' is-artificial='yes'/>
            <!-- __sanitizer::ThreadContextBase* -->
            <return type-id='f8b9299e'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::empty() -->
          <function-decl name='empty' mangled-name='_ZNK11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE5emptyEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='c8f7d5a7' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::push_back(__sanitizer::ThreadContextBase*) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE9push_backEPS1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='a153d140' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>::pop_front() -->
          <function-decl name='pop_front' mangled-name='_ZN11__sanitizer13IntrusiveListINS_17ThreadContextBaseEE9pop_frontEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_list.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::IntrusiveList<__sanitizer::ThreadContextBase>*' -->
            <parameter type-id='a153d140' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __sanitizer::ThreadStatus -->
      <enum-decl name='ThreadStatus' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='22' column='1' id='7de8bc5f'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='ThreadStatusInvalid' value='0'/>
        <enumerator name='ThreadStatusCreated' value='1'/>
        <enumerator name='ThreadStatusRunning' value='2'/>
        <enumerator name='ThreadStatusFinished' value='3'/>
        <enumerator name='ThreadStatusDead' value='4'/>
      </enum-decl>
      <!-- class __sanitizer::ThreadContextBase -->
      <class-decl name='ThreadContextBase' size-in-bits='1024' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='32' column='1' id='daf5fe68'>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- const __sanitizer::u32 __sanitizer::ThreadContextBase::tid -->
          <var-decl name='tid' type-id='1f386899' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='37' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::u64 __sanitizer::ThreadContextBase::unique_id -->
          <var-decl name='unique_id' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='38' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr __sanitizer::ThreadContextBase::os_id -->
          <var-decl name='os_id' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='39' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __sanitizer::uptr __sanitizer::ThreadContextBase::user_id -->
          <var-decl name='user_id' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='40' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- char __sanitizer::ThreadContextBase::name[64] -->
          <var-decl name='name' type-id='59daf3ef' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='41' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='832'>
          <!-- __sanitizer::ThreadStatus __sanitizer::ThreadContextBase::status -->
          <var-decl name='status' type-id='7de8bc5f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='43' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='864'>
          <!-- bool __sanitizer::ThreadContextBase::detached -->
          <var-decl name='detached' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='44' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='896'>
          <!-- int __sanitizer::ThreadContextBase::reuse_count -->
          <var-decl name='reuse_count' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='45' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='928'>
          <!-- __sanitizer::u32 __sanitizer::ThreadContextBase::parent_tid -->
          <var-decl name='parent_tid' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='47' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='960'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::ThreadContextBase::next -->
          <var-decl name='next' type-id='f8b9299e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='48' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadContextBase::ThreadContextBase(__sanitizer::u32) -->
          <function-decl name='ThreadContextBase' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='17' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ThreadContextBase::~ThreadContextBase(int) -->
          <function-decl name='~ThreadContextBase' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetName(const char*) -->
          <function-decl name='SetName' mangled-name='_ZN11__sanitizer17ThreadContextBase7SetNameEPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetStarted(__sanitizer::uptr, void*) -->
          <function-decl name='SetStarted' mangled-name='_ZN11__sanitizer17ThreadContextBase10SetStartedEmPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetCreated(__sanitizer::uptr, __sanitizer::u64, bool, __sanitizer::u32, void*) -->
          <function-decl name='SetCreated' mangled-name='_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN11__sanitizer17ThreadContextBase5ResetEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetFinished() -->
          <function-decl name='SetFinished' mangled-name='_ZN11__sanitizer17ThreadContextBase11SetFinishedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadContextBase::ThreadContextBase(__sanitizer::u32) -->
          <function-decl name='ThreadContextBase' mangled-name='_ZN11__sanitizer17ThreadContextBaseC2Ej' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='17' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::ThreadContextBase::~ThreadContextBase(int) -->
          <function-decl name='~ThreadContextBase' mangled-name='_ZN11__sanitizer17ThreadContextBaseD2Ev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetDead() -->
          <function-decl name='SetDead' mangled-name='_ZN11__sanitizer17ThreadContextBase7SetDeadEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadContextBase::SetJoined(void*) -->
          <function-decl name='SetJoined' mangled-name='_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.cc' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='0'>
          <!-- void __sanitizer::ThreadContextBase::OnDead() -->
          <function-decl name='OnDead' mangled-name='_ZN11__sanitizer17ThreadContextBase6OnDeadEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='1'>
          <!-- void __sanitizer::ThreadContextBase::OnJoined(void*) -->
          <function-decl name='OnJoined' mangled-name='_ZN11__sanitizer17ThreadContextBase8OnJoinedEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='2'>
          <!-- void __sanitizer::ThreadContextBase::OnFinished() -->
          <function-decl name='OnFinished' mangled-name='_ZN11__sanitizer17ThreadContextBase10OnFinishedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='3'>
          <!-- void __sanitizer::ThreadContextBase::OnStarted(void*) -->
          <function-decl name='OnStarted' mangled-name='_ZN11__sanitizer17ThreadContextBase9OnStartedEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='4'>
          <!-- void __sanitizer::ThreadContextBase::OnCreated(void*) -->
          <function-decl name='OnCreated' mangled-name='_ZN11__sanitizer17ThreadContextBase9OnCreatedEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='5'>
          <!-- void __sanitizer::ThreadContextBase::OnReset() -->
          <function-decl name='OnReset' mangled-name='_ZN11__sanitizer17ThreadContextBase7OnResetEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef __sanitizer::ThreadContextBase* (typedef __sanitizer::u32)* __sanitizer::ThreadContextFactory -->
      <typedef-decl name='ThreadContextFactory' type-id='0b0bf71d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='71' column='1' id='4794537e'/>
      <!-- class __sanitizer::ThreadRegistry -->
      <class-decl name='ThreadRegistry' size-in-bits='1600' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='73' column='1' id='0b11c521'>
        <member-type access='public'>
          <!-- typedef void (__sanitizer::ThreadContextBase*, void*)* __sanitizer::ThreadRegistry::ThreadCallback -->
          <typedef-decl name='ThreadCallback' type-id='2a2fa597' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='94' column='1' id='1f4d40fd'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef bool (__sanitizer::ThreadContextBase*, void*)* __sanitizer::ThreadRegistry::FindThreadCallback -->
          <typedef-decl name='FindThreadCallback' type-id='9f44d379' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='99' column='1' id='3c4d9d4e'/>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::u32 __sanitizer::ThreadRegistry::kUnknownTid -->
          <var-decl name='kUnknownTid' type-id='1f386899' mangled-name='_ZN11__sanitizer14ThreadRegistry11kUnknownTidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='75' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __sanitizer::ThreadContextFactory __sanitizer::ThreadRegistry::context_factory_ -->
          <var-decl name='context_factory_' type-id='7e54ec6e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='117' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- const __sanitizer::u32 __sanitizer::ThreadRegistry::max_threads_ -->
          <var-decl name='max_threads_' type-id='1f386899' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='118' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='96'>
          <!-- const __sanitizer::u32 __sanitizer::ThreadRegistry::thread_quarantine_size_ -->
          <var-decl name='thread_quarantine_size_' type-id='1f386899' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='119' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::BlockingMutex __sanitizer::ThreadRegistry::mtx_ -->
          <var-decl name='mtx_' type-id='cb1fb5cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='121' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='832'>
          <!-- __sanitizer::u32 __sanitizer::ThreadRegistry::n_contexts_ -->
          <var-decl name='n_contexts_' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='123' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='896'>
          <!-- __sanitizer::u64 __sanitizer::ThreadRegistry::total_threads_ -->
          <var-decl name='total_threads_' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='125' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='960'>
          <!-- __sanitizer::uptr __sanitizer::ThreadRegistry::alive_threads_ -->
          <var-decl name='alive_threads_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='127' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1024'>
          <!-- __sanitizer::uptr __sanitizer::ThreadRegistry::max_alive_threads_ -->
          <var-decl name='max_alive_threads_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='128' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1088'>
          <!-- __sanitizer::uptr __sanitizer::ThreadRegistry::running_threads_ -->
          <var-decl name='running_threads_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='129' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1152'>
          <!-- __sanitizer::ThreadContextBase** __sanitizer::ThreadRegistry::threads_ -->
          <var-decl name='threads_' type-id='3f7ca65c' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='131' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1216'>
          <!-- __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase> __sanitizer::ThreadRegistry::dead_threads_ -->
          <var-decl name='dead_threads_' type-id='f5e8dc42' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='132' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='1408'>
          <!-- __sanitizer::IntrusiveList<__sanitizer::ThreadContextBase> __sanitizer::ThreadRegistry::invalid_threads_ -->
          <var-decl name='invalid_threads_' type-id='f5e8dc42' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='133' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadRegistry::ThreadRegistry(__sanitizer::ThreadContextFactory, __sanitizer::u32, __sanitizer::u32) -->
          <function-decl name='ThreadRegistry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::ThreadContextFactory' -->
            <parameter type-id='4794537e'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::CheckLocked() -->
          <function-decl name='CheckLocked' mangled-name='_ZN11__sanitizer14ThreadRegistry11CheckLockedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::ThreadRegistry::QuarantinePop() -->
          <function-decl name='QuarantinePop' mangled-name='_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- __sanitizer::ThreadContextBase* -->
            <return type-id='f8b9299e'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::ThreadRegistry::QuarantinePush(__sanitizer::ThreadContextBase*) -->
          <function-decl name='QuarantinePush' mangled-name='_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='135' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::ThreadContextBase*' -->
            <parameter type-id='f8b9299e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::ThreadRegistry::ThreadRegistry(__sanitizer::ThreadContextFactory, __sanitizer::u32, __sanitizer::u32) -->
          <function-decl name='ThreadRegistry' mangled-name='_ZN11__sanitizer14ThreadRegistryC2EPFPNS_17ThreadContextBaseEjEjj' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::ThreadContextFactory' -->
            <parameter type-id='4794537e'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::GetNumberOfThreads(__sanitizer::uptr*, __sanitizer::uptr*, __sanitizer::uptr*) -->
          <function-decl name='GetNumberOfThreads' mangled-name='_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::ThreadRegistry::GetMaxAliveThreads() -->
          <function-decl name='GetMaxAliveThreads' mangled-name='_ZN11__sanitizer14ThreadRegistry18GetMaxAliveThreadsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::u32 __sanitizer::ThreadRegistry::CreateThread(__sanitizer::uptr, bool, __sanitizer::u32, void*) -->
          <function-decl name='CreateThread' mangled-name='_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- typedef __sanitizer::u32 -->
            <return type-id='3ae5bbe9'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::RunCallbackForEachThreadLocked(__sanitizer::ThreadRegistry::ThreadCallback, void*) -->
          <function-decl name='RunCallbackForEachThreadLocked' mangled-name='_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::ThreadRegistry::ThreadCallback' -->
            <parameter type-id='1f4d40fd'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::u32 __sanitizer::ThreadRegistry::FindThread(__sanitizer::ThreadRegistry::FindThreadCallback, void*) -->
          <function-decl name='FindThread' mangled-name='_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::ThreadRegistry::FindThreadCallback' -->
            <parameter type-id='3c4d9d4e'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- typedef __sanitizer::u32 -->
            <return type-id='3ae5bbe9'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::ThreadRegistry::FindThreadContextLocked(__sanitizer::ThreadRegistry::FindThreadCallback, void*) -->
          <function-decl name='FindThreadContextLocked' mangled-name='_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='105' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::ThreadRegistry::FindThreadCallback' -->
            <parameter type-id='3c4d9d4e'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- __sanitizer::ThreadContextBase* -->
            <return type-id='f8b9299e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::ThreadRegistry::FindThreadContextByOsIDLocked(__sanitizer::uptr) -->
          <function-decl name='FindThreadContextByOsIDLocked' mangled-name='_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='107' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::ThreadContextBase* -->
            <return type-id='f8b9299e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::SetThreadName(__sanitizer::u32, const char*) -->
          <function-decl name='SetThreadName' mangled-name='_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::SetThreadNameByUserId(__sanitizer::uptr, const char*) -->
          <function-decl name='SetThreadNameByUserId' mangled-name='_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::StartThread(__sanitizer::u32, __sanitizer::uptr, void*) -->
          <function-decl name='StartThread' mangled-name='_ZN11__sanitizer14ThreadRegistry11StartThreadEjmPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::DetachThread(__sanitizer::u32) -->
          <function-decl name='DetachThread' mangled-name='_ZN11__sanitizer14ThreadRegistry12DetachThreadEj' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::JoinThread(__sanitizer::u32, void*) -->
          <function-decl name='JoinThread' mangled-name='_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::FinishThread(__sanitizer::u32) -->
          <function-decl name='FinishThread' mangled-name='_ZN11__sanitizer14ThreadRegistry12FinishThreadEj' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::Lock() -->
          <function-decl name='Lock' mangled-name='_ZN11__sanitizer14ThreadRegistry4LockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::ThreadRegistry::Unlock() -->
          <function-decl name='Unlock' mangled-name='_ZN11__sanitizer14ThreadRegistry6UnlockEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::ThreadContextBase* __sanitizer::ThreadRegistry::GetThreadLocked(__sanitizer::u32) -->
          <function-decl name='GetThreadLocked' mangled-name='_ZN11__sanitizer14ThreadRegistry15GetThreadLockedEj' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_thread_registry.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- __sanitizer::ThreadContextBase* -->
            <return type-id='f8b9299e'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- __sanitizer::ThreadContextBase* (__sanitizer::u32) -->
    <function-type size-in-bits='64' id='51551141'>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9'/>
      <!-- __sanitizer::ThreadContextBase* -->
      <return type-id='f8b9299e'/>
    </function-type>
    <!-- bool (__sanitizer::ThreadContextBase*, void*) -->
    <function-type size-in-bits='64' id='9d6566fd'>
      <!-- parameter of type '__sanitizer::ThreadContextBase*' -->
      <parameter type-id='f8b9299e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- bool -->
      <return type-id='c894953d'/>
    </function-type>
    <!-- void (__sanitizer::ThreadContextBase*, void*) -->
    <function-type size-in-bits='64' id='be56e60b'>
      <!-- parameter of type '__sanitizer::ThreadContextBase*' -->
      <parameter type-id='f8b9299e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_clock.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- long long unsigned int[16384] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='1048576' id='9c456027'>
      <!-- <anonymous range>[16384] -->
      <subrange length='16384' type-id='4c87fef4' id='b2964699'/>
    </array-type-def>
    <!-- __tsan::SyncClock* -->
    <pointer-type-def type-id='66fb3efc' size-in-bits='64' id='c7866b8a'/>
    <!-- __tsan::ThreadClock* -->
    <pointer-type-def type-id='68a6b299' size-in-bits='64' id='ca9ee4a1'/>
    <!-- __tsan::Vector<long long unsigned int>* -->
    <pointer-type-def type-id='fef8b83a' size-in-bits='64' id='cd764a78'/>
    <!-- const __tsan::MBlockType -->
    <qualified-type-def type-id='3e828db8' const='yes' id='40f6778c'/>
    <!-- const __tsan::SyncClock -->
    <qualified-type-def type-id='66fb3efc' const='yes' id='8d0c7a03'/>
    <!-- const __tsan::SyncClock* -->
    <pointer-type-def type-id='8d0c7a03' size-in-bits='64' id='33a44e8b'/>
    <!-- const __tsan::ThreadClock -->
    <qualified-type-def type-id='68a6b299' const='yes' id='21cbf17a'/>
    <!-- const __tsan::ThreadClock* -->
    <pointer-type-def type-id='21cbf17a' size-in-bits='64' id='840ce0f0'/>
    <!-- const __tsan::Vector<long long unsigned int> -->
    <qualified-type-def type-id='fef8b83a' const='yes' id='47c4f707'/>
    <!-- const __tsan::Vector<long long unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='47c4f707' size-in-bits='64' id='1c1108f3'/>
    <!-- const __tsan::Vector<long long unsigned int>* -->
    <pointer-type-def type-id='47c4f707' size-in-bits='64' id='28111bd7'/>
    <!-- const long long unsigned int -->
    <qualified-type-def type-id='3a47d82b' const='yes' id='340461fe'/>
    <!-- const long long unsigned int& -->
    <reference-type-def kind='lvalue' type-id='340461fe' size-in-bits='64' id='bae60708'/>
    <!-- long long unsigned int& -->
    <reference-type-def kind='lvalue' type-id='3a47d82b' size-in-bits='64' id='cc191c77'/>
    <!-- long long unsigned int* -->
    <pointer-type-def type-id='3a47d82b' size-in-bits='64' id='c0190993'/>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- class __tsan::SyncClock -->
      <class-decl name='SyncClock' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='20' column='1' id='66fb3efc'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::Vector<long long unsigned int> __tsan::SyncClock::clk_ -->
          <var-decl name='clk_' type-id='fef8b83a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='33' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncClock::SyncClock() -->
          <function-decl name='SyncClock' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='22' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncClock::SyncClock() -->
          <function-decl name='SyncClock' mangled-name='_ZN6__tsan9SyncClockC2Ev' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='22' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::SyncClock::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN6__tsan9SyncClock5ResetEv' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::ThreadClock -->
      <class-decl name='ThreadClock' size-in-bits='1048640' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='38' column='1' id='68a6b299'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::ThreadClock::nclk_ -->
          <var-decl name='nclk_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='72' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- long long unsigned int __tsan::ThreadClock::clk_[16384] -->
          <var-decl name='clk_' type-id='9c456027' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='73' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadClock::ThreadClock() -->
          <function-decl name='ThreadClock' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadClock*' -->
            <parameter type-id='ca9ee4a1' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadClock::ThreadClock() -->
          <function-decl name='ThreadClock' mangled-name='_ZN6__tsan11ThreadClockC2Ev' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadClock*' -->
            <parameter type-id='ca9ee4a1' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ThreadClock::acquire(const __tsan::SyncClock*) -->
          <function-decl name='acquire' mangled-name='_ZN6__tsan11ThreadClock7acquireEPKNS_9SyncClockE' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadClock*' -->
            <parameter type-id='ca9ee4a1' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::SyncClock*' -->
            <parameter type-id='33a44e8b'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void __tsan::ThreadClock::release(__tsan::SyncClock*) -->
          <function-decl name='release' mangled-name='_ZNK6__tsan11ThreadClock7releaseEPNS_9SyncClockE' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::ThreadClock*' -->
            <parameter type-id='840ce0f0' is-artificial='yes'/>
            <!-- parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void __tsan::ThreadClock::ReleaseStore(__tsan::SyncClock*) -->
          <function-decl name='ReleaseStore' mangled-name='_ZNK6__tsan11ThreadClock12ReleaseStoreEPNS_9SyncClockE' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::ThreadClock*' -->
            <parameter type-id='840ce0f0' is-artificial='yes'/>
            <!-- parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ThreadClock::acq_rel(__tsan::SyncClock*) -->
          <function-decl name='acq_rel' mangled-name='_ZN6__tsan11ThreadClock7acq_relEPNS_9SyncClockE' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadClock*' -->
            <parameter type-id='ca9ee4a1' is-artificial='yes'/>
            <!-- parameter of type '__tsan::SyncClock*' -->
            <parameter type-id='c7866b8a'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::ThreadClock::get(unsigned int) -->
          <function-decl name='get' mangled-name='_ZNK6__tsan11ThreadClock3getEj' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::ThreadClock*' -->
            <parameter type-id='840ce0f0' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='f0981eeb'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ThreadClock::set(unsigned int, __sanitizer::u64) -->
          <function-decl name='set' mangled-name='_ZN6__tsan11ThreadClock3setEjy' filepath='../../.././libsanitizer/tsan/tsan_clock.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadClock*' -->
            <parameter type-id='ca9ee4a1' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='f0981eeb'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __tsan::MBlockType -->
      <enum-decl name='MBlockType' filepath='../../.././libsanitizer/tsan/tsan_mman.h' line='41' column='1' id='3e828db8'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='MBlockScopedBuf' value='0'/>
        <enumerator name='MBlockString' value='1'/>
        <enumerator name='MBlockStackTrace' value='2'/>
        <enumerator name='MBlockShadowStack' value='3'/>
        <enumerator name='MBlockSync' value='4'/>
        <enumerator name='MBlockClock' value='5'/>
        <enumerator name='MBlockThreadContex' value='6'/>
        <enumerator name='MBlockDeadInfo' value='7'/>
        <enumerator name='MBlockRacyStacks' value='8'/>
        <enumerator name='MBlockRacyAddresses' value='9'/>
        <enumerator name='MBlockAtExit' value='10'/>
        <enumerator name='MBlockFlag' value='11'/>
        <enumerator name='MBlockReport' value='12'/>
        <enumerator name='MBlockReportMop' value='13'/>
        <enumerator name='MBlockReportThread' value='14'/>
        <enumerator name='MBlockReportMutex' value='15'/>
        <enumerator name='MBlockReportLoc' value='16'/>
        <enumerator name='MBlockReportStack' value='17'/>
        <enumerator name='MBlockSuppression' value='18'/>
        <enumerator name='MBlockExpectRace' value='19'/>
        <enumerator name='MBlockSignal' value='20'/>
        <enumerator name='MBlockFD' value='21'/>
        <enumerator name='MBlockJmpBuf' value='22'/>
        <enumerator name='MBlockTypeCount' value='23'/>
      </enum-decl>
      <!-- class __tsan::Vector<long long unsigned int> -->
      <class-decl name='Vector&lt;long long unsigned int&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='fef8b83a'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<long long unsigned int>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- long long unsigned int* __tsan::Vector<long long unsigned int>::begin_ -->
          <var-decl name='begin_' type-id='c0190993' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- long long unsigned int* __tsan::Vector<long long unsigned int>::end_ -->
          <var-decl name='end_' type-id='c0190993' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- long long unsigned int* __tsan::Vector<long long unsigned int>::last_ -->
          <var-decl name='last_' type-id='c0190993' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<long long unsigned int>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<long long unsigned int>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<long long unsigned int>::Vector(const __tsan::Vector<long long unsigned int>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<long long unsigned int>&' -->
            <parameter type-id='1c1108f3'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<long long unsigned int>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIyE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='28111bd7' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const long long unsigned int& __tsan::Vector<long long unsigned int>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIyEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='28111bd7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const long long unsigned int& -->
            <return type-id='bae60708'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- long long unsigned int& __tsan::Vector<long long unsigned int>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorIyEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- long long unsigned int& -->
            <return type-id='cc191c77'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Vector<long long unsigned int>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN6__tsan6VectorIyE6ResizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<long long unsigned int>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIyE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Vector<long long unsigned int>::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN6__tsan6VectorIyE5ResetEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<long long unsigned int>*' -->
            <parameter type-id='cd764a78' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- unsigned long int __tsan::max<long unsigned int>(unsigned long int, unsigned long int) -->
      <function-decl name='max&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- unsigned long int -->
        <return type-id='7359adad'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_fd.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- PerClass[53] -->
    <array-type-def dimensions='1' type-id='c82333ed' size-in-bits='875136' id='5f89f7f5'>
      <!-- <anonymous range>[53] -->
      <subrange length='53' type-id='4c87fef4' id='3c1a9f65'/>
    </array-type-def>
    <!-- MD5Hash[2] -->
    <array-type-def dimensions='1' type-id='f71373fb' size-in-bits='256' id='6e7b8669'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='4c87fef4' id='52efc4ef'/>
    </array-type-def>
    <!-- Desc[16] -->
    <array-type-def dimensions='1' type-id='a4c3f541' size-in-bits='3072' id='67a1c93c'>
      <!-- <anonymous range>[16] -->
      <subrange length='16' type-id='4c87fef4' id='848d0938'/>
    </array-type-def>
    <!-- Part[1009] -->
    <array-type-def dimensions='1' type-id='bc6744d8' size-in-bits='516608' id='8c5a5e52'>
      <!-- <anonymous range>[1009] -->
      <subrange length='1009' type-id='4c87fef4' id='6050e9b7'/>
    </array-type-def>
    <!-- char[48] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='384' id='36d7f119'>
      <!-- <anonymous range>[48] -->
      <subrange length='48' type-id='4c87fef4' id='8f6d2a81'/>
    </array-type-def>
    <!-- long long unsigned int[11] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='704' id='fc21ef21'>
      <!-- <anonymous range>[11] -->
      <subrange length='11' type-id='4c87fef4' id='847bc017'/>
    </array-type-def>
    <!-- long long unsigned int[23] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='1472' id='69f66d76'>
      <!-- <anonymous range>[23] -->
      <subrange length='23' type-id='4c87fef4' id='fdd0f594'/>
    </array-type-def>
    <!-- long long unsigned int[2] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='128' id='652f1081'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='4c87fef4' id='52efc4ef'/>
    </array-type-def>
    <!-- long long unsigned int[438] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='28032' id='e7f18036'>
      <!-- <anonymous range>[438] -->
      <subrange length='438' type-id='4c87fef4' id='9ff6f63c'/>
    </array-type-def>
    <!-- unsigned int[16] -->
    <array-type-def dimensions='1' type-id='f0981eeb' size-in-bits='512' id='2bc779e6'>
      <!-- <anonymous range>[16] -->
      <subrange length='16' type-id='4c87fef4' id='848d0938'/>
    </array-type-def>
    <!-- void*[256] -->
    <array-type-def dimensions='1' type-id='eaa32e2f' size-in-bits='16384' id='a07f0df4'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='4c87fef4' id='36e5b9fa'/>
    </array-type-def>
    <!-- __sanitizer::InternalMmapVector<__tsan::FiredSuppression>* -->
    <pointer-type-def type-id='5a486870' size-in-bits='64' id='00293036'/>
    <!-- __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>* -->
    <pointer-type-def type-id='43e4dd3a' size-in-bits='64' id='717d9318'/>
    <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>* -->
    <pointer-type-def type-id='ba33a300' size-in-bits='64' id='3e651756'/>
    <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache* -->
    <pointer-type-def type-id='ff815c62' size-in-bits='64' id='c6257489'/>
    <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch* -->
    <pointer-type-def type-id='06c97371' size-in-bits='64' id='7b8bfd22'/>
    <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo* -->
    <pointer-type-def type-id='72f2e8cc' size-in-bits='64' id='60606d4a'/>
    <!-- __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >* -->
    <pointer-type-def type-id='e03e1398' size-in-bits='64' id='c7b3dcbe'/>
    <!-- __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch* -->
    <pointer-type-def type-id='b56a16b7' size-in-bits='64' id='124997ef'/>
    <!-- __sanitizer::u32* -->
    <pointer-type-def type-id='3ae5bbe9' size-in-bits='64' id='778c6eda'/>
    <!-- __tsan::Context* -->
    <pointer-type-def type-id='da404c64' size-in-bits='64' id='9e112e92'/>
    <!-- __tsan::DeadlockDetector* -->
    <pointer-type-def type-id='192d10ee' size-in-bits='64' id='980d86f4'/>
    <!-- __tsan::FastState* -->
    <pointer-type-def type-id='593d15f8' size-in-bits='64' id='37dacb2e'/>
    <!-- __tsan::FiredSuppression& -->
    <reference-type-def kind='lvalue' type-id='3ea166ce' size-in-bits='64' id='fd71b1b0'/>
    <!-- __tsan::FiredSuppression* -->
    <pointer-type-def type-id='3ea166ce' size-in-bits='64' id='0971c494'/>
    <!-- __tsan::Flags* -->
    <pointer-type-def type-id='920394d4' size-in-bits='64' id='fd2507e2'/>
    <!-- __tsan::IgnoreSet* -->
    <pointer-type-def type-id='d004ffe9' size-in-bits='64' id='f7d56a41'/>
    <!-- __tsan::JmpBuf& -->
    <reference-type-def kind='lvalue' type-id='ae12f925' size-in-bits='64' id='89cae811'/>
    <!-- __tsan::JmpBuf* -->
    <pointer-type-def type-id='ae12f925' size-in-bits='64' id='85cae1c5'/>
    <!-- __tsan::Mutex* -->
    <pointer-type-def type-id='e24e4b3c' size-in-bits='64' id='ef6ac0da'/>
    <!-- __tsan::MutexSet* -->
    <pointer-type-def type-id='29ac5634' size-in-bits='64' id='82ebfa22'/>
    <!-- __tsan::RacyAddress& -->
    <reference-type-def kind='lvalue' type-id='a8924794' size-in-bits='64' id='3000ac8e'/>
    <!-- __tsan::RacyAddress* -->
    <pointer-type-def type-id='a8924794' size-in-bits='64' id='2c00a642'/>
    <!-- __tsan::RacyStacks& -->
    <reference-type-def kind='lvalue' type-id='d02ac4fd' size-in-bits='64' id='ec43a639'/>
    <!-- __tsan::RacyStacks* -->
    <pointer-type-def type-id='d02ac4fd' size-in-bits='64' id='f843b91d'/>
    <!-- __tsan::SignalContext* -->
    <pointer-type-def type-id='27837968' size-in-bits='64' id='76f0aa3e'/>
    <!-- __tsan::SyncTab* -->
    <pointer-type-def type-id='2d5691e1' size-in-bits='64' id='956739a9'/>
    <!-- __tsan::SyncTab::Part* -->
    <pointer-type-def type-id='bc6744d8' size-in-bits='64' id='8092adce'/>
    <!-- __tsan::SyncVar* -->
    <pointer-type-def type-id='3a4cd32f' size-in-bits='64' id='5cc51217'/>
    <!-- __tsan::SyncVar*& -->
    <reference-type-def kind='lvalue' type-id='5cc51217' size-in-bits='64' id='3b3ba323'/>
    <!-- __tsan::ThreadContext* -->
    <pointer-type-def type-id='6b5da130' size-in-bits='64' id='a1704f66'/>
    <!-- __tsan::ThreadState* -->
    <pointer-type-def type-id='99ff6b6a' size-in-bits='64' id='8111c228'/>
    <!-- __tsan::Vector<__tsan::JmpBuf>* -->
    <pointer-type-def type-id='e9df2984' size-in-bits='64' id='f1ba7fd2'/>
    <!-- __tsan::Vector<__tsan::RacyAddress>* -->
    <pointer-type-def type-id='656a63fd' size-in-bits='64' id='908aa4fd'/>
    <!-- __tsan::Vector<__tsan::RacyStacks>* -->
    <pointer-type-def type-id='e3a70d84' size-in-bits='64' id='c5345512'/>
    <!-- const __sanitizer::InternalMmapVector<__tsan::FiredSuppression> -->
    <qualified-type-def type-id='5a486870' const='yes' id='4aef1473'/>
    <!-- const __sanitizer::InternalMmapVector<__tsan::FiredSuppression>& -->
    <reference-type-def kind='lvalue' type-id='4aef1473' size-in-bits='64' id='4b5d01cf'/>
    <!-- const __sanitizer::InternalMmapVector<__tsan::FiredSuppression>* -->
    <pointer-type-def type-id='4aef1473' size-in-bits='64' id='4f5d081b'/>
    <!-- const __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch> -->
    <qualified-type-def type-id='43e4dd3a' const='yes' id='a9939009'/>
    <!-- const __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>* -->
    <pointer-type-def type-id='a9939009' size-in-bits='64' id='164be719'/>
    <!-- const __sanitizer::u64 -->
    <qualified-type-def type-id='ceed60aa' const='yes' id='b3400d5a'/>
    <!-- const __tsan::FastState -->
    <qualified-type-def type-id='593d15f8' const='yes' id='f31faca7'/>
    <!-- const __tsan::FastState* -->
    <pointer-type-def type-id='f31faca7' size-in-bits='64' id='47dca1f7'/>
    <!-- const __tsan::FiredSuppression -->
    <qualified-type-def type-id='3ea166ce' const='yes' id='3258ed63'/>
    <!-- const __tsan::FiredSuppression& -->
    <reference-type-def kind='lvalue' type-id='3258ed63' size-in-bits='64' id='86fd839f'/>
    <!-- const __tsan::FiredSuppression* -->
    <pointer-type-def type-id='3258ed63' size-in-bits='64' id='8afd89eb'/>
    <!-- const __tsan::IgnoreSet -->
    <qualified-type-def type-id='d004ffe9' const='yes' id='953a921e'/>
    <!-- const __tsan::IgnoreSet* -->
    <pointer-type-def type-id='953a921e' size-in-bits='64' id='1f3427dc'/>
    <!-- const __tsan::JmpBuf -->
    <qualified-type-def type-id='ae12f925' const='yes' id='b61a2880'/>
    <!-- const __tsan::JmpBuf& -->
    <reference-type-def kind='lvalue' type-id='b61a2880' size-in-bits='64' id='512dfd52'/>
    <!-- const __tsan::MD5Hash -->
    <qualified-type-def type-id='f71373fb' const='yes' id='a1776f28'/>
    <!-- const __tsan::MD5Hash& -->
    <reference-type-def kind='lvalue' type-id='a1776f28' size-in-bits='64' id='3d03d30a'/>
    <!-- const __tsan::MD5Hash* -->
    <pointer-type-def type-id='a1776f28' size-in-bits='64' id='3103c026'/>
    <!-- const __tsan::Mutex -->
    <qualified-type-def type-id='e24e4b3c' const='yes' id='b25272df'/>
    <!-- const __tsan::Mutex& -->
    <reference-type-def kind='lvalue' type-id='b25272df' size-in-bits='64' id='b0cafdfb'/>
    <!-- const __tsan::MutexSet -->
    <qualified-type-def type-id='29ac5634' const='yes' id='5712a0a5'/>
    <!-- const __tsan::MutexSet* -->
    <pointer-type-def type-id='5712a0a5' size-in-bits='64' id='a152c11d'/>
    <!-- const __tsan::RacyAddress -->
    <qualified-type-def type-id='a8924794' const='yes' id='57928aa3'/>
    <!-- const __tsan::RacyAddress& -->
    <reference-type-def kind='lvalue' type-id='57928aa3' size-in-bits='64' id='60b00f5f'/>
    <!-- const __tsan::RacyStacks -->
    <qualified-type-def type-id='d02ac4fd' const='yes' id='7218e4d4'/>
    <!-- const __tsan::RacyStacks& -->
    <reference-type-def kind='lvalue' type-id='7218e4d4' size-in-bits='64' id='8f3068f6'/>
    <!-- const __tsan::RacyStacks* -->
    <pointer-type-def type-id='7218e4d4' size-in-bits='64' id='9b307bda'/>
    <!-- const __tsan::SyncTab -->
    <qualified-type-def type-id='2d5691e1' const='yes' id='f0ac126e'/>
    <!-- const __tsan::SyncTab& -->
    <reference-type-def kind='lvalue' type-id='f0ac126e' size-in-bits='64' id='26e0c758'/>
    <!-- const __tsan::SyncVar -->
    <qualified-type-def type-id='3a4cd32f' const='yes' id='ff7d58fc'/>
    <!-- const __tsan::SyncVar* -->
    <pointer-type-def type-id='ff7d58fc' size-in-bits='64' id='0852d8e2'/>
    <!-- const __tsan::Vector<__tsan::JmpBuf> -->
    <qualified-type-def type-id='e9df2984' const='yes' id='13a1c861'/>
    <!-- const __tsan::Vector<__tsan::JmpBuf>& -->
    <reference-type-def kind='lvalue' type-id='13a1c861' size-in-bits='64' id='2eae47c5'/>
    <!-- const __tsan::Vector<__tsan::JmpBuf>* -->
    <pointer-type-def type-id='13a1c861' size-in-bits='64' id='32ae4e11'/>
    <!-- const __tsan::Vector<__tsan::RacyAddress> -->
    <qualified-type-def type-id='656a63fd' const='yes' id='a61b967e'/>
    <!-- const __tsan::Vector<__tsan::RacyAddress>& -->
    <reference-type-def kind='lvalue' type-id='a61b967e' size-in-bits='64' id='d56dac88'/>
    <!-- const __tsan::Vector<__tsan::RacyAddress>* -->
    <pointer-type-def type-id='a61b967e' size-in-bits='64' id='d16da63c'/>
    <!-- const __tsan::Vector<__tsan::RacyStacks> -->
    <qualified-type-def type-id='e3a70d84' const='yes' id='65ea58d9'/>
    <!-- const __tsan::Vector<__tsan::RacyStacks>& -->
    <reference-type-def kind='lvalue' type-id='65ea58d9' size-in-bits='64' id='6eea196d'/>
    <!-- const __tsan::Vector<__tsan::RacyStacks>* -->
    <pointer-type-def type-id='65ea58d9' size-in-bits='64' id='62ea0689'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::SizeClassMap<17ul, 128ul, 16ul> -->
      <class-decl name='SizeClassMap&lt;17ul, 128ul, 16ul&gt;' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='89' column='1' id='3ac8ecb6'>
        <member-type access='public'>
          <!-- struct __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch -->
          <class-decl name='TransferBatch' size-in-bits='8320' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='103' column='1' id='b56a16b7'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch* __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch::next -->
              <var-decl name='next' type-id='124997ef' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='104' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch::count -->
              <var-decl name='count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='105' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- void* __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch::batch[128] -->
              <var-decl name='batch' type-id='47dd7ec8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='106' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMinSizeLog -->
          <var-decl name='kMinSizeLog' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='90' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMidSizeLog -->
          <var-decl name='kMidSizeLog' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='91' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMinSize -->
          <var-decl name='kMinSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='92' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMidSize -->
          <var-decl name='kMidSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='93' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMidClass -->
          <var-decl name='kMidClass' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='94' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::S -->
          <var-decl name='S' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='95' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::M -->
          <var-decl name='M' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='96' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMaxNumCached -->
          <var-decl name='kMaxNumCached' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='99' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kMaxSize -->
          <var-decl name='kMaxSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='109' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='110' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::kNumClassesRounded -->
          <var-decl name='kNumClassesRounded' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='113' column='1'/>
        </data-member>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::Size() -->
          <function-decl name='Size' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm128ELm16EE4SizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::ClassID() -->
          <function-decl name='ClassID' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm128ELm16EE7ClassIDEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::MaxCached() -->
          <function-decl name='MaxCached' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm128ELm16EE9MaxCachedEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::SizeClassRequiresSeparateTransferBatch() -->
          <function-decl name='SizeClassRequiresSeparateTransferBatch' mangled-name='_ZN11__sanitizer12SizeClassMapILm17ELm128ELm16EE38SizeClassRequiresSeparateTransferBatchEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> -->
      <class-decl name='SizeClassAllocator64&lt;137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap&lt;17ul, 128ul, 16ul&gt;, __tsan::MapUnmapCallback&gt;' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='305' column='1' id='ba33a300'>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch -->
          <typedef-decl name='Batch' type-id='b56a16b7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='307' column='1' id='06c97371'/>
        </member-type>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> > __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache -->
          <typedef-decl name='AllocatorCache' type-id='e03e1398' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='310' column='1' id='ff815c62'/>
        </member-type>
        <member-type access='private'>
          <!-- struct __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo -->
          <class-decl name='RegionInfo' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='474' column='1' id='72f2e8cc'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::BlockingMutex __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::mutex -->
              <var-decl name='mutex' type-id='cb1fb5cc' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='475' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='704'>
              <!-- __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch> __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::free_list -->
              <var-decl name='free_list' type-id='43e4dd3a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='476' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='768'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::allocated_user -->
              <var-decl name='allocated_user' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='477' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='832'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::allocated_meta -->
              <var-decl name='allocated_meta' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='478' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='896'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::mapped_user -->
              <var-decl name='mapped_user' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='479' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='960'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::mapped_meta -->
              <var-decl name='mapped_meta' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='480' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='1024'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::n_allocated -->
              <var-decl name='n_allocated' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='481' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='1088'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo::n_freed -->
              <var-decl name='n_freed' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='481' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='457' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kNumClassesRounded -->
          <var-decl name='kNumClassesRounded' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='458' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kRegionSize -->
          <var-decl name='kRegionSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='461' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kSpaceEnd -->
          <var-decl name='kSpaceEnd' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='462' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kPopulateSize -->
          <var-decl name='kPopulateSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='468' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kUserMapSize -->
          <var-decl name='kUserMapSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='470' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::kMetaMapSize -->
          <var-decl name='kMetaMapSize' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='472' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::MapWithCallback(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='MapWithCallback' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE15MapWithCallbackEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='312' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo* __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::GetRegionInfo(__sanitizer::uptr) -->
          <function-decl name='GetRegionInfo' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE13GetRegionInfoEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='490' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo* -->
            <return type-id='60606d4a'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::PrintStats() -->
          <function-decl name='PrintStats' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE10PrintStatsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='401' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::ClassID(__sanitizer::uptr) -->
          <function-decl name='ClassID' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE7ClassIDEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::GetSizeClass() -->
          <function-decl name='GetSizeClass' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE12GetSizeClassEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='355' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::GetChunkIdx(__sanitizer::uptr) -->
          <function-decl name='GetChunkIdx' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE11GetChunkIdxEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='496' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::GetMetaData(void*) -->
          <function-decl name='GetMetaData' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE11GetMetaDataEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='381' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::GetBlockBegin(void*) -->
          <function-decl name='GetBlockBegin' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE13GetBlockBeginEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='359' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::PointerIsMine() -->
          <function-decl name='PointerIsMine' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE13PointerIsMineEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='351' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::DeallocateBatch(__sanitizer::AllocatorStats*, __sanitizer::uptr, __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch*) -->
          <function-decl name='DeallocateBatch' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='344' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch*' -->
            <parameter type-id='7b8bfd22'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::CanAllocate(__sanitizer::uptr) -->
          <function-decl name='CanAllocate' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE11CanAllocateEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='328' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='private' static='yes'>
          <!-- __sanitizer::uptr __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AdditionalSize() -->
          <function-decl name='AdditionalSize' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE14AdditionalSizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='485' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch* __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::PopulateFreeList(__sanitizer::AllocatorStats*, __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache*, __sanitizer::uptr, __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo*) -->
          <function-decl name='PopulateFreeList' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEmPNS5_10RegionInfoE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='505' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache*' -->
            <parameter type-id='c6257489'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::RegionInfo*' -->
            <parameter type-id='60606d4a'/>
            <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch* -->
            <return type-id='7b8bfd22'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch* __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocateBatch(__sanitizer::AllocatorStats*, __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache*, __sanitizer::uptr) -->
          <function-decl name='AllocateBatch' mangled-name='_ZN11__sanitizer20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='333' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::AllocatorCache*' -->
            <parameter type-id='c6257489'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>::Batch* -->
            <return type-id='7b8bfd22'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> > -->
      <class-decl name='SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap&lt;17ul, 128ul, 16ul&gt;, __tsan::MapUnmapCallback&gt; &gt;' size-in-bits='875520' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='889' column='1' id='e03e1398'>
        <member-type access='public'>
          <!-- typedef __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Batch -->
          <typedef-decl name='Batch' type-id='b56a16b7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='941' column='1' id='84895cbd'/>
        </member-type>
        <member-type access='public'>
          <!-- struct __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::PerClass -->
          <class-decl name='PerClass' size-in-bits='16512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='942' column='1' id='c82333ed'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::PerClass::count -->
              <var-decl name='count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='943' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::PerClass::max_count -->
              <var-decl name='max_count' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='944' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- void* __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::PerClass::batch[256] -->
              <var-decl name='batch' type-id='a07f0df4' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='945' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::kNumClasses -->
          <var-decl name='kNumClasses' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='891' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::PerClass __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::per_class_[53] -->
          <var-decl name='per_class_' type-id='5f89f7f5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='947' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='875136'>
          <!-- __sanitizer::AllocatorStats __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::stats_ -->
          <var-decl name='stats_' type-id='d97dbaba' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='948' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::InitCache() -->
          <function-decl name='InitCache' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE9InitCacheEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='950' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Deallocate(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*, __sanitizer::uptr, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE10DeallocateEPS6_mPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='917' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Allocate(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE8AllocateEPS6_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='905' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Init(__sanitizer::AllocatorGlobalStats*) -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE4InitEPNS_20AllocatorGlobalStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='893' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Refill(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Refill' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE6RefillEPS6_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='959' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Drain(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*, __sanitizer::uptr) -->
          <function-decl name='Drain' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE5DrainEPS6_m' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='971' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Destroy(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*, __sanitizer::AllocatorGlobalStats*) -->
          <function-decl name='Destroy' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE7DestroyEPS6_PNS_20AllocatorGlobalStatsE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='899' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- parameter of type '__sanitizer::AllocatorGlobalStats*' -->
            <parameter type-id='962983ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >::Drain(__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*) -->
          <function-decl name='Drain' mangled-name='_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEEE5DrainEPS6_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='931' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>*' -->
            <parameter type-id='3e651756'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalMmapVector<__tsan::FiredSuppression> -->
      <class-decl name='InternalMmapVector&lt;__tsan::FiredSuppression&gt;' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='320' column='1' id='5a486870'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::FiredSuppression* __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::data_ -->
          <var-decl name='data_' type-id='0971c494' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='382' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::capacity_ -->
          <var-decl name='capacity_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='383' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='384' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::InternalMmapVector(__sanitizer::uptr) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='322' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::~InternalMmapVector(int) -->
          <function-decl name='~InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::InternalMmapVector(const __sanitizer::InternalMmapVector<__tsan::FiredSuppression>&) -->
          <function-decl name='InternalMmapVector' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalMmapVector<__tsan::FiredSuppression>&' -->
            <parameter type-id='4b5d01cf'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::size() -->
          <function-decl name='size' mangled-name='_ZNK11__sanitizer18InternalMmapVectorIN6__tsan16FiredSuppressionEE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='4f5d081b' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::FiredSuppression& __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer18InternalMmapVectorIN6__tsan16FiredSuppressionEEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='330' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::FiredSuppression& -->
            <return type-id='fd71b1b0'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::Resize(__sanitizer::uptr) -->
          <function-decl name='Resize' mangled-name='_ZN11__sanitizer18InternalMmapVectorIN6__tsan16FiredSuppressionEE6ResizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='367' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::InternalMmapVector<__tsan::FiredSuppression>::push_back(const __tsan::FiredSuppression&) -->
          <function-decl name='push_back' mangled-name='_ZN11__sanitizer18InternalMmapVectorIN6__tsan16FiredSuppressionEE9push_backERKS2_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='338' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalMmapVector<__tsan::FiredSuppression>*' -->
            <parameter type-id='00293036' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::FiredSuppression&' -->
            <parameter type-id='86fd839f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch> -->
      <class-decl name='LFStack&lt;__sanitizer::SizeClassMap&lt;17ul, 128ul, 16ul&gt;::TransferBatch&gt;' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='25' column='1' id='43e4dd3a'>
        <data-member access='public' static='yes'>
          <!-- static const int __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::kCounterBits -->
          <var-decl name='kCounterBits' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='62' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::u64 __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::kPtrMask -->
          <var-decl name='kPtrMask' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='63' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::u64 __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::kCounterMask -->
          <var-decl name='kCounterMask' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='64' column='1'/>
        </data-member>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::u64 __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::kCounterInc -->
          <var-decl name='kCounterInc' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='65' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::atomic_uint64_t __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::head_ -->
          <var-decl name='head_' type-id='46b20e41' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='67' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::Push(__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch*) -->
          <function-decl name='Push' mangled-name='_ZN11__sanitizer7LFStackINS_12SizeClassMapILm17ELm128ELm16EE13TransferBatchEE4PushEPS3_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>*' -->
            <parameter type-id='717d9318' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch*' -->
            <parameter type-id='124997ef'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch* __sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>::Pop() -->
          <function-decl name='Pop' mangled-name='_ZN11__sanitizer7LFStackINS_12SizeClassMapILm17ELm128ELm16EE13TransferBatchEE3PopEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_lfstack.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LFStack<__sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch>*' -->
            <parameter type-id='717d9318' is-artificial='yes'/>
            <!-- __sanitizer::SizeClassMap<17ul, 128ul, 16ul>::TransferBatch* -->
            <return type-id='124997ef'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- __sanitizer::atomic_uint64_t::Type __sanitizer::atomic_fetch_add<__sanitizer::atomic_uint64_t>(volatile __sanitizer::atomic_uint64_t*, __sanitizer::atomic_uint64_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_fetch_add&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='3ccaccd3'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint64_t::Type' -->
        <parameter type-id='6805d964'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint64_t::Type -->
        <return type-id='6805d964'/>
      </function-decl>
      <!-- __sanitizer::atomic_uint64_t::Type __sanitizer::atomic_fetch_sub<__sanitizer::atomic_uint64_t>(volatile __sanitizer::atomic_uint64_t*, __sanitizer::atomic_uint64_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_fetch_sub&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='3ccaccd3'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint64_t::Type' -->
        <parameter type-id='6805d964'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uint64_t::Type -->
        <return type-id='6805d964'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::MD5Hash -->
      <class-decl name='MD5Hash' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='147' column='1' id='f71373fb'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- long long unsigned int __tsan::MD5Hash::hash[2] -->
          <var-decl name='hash' type-id='652f1081' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='148' column='1'/>
        </data-member>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::MD5Hash::operator==(const __tsan::MD5Hash&) -->
          <function-decl name='operator==' mangled-name='_ZNK6__tsan7MD5HasheqERKS0_' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='149' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MD5Hash*' -->
            <parameter type-id='3103c026' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::MD5Hash&' -->
            <parameter type-id='3d03d30a'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::Flags -->
      <class-decl name='Flags' size-in-bits='960' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='25' column='1' id='920394d4'>
        <!-- struct __sanitizer::CommonFlags -->
        <base-class access='public' layout-offset-in-bits='0' type-id='b603f416'/>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- bool __tsan::Flags::enable_annotations -->
          <var-decl name='enable_annotations' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='27' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='392'>
          <!-- bool __tsan::Flags::suppress_equal_stacks -->
          <var-decl name='suppress_equal_stacks' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='400'>
          <!-- bool __tsan::Flags::suppress_equal_addresses -->
          <var-decl name='suppress_equal_addresses' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='33' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='408'>
          <!-- bool __tsan::Flags::suppress_java -->
          <var-decl name='suppress_java' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='36' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='416'>
          <!-- bool __tsan::Flags::report_bugs -->
          <var-decl name='report_bugs' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='38' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='424'>
          <!-- bool __tsan::Flags::report_thread_leaks -->
          <var-decl name='report_thread_leaks' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='40' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='432'>
          <!-- bool __tsan::Flags::report_destroy_locked -->
          <var-decl name='report_destroy_locked' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='42' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='440'>
          <!-- bool __tsan::Flags::report_signal_unsafe -->
          <var-decl name='report_signal_unsafe' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='45' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- bool __tsan::Flags::report_atomic_races -->
          <var-decl name='report_atomic_races' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='47' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='456'>
          <!-- bool __tsan::Flags::force_seq_cst_atomics -->
          <var-decl name='force_seq_cst_atomics' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='50' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='512'>
          <!-- const char* __tsan::Flags::suppressions -->
          <var-decl name='suppressions' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='52' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='576'>
          <!-- bool __tsan::Flags::print_suppressions -->
          <var-decl name='print_suppressions' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='54' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='584'>
          <!-- bool __tsan::Flags::print_benign -->
          <var-decl name='print_benign' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='56' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='608'>
          <!-- int __tsan::Flags::exitcode -->
          <var-decl name='exitcode' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='640'>
          <!-- bool __tsan::Flags::halt_on_error -->
          <var-decl name='halt_on_error' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='60' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='672'>
          <!-- int __tsan::Flags::atexit_sleep_ms -->
          <var-decl name='atexit_sleep_ms' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='63' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='704'>
          <!-- const char* __tsan::Flags::profile_memory -->
          <var-decl name='profile_memory' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='65' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='768'>
          <!-- int __tsan::Flags::flush_memory_ms -->
          <var-decl name='flush_memory_ms' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='67' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='800'>
          <!-- int __tsan::Flags::flush_symbolizer_ms -->
          <var-decl name='flush_symbolizer_ms' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='69' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='832'>
          <!-- int __tsan::Flags::memory_limit_mb -->
          <var-decl name='memory_limit_mb' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='72' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='864'>
          <!-- bool __tsan::Flags::stop_on_start -->
          <var-decl name='stop_on_start' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='872'>
          <!-- bool __tsan::Flags::running_on_valgrind -->
          <var-decl name='running_on_valgrind' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='76' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='896'>
          <!-- int __tsan::Flags::history_size -->
          <var-decl name='history_size' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='82' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='928'>
          <!-- int __tsan::Flags::io_sync -->
          <var-decl name='io_sync' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_flags.h' line='87' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __tsan::IgnoreSet -->
      <class-decl name='IgnoreSet' size-in-bits='576' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='19' column='1' id='d004ffe9'>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __tsan::IgnoreSet::kMaxSize -->
          <var-decl name='kMaxSize' type-id='870ffec2' mangled-name='_ZN6__tsan9IgnoreSet8kMaxSizeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='21' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::IgnoreSet::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='30' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- unsigned int __tsan::IgnoreSet::stacks_[16] -->
          <var-decl name='stacks_' type-id='2bc779e6' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='31' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::IgnoreSet::IgnoreSet() -->
          <function-decl name='IgnoreSet' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::IgnoreSet*' -->
            <parameter type-id='f7d56a41' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::IgnoreSet::IgnoreSet() -->
          <function-decl name='IgnoreSet' mangled-name='_ZN6__tsan9IgnoreSetC2Ev' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::IgnoreSet*' -->
            <parameter type-id='f7d56a41' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::IgnoreSet::Add(__sanitizer::u32) -->
          <function-decl name='Add' mangled-name='_ZN6__tsan9IgnoreSet3AddEj' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='24' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::IgnoreSet*' -->
            <parameter type-id='f7d56a41' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::IgnoreSet::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN6__tsan9IgnoreSet5ResetEv' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::IgnoreSet*' -->
            <parameter type-id='f7d56a41' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::IgnoreSet::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan9IgnoreSet4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::IgnoreSet*' -->
            <parameter type-id='1f3427dc' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u32 __tsan::IgnoreSet::At(__sanitizer::uptr) -->
          <function-decl name='At' mangled-name='_ZNK6__tsan9IgnoreSet2AtEm' filepath='../../.././libsanitizer/tsan/tsan_ignoreset.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::IgnoreSet*' -->
            <parameter type-id='1f3427dc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::u32 -->
            <return type-id='3ae5bbe9'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::SignalContext -->
      <class-decl name='SignalContext' size-in-bits='553088' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='121' column='1' id='27837968'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int __tsan::SignalContext::in_blocking_func -->
          <var-decl name='in_blocking_func' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='122' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- int __tsan::SignalContext::int_signal_send -->
          <var-decl name='int_signal_send' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='123' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- int __tsan::SignalContext::pending_signal_count -->
          <var-decl name='pending_signal_count' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='124' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __tsan::SignalDesc __tsan::SignalContext::pending_signals[64] -->
          <var-decl name='pending_signals' type-id='e74fed76' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='125' column='1'/>
        </data-member>
      </class-decl>
      <!-- enum __tsan::MutexType -->
      <enum-decl name='MutexType' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='20' column='1' id='d6ca5583'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='MutexTypeInvalid' value='0'/>
        <enumerator name='MutexTypeTrace' value='1'/>
        <enumerator name='MutexTypeThreads' value='2'/>
        <enumerator name='MutexTypeReport' value='3'/>
        <enumerator name='MutexTypeSyncVar' value='4'/>
        <enumerator name='MutexTypeSyncTab' value='5'/>
        <enumerator name='MutexTypeSlab' value='6'/>
        <enumerator name='MutexTypeAnnotations' value='7'/>
        <enumerator name='MutexTypeAtExit' value='8'/>
        <enumerator name='MutexTypeMBlock' value='9'/>
        <enumerator name='MutexTypeJavaMBlock' value='10'/>
        <enumerator name='MutexTypeCount' value='11'/>
      </enum-decl>
      <!-- class __tsan::Mutex -->
      <class-decl name='Mutex' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='37' column='1' id='e24e4b3c'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::atomic_uintptr_t __tsan::Mutex::state_ -->
          <var-decl name='state_' type-id='48f335b9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='51' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Mutex::Mutex(__tsan::MutexType, __tsan::StatType) -->
          <function-decl name='Mutex' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MutexType' -->
            <parameter type-id='d6ca5583'/>
            <!-- parameter of type 'enum __tsan::StatType' -->
            <parameter type-id='ac6e689a'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Mutex::~Mutex(int) -->
          <function-decl name='~Mutex' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __tsan::Mutex::Mutex(const __tsan::Mutex&) -->
          <function-decl name='Mutex' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Mutex&' -->
            <parameter type-id='b0cafdfb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Mutex::Mutex(__tsan::MutexType, __tsan::StatType) -->
          <function-decl name='Mutex' mangled-name='_ZN6__tsan5MutexC2ENS_9MutexTypeENS_8StatTypeE' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MutexType' -->
            <parameter type-id='d6ca5583'/>
            <!-- parameter of type 'enum __tsan::StatType' -->
            <parameter type-id='ac6e689a'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Mutex::~Mutex(int) -->
          <function-decl name='~Mutex' mangled-name='_ZN6__tsan5MutexD2Ev' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Mutex::Lock() -->
          <function-decl name='Lock' mangled-name='_ZN6__tsan5Mutex4LockEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Mutex::Unlock() -->
          <function-decl name='Unlock' mangled-name='_ZN6__tsan5Mutex6UnlockEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Mutex::ReadLock() -->
          <function-decl name='ReadLock' mangled-name='_ZN6__tsan5Mutex8ReadLockEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Mutex::ReadUnlock() -->
          <function-decl name='ReadUnlock' mangled-name='_ZN6__tsan5Mutex10ReadUnlockEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Mutex::CheckLocked() -->
          <function-decl name='CheckLocked' mangled-name='_ZN6__tsan5Mutex11CheckLockedEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::DeadlockDetector -->
      <class-decl name='DeadlockDetector' size-in-bits='768' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='66' column='1' id='192d10ee'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __tsan::DeadlockDetector::seq_ -->
          <var-decl name='seq_' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='72' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- long long unsigned int __tsan::DeadlockDetector::locked_[11] -->
          <var-decl name='locked_' type-id='fc21ef21' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='73' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::DeadlockDetector::DeadlockDetector() -->
          <function-decl name='DeadlockDetector' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::DeadlockDetector*' -->
            <parameter type-id='980d86f4' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::DeadlockDetector::DeadlockDetector() -->
          <function-decl name='DeadlockDetector' mangled-name='_ZN6__tsan16DeadlockDetectorC2Ev' filepath='../../.././libsanitizer/tsan/tsan_mutex.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::DeadlockDetector*' -->
            <parameter type-id='980d86f4' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::MutexSet -->
      <class-decl name='MutexSet' size-in-bits='3136' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='19' column='1' id='29ac5634'>
        <member-type access='public'>
          <!-- struct __tsan::MutexSet::Desc -->
          <class-decl name='Desc' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='24' column='1' id='a4c3f541'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::u64 __tsan::MutexSet::Desc::id -->
              <var-decl name='id' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='25' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::u64 __tsan::MutexSet::Desc::epoch -->
              <var-decl name='epoch' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='26' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- int __tsan::MutexSet::Desc::count -->
              <var-decl name='count' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='27' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='160'>
              <!-- bool __tsan::MutexSet::Desc::write -->
              <var-decl name='write' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='28' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='public' static='yes'>
          <!-- static const __sanitizer::uptr __tsan::MutexSet::kMaxSize -->
          <var-decl name='kMaxSize' type-id='870ffec2' mangled-name='_ZN6__tsan8MutexSet8kMaxSizeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='23' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::MutexSet::size_ -->
          <var-decl name='size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='41' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::MutexSet::Desc __tsan::MutexSet::descs_[16] -->
          <var-decl name='descs_' type-id='67a1c93c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='42' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::MutexSet::MutexSet() -->
          <function-decl name='MutexSet' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::MutexSet::MutexSet() -->
          <function-decl name='MutexSet' mangled-name='_ZN6__tsan8MutexSetC2Ev' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::MutexSet::RemovePos(__sanitizer::uptr) -->
          <function-decl name='RemovePos' mangled-name='_ZN6__tsan8MutexSet9RemovePosEm' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MutexSet::Add(__sanitizer::u64, bool, __sanitizer::u64) -->
          <function-decl name='Add' mangled-name='_ZN6__tsan8MutexSet3AddEyby' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MutexSet::Del(__sanitizer::u64, bool) -->
          <function-decl name='Del' mangled-name='_ZN6__tsan8MutexSet3DelEyb' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MutexSet::Remove(__sanitizer::u64) -->
          <function-decl name='Remove' mangled-name='_ZN6__tsan8MutexSet6RemoveEy' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MutexSet*' -->
            <parameter type-id='82ebfa22' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::MutexSet::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan8MutexSet4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MutexSet*' -->
            <parameter type-id='a152c11d' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::MutexSet::Desc __tsan::MutexSet::Get(__sanitizer::uptr) -->
          <function-decl name='Get' mangled-name='_ZNK6__tsan8MutexSet3GetEm' filepath='../../.././libsanitizer/tsan/tsan_mutexset.h' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MutexSet*' -->
            <parameter type-id='a152c11d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- struct __tsan::MutexSet::Desc -->
            <return type-id='a4c3f541'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __tsan::ReportType -->
      <enum-decl name='ReportType' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='19' column='1' id='9a187d02'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='ReportTypeRace' value='0'/>
        <enumerator name='ReportTypeVptrRace' value='1'/>
        <enumerator name='ReportTypeUseAfterFree' value='2'/>
        <enumerator name='ReportTypeThreadLeak' value='3'/>
        <enumerator name='ReportTypeMutexDestroyLocked' value='4'/>
        <enumerator name='ReportTypeSignalUnsafe' value='5'/>
        <enumerator name='ReportTypeErrnoInSignal' value='6'/>
      </enum-decl>
      <!-- typedef __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> > __tsan::AllocatorCache -->
      <typedef-decl name='AllocatorCache' type-id='e03e1398' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='133' column='1' id='c74df0b9'/>
      <!-- class __tsan::FastState -->
      <class-decl name='FastState' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='151' column='1' id='593d15f8'>
        <data-member access='private' static='yes'>
          <!-- static const int __tsan::FastState::kTidShift -->
          <var-decl name='kTidShift' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='218' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const int __tsan::FastState::kClkShift -->
          <var-decl name='kClkShift' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='219' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::FastState::kIgnoreBit -->
          <var-decl name='kIgnoreBit' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='220' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::FastState::kFreedBit -->
          <var-decl name='kFreedBit' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='221' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __tsan::FastState::x_ -->
          <var-decl name='x_' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='222' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::FastState::FastState(__sanitizer::u64, __sanitizer::u64) -->
          <function-decl name='FastState' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::FastState::FastState(__sanitizer::u64) -->
          <function-decl name='FastState' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='161' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::FastState::epoch() -->
          <function-decl name='epoch' mangled-name='_ZNK6__tsan9FastState5epochEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='179' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- int __tsan::FastState::GetHistorySize() -->
          <function-decl name='GetHistorySize' mangled-name='_ZNK6__tsan9FastState14GetHistorySizeEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='201' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- int -->
            <return type-id='95e97e5e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::FastState::IncrementEpoch() -->
          <function-decl name='IncrementEpoch' mangled-name='_ZN6__tsan9FastState14IncrementEpochEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::FastState::GetTracePos() -->
          <function-decl name='GetTracePos' mangled-name='_ZNK6__tsan9FastState11GetTracePosEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='209' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::FastState::tid() -->
          <function-decl name='tid' mangled-name='_ZNK6__tsan9FastState3tidEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::FastState::raw() -->
          <function-decl name='raw' mangled-name='_ZNK6__tsan9FastState3rawEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='165' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::FastState::TidWithIgnore() -->
          <function-decl name='TidWithIgnore' mangled-name='_ZNK6__tsan9FastState13TidWithIgnoreEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='174' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::FastState::ClearHistorySize() -->
          <function-decl name='ClearHistorySize' mangled-name='_ZN6__tsan9FastState16ClearHistorySizeEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='205' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::FastState::SetIgnoreBit() -->
          <function-decl name='SetIgnoreBit' mangled-name='_ZN6__tsan9FastState12SetIgnoreBitEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='191' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::FastState::ClearIgnoreBit() -->
          <function-decl name='ClearIgnoreBit' mangled-name='_ZN6__tsan9FastState14ClearIgnoreBitEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='192' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::FastState::GetIgnoreBit() -->
          <function-decl name='GetIgnoreBit' mangled-name='_ZNK6__tsan9FastState12GetIgnoreBitEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='193' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::FastState*' -->
            <parameter type-id='47dca1f7' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::FastState::SetHistorySize(int) -->
          <function-decl name='SetHistorySize' mangled-name='_ZN6__tsan9FastState14SetHistorySizeEi' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::FastState*' -->
            <parameter type-id='37dacb2e' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::JmpBuf -->
      <class-decl name='JmpBuf' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='390' column='1' id='ae12f925'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::JmpBuf::sp -->
          <var-decl name='sp' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='391' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::JmpBuf::mangled_sp -->
          <var-decl name='mangled_sp' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='392' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr* __tsan::JmpBuf::shadow_stack_pos -->
          <var-decl name='shadow_stack_pos' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='393' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ThreadState -->
      <class-decl name='ThreadState' size-in-bits='3448832' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='397' column='1' id='99ff6b6a'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::FastState __tsan::ThreadState::fast_state -->
          <var-decl name='fast_state' type-id='593d15f8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='398' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::u64 __tsan::ThreadState::fast_synch_epoch -->
          <var-decl name='fast_synch_epoch' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='410' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- int __tsan::ThreadState::ignore_reads_and_writes -->
          <var-decl name='ignore_reads_and_writes' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='414' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- int __tsan::ThreadState::ignore_sync -->
          <var-decl name='ignore_sync' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='415' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __tsan::IgnoreSet __tsan::ThreadState::mop_ignore_set -->
          <var-decl name='mop_ignore_set' type-id='d004ffe9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='418' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='768'>
          <!-- __tsan::IgnoreSet __tsan::ThreadState::sync_ignore_set -->
          <var-decl name='sync_ignore_set' type-id='d004ffe9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='419' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1344'>
          <!-- __sanitizer::uptr* __tsan::ThreadState::shadow_stack -->
          <var-decl name='shadow_stack' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='423' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1408'>
          <!-- __sanitizer::uptr* __tsan::ThreadState::shadow_stack_end -->
          <var-decl name='shadow_stack_end' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='424' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1472'>
          <!-- __sanitizer::uptr* __tsan::ThreadState::shadow_stack_pos -->
          <var-decl name='shadow_stack_pos' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='425' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1536'>
          <!-- __sanitizer::u64* __tsan::ThreadState::racy_shadow_addr -->
          <var-decl name='racy_shadow_addr' type-id='92a71083' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='426' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1600'>
          <!-- long long unsigned int __tsan::ThreadState::racy_state[2] -->
          <var-decl name='racy_state' type-id='652f1081' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='427' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1728'>
          <!-- __tsan::MutexSet __tsan::ThreadState::mset -->
          <var-decl name='mset' type-id='29ac5634' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='428' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='4864'>
          <!-- __tsan::ThreadClock __tsan::ThreadState::clock -->
          <var-decl name='clock' type-id='68a6b299' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='429' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1053504'>
          <!-- __tsan::AllocatorCache __tsan::ThreadState::alloc_cache -->
          <var-decl name='alloc_cache' type-id='c74df0b9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='431' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1929024'>
          <!-- __sanitizer::InternalAllocatorCache __tsan::ThreadState::internal_alloc_cache -->
          <var-decl name='internal_alloc_cache' type-id='1703d8dd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='432' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2370368'>
          <!-- __tsan::Vector<__tsan::JmpBuf> __tsan::ThreadState::jmp_bufs -->
          <var-decl name='jmp_bufs' type-id='e9df2984' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='433' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2370624'>
          <!-- long long unsigned int __tsan::ThreadState::stat[438] -->
          <var-decl name='stat' type-id='e7f18036' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='435' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398656'>
          <!-- const int __tsan::ThreadState::tid -->
          <var-decl name='tid' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='436' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398688'>
          <!-- const int __tsan::ThreadState::unique_id -->
          <var-decl name='unique_id' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='437' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398720'>
          <!-- int __tsan::ThreadState::in_rtl -->
          <var-decl name='in_rtl' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='438' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398752'>
          <!-- bool __tsan::ThreadState::in_symbolizer -->
          <var-decl name='in_symbolizer' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='439' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398760'>
          <!-- bool __tsan::ThreadState::in_ignored_lib -->
          <var-decl name='in_ignored_lib' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='440' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398768'>
          <!-- bool __tsan::ThreadState::is_alive -->
          <var-decl name='is_alive' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='441' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398776'>
          <!-- bool __tsan::ThreadState::is_freeing -->
          <var-decl name='is_freeing' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='442' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398784'>
          <!-- bool __tsan::ThreadState::is_vptr_access -->
          <var-decl name='is_vptr_access' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='443' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398848'>
          <!-- const __sanitizer::uptr __tsan::ThreadState::stk_addr -->
          <var-decl name='stk_addr' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='444' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398912'>
          <!-- const __sanitizer::uptr __tsan::ThreadState::stk_size -->
          <var-decl name='stk_size' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='445' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2398976'>
          <!-- const __sanitizer::uptr __tsan::ThreadState::tls_addr -->
          <var-decl name='tls_addr' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='446' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2399040'>
          <!-- const __sanitizer::uptr __tsan::ThreadState::tls_size -->
          <var-decl name='tls_size' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='447' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2399104'>
          <!-- __tsan::ThreadContext* __tsan::ThreadState::tctx -->
          <var-decl name='tctx' type-id='a1704f66' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='448' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2399168'>
          <!-- __tsan::DeadlockDetector __tsan::ThreadState::deadlock_detector -->
          <var-decl name='deadlock_detector' type-id='192d10ee' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='450' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2399936'>
          <!-- bool __tsan::ThreadState::in_signal_handler -->
          <var-decl name='in_signal_handler' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='452' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2400000'>
          <!-- __tsan::SignalContext* __tsan::ThreadState::signal_ctx -->
          <var-decl name='signal_ctx' type-id='76f0aa3e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='453' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2400064'>
          <!-- __sanitizer::u32 __tsan::ThreadState::last_sleep_stack_id -->
          <var-decl name='last_sleep_stack_id' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='456' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='2400128'>
          <!-- __tsan::ThreadClock __tsan::ThreadState::last_sleep_clock -->
          <var-decl name='last_sleep_clock' type-id='68a6b299' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='457' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='3448768'>
          <!-- int __tsan::ThreadState::nomalloc -->
          <var-decl name='nomalloc' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='462' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadState::ThreadState(__tsan::Context*, int, int, __sanitizer::u64, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='ThreadState' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='464' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228' is-artificial='yes'/>
            <!-- parameter of type '__tsan::Context*' -->
            <parameter type-id='9e112e92'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadState::ThreadState(__tsan::Context*, int, int, __sanitizer::u64, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='ThreadState' mangled-name='_ZN6__tsan11ThreadStateC2EPNS_7ContextEiiymmmm' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='464' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228' is-artificial='yes'/>
            <!-- parameter of type '__tsan::Context*' -->
            <parameter type-id='9e112e92'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::ThreadContext -->
      <class-decl name='ThreadContext' size-in-bits='1536' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='478' column='1' id='6b5da130'>
        <!-- class __sanitizer::ThreadContextBase -->
        <base-class access='public' layout-offset-in-bits='0' type-id='daf5fe68'/>
        <data-member access='public' layout-offset-in-bits='1024'>
          <!-- __tsan::ThreadState* __tsan::ThreadContext::thr -->
          <var-decl name='thr' type-id='8111c228' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='482' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1088'>
          <!-- __sanitizer::u32 __tsan::ThreadContext::creation_stack_id -->
          <var-decl name='creation_stack_id' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='486' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1152'>
          <!-- __tsan::SyncClock __tsan::ThreadContext::sync -->
          <var-decl name='sync' type-id='66fb3efc' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='488' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1408'>
          <!-- __sanitizer::u64 __tsan::ThreadContext::epoch0 -->
          <var-decl name='epoch0' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='492' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1472'>
          <!-- __sanitizer::u64 __tsan::ThreadContext::epoch1 -->
          <var-decl name='epoch1' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='493' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadContext::ThreadContext(int) -->
          <function-decl name='ThreadContext' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ThreadContext::~ThreadContext(int) -->
          <function-decl name='~ThreadContext' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ThreadContext::ThreadContext(int) -->
          <function-decl name='ThreadContext' mangled-name='_ZN6__tsan13ThreadContextC2Ei' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ThreadContext::~ThreadContext(int) -->
          <function-decl name='~ThreadContext' mangled-name='_ZN6__tsan13ThreadContextD2Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='0'>
          <!-- void __tsan::ThreadContext::OnDead() -->
          <function-decl name='OnDead' mangled-name='_ZN6__tsan13ThreadContext6OnDeadEv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='1'>
          <!-- void __tsan::ThreadContext::OnJoined(void*) -->
          <function-decl name='OnJoined' mangled-name='_ZN6__tsan13ThreadContext8OnJoinedEPv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='2'>
          <!-- void __tsan::ThreadContext::OnFinished() -->
          <function-decl name='OnFinished' mangled-name='_ZN6__tsan13ThreadContext10OnFinishedEv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='3'>
          <!-- void __tsan::ThreadContext::OnStarted(void*) -->
          <function-decl name='OnStarted' mangled-name='_ZN6__tsan13ThreadContext9OnStartedEPv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='4'>
          <!-- void __tsan::ThreadContext::OnCreated(void*) -->
          <function-decl name='OnCreated' mangled-name='_ZN6__tsan13ThreadContext9OnCreatedEPv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' vtable-offset='5'>
          <!-- void __tsan::ThreadContext::OnReset() -->
          <function-decl name='OnReset' mangled-name='_ZN6__tsan13ThreadContext7OnResetEv' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ThreadContext*' -->
            <parameter type-id='a1704f66' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::RacyStacks -->
      <class-decl name='RacyStacks' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='504' column='1' id='d02ac4fd'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::MD5Hash __tsan::RacyStacks::hash[2] -->
          <var-decl name='hash' type-id='6e7b8669' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='505' column='1'/>
        </data-member>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::RacyStacks::operator==(const __tsan::RacyStacks&) -->
          <function-decl name='operator==' mangled-name='_ZNK6__tsan10RacyStackseqERKS0_' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='506' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::RacyStacks*' -->
            <parameter type-id='9b307bda' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::RacyStacks&' -->
            <parameter type-id='8f3068f6'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::RacyAddress -->
      <class-decl name='RacyAddress' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='515' column='1' id='a8924794'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::RacyAddress::addr_min -->
          <var-decl name='addr_min' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='516' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::RacyAddress::addr_max -->
          <var-decl name='addr_max' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='517' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::FiredSuppression -->
      <class-decl name='FiredSuppression' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='520' column='1' id='3ea166ce'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ReportType __tsan::FiredSuppression::type -->
          <var-decl name='type' type-id='9a187d02' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='521' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::FiredSuppression::pc -->
          <var-decl name='pc' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='522' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::Suppression* __tsan::FiredSuppression::supp -->
          <var-decl name='supp' type-id='e875cd39' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='523' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::Context -->
      <class-decl name='Context' size-in-bits='549632' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='526' column='1' id='da404c64'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- bool __tsan::Context::initialized -->
          <var-decl name='initialized' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='529' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::SyncTab __tsan::Context::synctab -->
          <var-decl name='synctab' type-id='2d5691e1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='531' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516736'>
          <!-- __tsan::Mutex __tsan::Context::report_mtx -->
          <var-decl name='report_mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='533' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516800'>
          <!-- int __tsan::Context::nreported -->
          <var-decl name='nreported' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='534' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516832'>
          <!-- int __tsan::Context::nmissed_expected -->
          <var-decl name='nmissed_expected' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='535' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516864'>
          <!-- __sanitizer::atomic_uint64_t __tsan::Context::last_symbolize_time_ns -->
          <var-decl name='last_symbolize_time_ns' type-id='46b20e41' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='536' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516928'>
          <!-- __sanitizer::ThreadRegistry* __tsan::Context::thread_registry -->
          <var-decl name='thread_registry' type-id='08beeda9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='538' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='516992'>
          <!-- __tsan::Vector<__tsan::RacyStacks> __tsan::Context::racy_stacks -->
          <var-decl name='racy_stacks' type-id='e3a70d84' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='540' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='517248'>
          <!-- __tsan::Vector<__tsan::RacyAddress> __tsan::Context::racy_addresses -->
          <var-decl name='racy_addresses' type-id='656a63fd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='541' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='517504'>
          <!-- __sanitizer::InternalMmapVector<__tsan::FiredSuppression> __tsan::Context::fired_suppressions -->
          <var-decl name='fired_suppressions' type-id='5a486870' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='543' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='517696'>
          <!-- __tsan::Flags __tsan::Context::flags -->
          <var-decl name='flags' type-id='920394d4' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='545' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='518656'>
          <!-- long long unsigned int __tsan::Context::stat[438] -->
          <var-decl name='stat' type-id='e7f18036' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='547' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='546688'>
          <!-- long long unsigned int __tsan::Context::int_alloc_cnt[23] -->
          <var-decl name='int_alloc_cnt' type-id='69f66d76' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='548' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='548160'>
          <!-- long long unsigned int __tsan::Context::int_alloc_siz[23] -->
          <var-decl name='int_alloc_siz' type-id='69f66d76' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='549' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Context::Context() -->
          <function-decl name='Context' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='527' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Context*' -->
            <parameter type-id='9e112e92' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Context::Context() -->
          <function-decl name='Context' mangled-name='_ZN6__tsan7ContextC2Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='527' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Context*' -->
            <parameter type-id='9e112e92' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __tsan::StatType -->
      <enum-decl name='StatType' filepath='../../.././libsanitizer/tsan/tsan_stat.h' line='17' column='1' id='ac6e689a'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='StatMop' value='0'/>
        <enumerator name='StatMopRead' value='1'/>
        <enumerator name='StatMopWrite' value='2'/>
        <enumerator name='StatMop1' value='3'/>
        <enumerator name='StatMop2' value='4'/>
        <enumerator name='StatMop4' value='5'/>
        <enumerator name='StatMop8' value='6'/>
        <enumerator name='StatMopSame' value='7'/>
        <enumerator name='StatMopRange' value='8'/>
        <enumerator name='StatMopRodata' value='9'/>
        <enumerator name='StatMopRangeRodata' value='10'/>
        <enumerator name='StatShadowProcessed' value='11'/>
        <enumerator name='StatShadowZero' value='12'/>
        <enumerator name='StatShadowNonZero' value='13'/>
        <enumerator name='StatShadowSameSize' value='14'/>
        <enumerator name='StatShadowIntersect' value='15'/>
        <enumerator name='StatShadowNotIntersect' value='16'/>
        <enumerator name='StatShadowSameThread' value='17'/>
        <enumerator name='StatShadowAnotherThread' value='18'/>
        <enumerator name='StatShadowReplace' value='19'/>
        <enumerator name='StatFuncEnter' value='20'/>
        <enumerator name='StatFuncExit' value='21'/>
        <enumerator name='StatEvents' value='22'/>
        <enumerator name='StatThreadCreate' value='23'/>
        <enumerator name='StatThreadFinish' value='24'/>
        <enumerator name='StatThreadReuse' value='25'/>
        <enumerator name='StatThreadMaxTid' value='26'/>
        <enumerator name='StatThreadMaxAlive' value='27'/>
        <enumerator name='StatMutexCreate' value='28'/>
        <enumerator name='StatMutexDestroy' value='29'/>
        <enumerator name='StatMutexLock' value='30'/>
        <enumerator name='StatMutexUnlock' value='31'/>
        <enumerator name='StatMutexRecLock' value='32'/>
        <enumerator name='StatMutexRecUnlock' value='33'/>
        <enumerator name='StatMutexReadLock' value='34'/>
        <enumerator name='StatMutexReadUnlock' value='35'/>
        <enumerator name='StatSyncCreated' value='36'/>
        <enumerator name='StatSyncDestroyed' value='37'/>
        <enumerator name='StatSyncAcquire' value='38'/>
        <enumerator name='StatSyncRelease' value='39'/>
        <enumerator name='StatAtomic' value='40'/>
        <enumerator name='StatAtomicLoad' value='41'/>
        <enumerator name='StatAtomicStore' value='42'/>
        <enumerator name='StatAtomicExchange' value='43'/>
        <enumerator name='StatAtomicFetchAdd' value='44'/>
        <enumerator name='StatAtomicFetchSub' value='45'/>
        <enumerator name='StatAtomicFetchAnd' value='46'/>
        <enumerator name='StatAtomicFetchOr' value='47'/>
        <enumerator name='StatAtomicFetchXor' value='48'/>
        <enumerator name='StatAtomicFetchNand' value='49'/>
        <enumerator name='StatAtomicCAS' value='50'/>
        <enumerator name='StatAtomicFence' value='51'/>
        <enumerator name='StatAtomicRelaxed' value='52'/>
        <enumerator name='StatAtomicConsume' value='53'/>
        <enumerator name='StatAtomicAcquire' value='54'/>
        <enumerator name='StatAtomicRelease' value='55'/>
        <enumerator name='StatAtomicAcq_Rel' value='56'/>
        <enumerator name='StatAtomicSeq_Cst' value='57'/>
        <enumerator name='StatAtomic1' value='58'/>
        <enumerator name='StatAtomic2' value='59'/>
        <enumerator name='StatAtomic4' value='60'/>
        <enumerator name='StatAtomic8' value='61'/>
        <enumerator name='StatAtomic16' value='62'/>
        <enumerator name='StatInterceptor' value='63'/>
        <enumerator name='StatInt_longjmp' value='64'/>
        <enumerator name='StatInt_siglongjmp' value='65'/>
        <enumerator name='StatInt_malloc' value='66'/>
        <enumerator name='StatInt___libc_memalign' value='67'/>
        <enumerator name='StatInt_calloc' value='68'/>
        <enumerator name='StatInt_realloc' value='69'/>
        <enumerator name='StatInt_free' value='70'/>
        <enumerator name='StatInt_cfree' value='71'/>
        <enumerator name='StatInt_malloc_usable_size' value='72'/>
        <enumerator name='StatInt_mmap' value='73'/>
        <enumerator name='StatInt_mmap64' value='74'/>
        <enumerator name='StatInt_munmap' value='75'/>
        <enumerator name='StatInt_memalign' value='76'/>
        <enumerator name='StatInt_valloc' value='77'/>
        <enumerator name='StatInt_pvalloc' value='78'/>
        <enumerator name='StatInt_posix_memalign' value='79'/>
        <enumerator name='StatInt__Znwm' value='80'/>
        <enumerator name='StatInt__ZnwmRKSt9nothrow_t' value='81'/>
        <enumerator name='StatInt__Znam' value='82'/>
        <enumerator name='StatInt__ZnamRKSt9nothrow_t' value='83'/>
        <enumerator name='StatInt__ZdlPv' value='84'/>
        <enumerator name='StatInt__ZdlPvRKSt9nothrow_t' value='85'/>
        <enumerator name='StatInt__ZdaPv' value='86'/>
        <enumerator name='StatInt__ZdaPvRKSt9nothrow_t' value='87'/>
        <enumerator name='StatInt_strlen' value='88'/>
        <enumerator name='StatInt_memset' value='89'/>
        <enumerator name='StatInt_memcpy' value='90'/>
        <enumerator name='StatInt_textdomain' value='91'/>
        <enumerator name='StatInt_strcmp' value='92'/>
        <enumerator name='StatInt_memchr' value='93'/>
        <enumerator name='StatInt_memrchr' value='94'/>
        <enumerator name='StatInt_memmove' value='95'/>
        <enumerator name='StatInt_memcmp' value='96'/>
        <enumerator name='StatInt_strchr' value='97'/>
        <enumerator name='StatInt_strchrnul' value='98'/>
        <enumerator name='StatInt_strrchr' value='99'/>
        <enumerator name='StatInt_strncmp' value='100'/>
        <enumerator name='StatInt_strcpy' value='101'/>
        <enumerator name='StatInt_strncpy' value='102'/>
        <enumerator name='StatInt_strcasecmp' value='103'/>
        <enumerator name='StatInt_strncasecmp' value='104'/>
        <enumerator name='StatInt_strstr' value='105'/>
        <enumerator name='StatInt_strdup' value='106'/>
        <enumerator name='StatInt_atexit' value='107'/>
        <enumerator name='StatInt__exit' value='108'/>
        <enumerator name='StatInt___cxa_guard_acquire' value='109'/>
        <enumerator name='StatInt___cxa_guard_release' value='110'/>
        <enumerator name='StatInt___cxa_guard_abort' value='111'/>
        <enumerator name='StatInt_pthread_create' value='112'/>
        <enumerator name='StatInt_pthread_join' value='113'/>
        <enumerator name='StatInt_pthread_detach' value='114'/>
        <enumerator name='StatInt_pthread_mutex_init' value='115'/>
        <enumerator name='StatInt_pthread_mutex_destroy' value='116'/>
        <enumerator name='StatInt_pthread_mutex_lock' value='117'/>
        <enumerator name='StatInt_pthread_mutex_trylock' value='118'/>
        <enumerator name='StatInt_pthread_mutex_timedlock' value='119'/>
        <enumerator name='StatInt_pthread_mutex_unlock' value='120'/>
        <enumerator name='StatInt_pthread_spin_init' value='121'/>
        <enumerator name='StatInt_pthread_spin_destroy' value='122'/>
        <enumerator name='StatInt_pthread_spin_lock' value='123'/>
        <enumerator name='StatInt_pthread_spin_trylock' value='124'/>
        <enumerator name='StatInt_pthread_spin_unlock' value='125'/>
        <enumerator name='StatInt_pthread_rwlock_init' value='126'/>
        <enumerator name='StatInt_pthread_rwlock_destroy' value='127'/>
        <enumerator name='StatInt_pthread_rwlock_rdlock' value='128'/>
        <enumerator name='StatInt_pthread_rwlock_tryrdlock' value='129'/>
        <enumerator name='StatInt_pthread_rwlock_timedrdlock' value='130'/>
        <enumerator name='StatInt_pthread_rwlock_wrlock' value='131'/>
        <enumerator name='StatInt_pthread_rwlock_trywrlock' value='132'/>
        <enumerator name='StatInt_pthread_rwlock_timedwrlock' value='133'/>
        <enumerator name='StatInt_pthread_rwlock_unlock' value='134'/>
        <enumerator name='StatInt_pthread_cond_init' value='135'/>
        <enumerator name='StatInt_pthread_cond_destroy' value='136'/>
        <enumerator name='StatInt_pthread_cond_signal' value='137'/>
        <enumerator name='StatInt_pthread_cond_broadcast' value='138'/>
        <enumerator name='StatInt_pthread_cond_wait' value='139'/>
        <enumerator name='StatInt_pthread_cond_timedwait' value='140'/>
        <enumerator name='StatInt_pthread_barrier_init' value='141'/>
        <enumerator name='StatInt_pthread_barrier_destroy' value='142'/>
        <enumerator name='StatInt_pthread_barrier_wait' value='143'/>
        <enumerator name='StatInt_pthread_once' value='144'/>
        <enumerator name='StatInt_pthread_getschedparam' value='145'/>
        <enumerator name='StatInt_pthread_setname_np' value='146'/>
        <enumerator name='StatInt_sem_init' value='147'/>
        <enumerator name='StatInt_sem_destroy' value='148'/>
        <enumerator name='StatInt_sem_wait' value='149'/>
        <enumerator name='StatInt_sem_trywait' value='150'/>
        <enumerator name='StatInt_sem_timedwait' value='151'/>
        <enumerator name='StatInt_sem_post' value='152'/>
        <enumerator name='StatInt_sem_getvalue' value='153'/>
        <enumerator name='StatInt_stat' value='154'/>
        <enumerator name='StatInt___xstat' value='155'/>
        <enumerator name='StatInt_stat64' value='156'/>
        <enumerator name='StatInt___xstat64' value='157'/>
        <enumerator name='StatInt_lstat' value='158'/>
        <enumerator name='StatInt___lxstat' value='159'/>
        <enumerator name='StatInt_lstat64' value='160'/>
        <enumerator name='StatInt___lxstat64' value='161'/>
        <enumerator name='StatInt_fstat' value='162'/>
        <enumerator name='StatInt___fxstat' value='163'/>
        <enumerator name='StatInt_fstat64' value='164'/>
        <enumerator name='StatInt___fxstat64' value='165'/>
        <enumerator name='StatInt_open' value='166'/>
        <enumerator name='StatInt_open64' value='167'/>
        <enumerator name='StatInt_creat' value='168'/>
        <enumerator name='StatInt_creat64' value='169'/>
        <enumerator name='StatInt_dup' value='170'/>
        <enumerator name='StatInt_dup2' value='171'/>
        <enumerator name='StatInt_dup3' value='172'/>
        <enumerator name='StatInt_eventfd' value='173'/>
        <enumerator name='StatInt_signalfd' value='174'/>
        <enumerator name='StatInt_inotify_init' value='175'/>
        <enumerator name='StatInt_inotify_init1' value='176'/>
        <enumerator name='StatInt_socket' value='177'/>
        <enumerator name='StatInt_socketpair' value='178'/>
        <enumerator name='StatInt_connect' value='179'/>
        <enumerator name='StatInt_bind' value='180'/>
        <enumerator name='StatInt_listen' value='181'/>
        <enumerator name='StatInt_accept' value='182'/>
        <enumerator name='StatInt_accept4' value='183'/>
        <enumerator name='StatInt_epoll_create' value='184'/>
        <enumerator name='StatInt_epoll_create1' value='185'/>
        <enumerator name='StatInt_close' value='186'/>
        <enumerator name='StatInt___close' value='187'/>
        <enumerator name='StatInt___res_iclose' value='188'/>
        <enumerator name='StatInt_pipe' value='189'/>
        <enumerator name='StatInt_pipe2' value='190'/>
        <enumerator name='StatInt_read' value='191'/>
        <enumerator name='StatInt_prctl' value='192'/>
        <enumerator name='StatInt_pread' value='193'/>
        <enumerator name='StatInt_pread64' value='194'/>
        <enumerator name='StatInt_readv' value='195'/>
        <enumerator name='StatInt_preadv' value='196'/>
        <enumerator name='StatInt_preadv64' value='197'/>
        <enumerator name='StatInt_write' value='198'/>
        <enumerator name='StatInt_pwrite' value='199'/>
        <enumerator name='StatInt_pwrite64' value='200'/>
        <enumerator name='StatInt_writev' value='201'/>
        <enumerator name='StatInt_pwritev' value='202'/>
        <enumerator name='StatInt_pwritev64' value='203'/>
        <enumerator name='StatInt_send' value='204'/>
        <enumerator name='StatInt_sendmsg' value='205'/>
        <enumerator name='StatInt_recv' value='206'/>
        <enumerator name='StatInt_recvmsg' value='207'/>
        <enumerator name='StatInt_unlink' value='208'/>
        <enumerator name='StatInt_fopen' value='209'/>
        <enumerator name='StatInt_freopen' value='210'/>
        <enumerator name='StatInt_fclose' value='211'/>
        <enumerator name='StatInt_fread' value='212'/>
        <enumerator name='StatInt_fwrite' value='213'/>
        <enumerator name='StatInt_fflush' value='214'/>
        <enumerator name='StatInt_abort' value='215'/>
        <enumerator name='StatInt_puts' value='216'/>
        <enumerator name='StatInt_rmdir' value='217'/>
        <enumerator name='StatInt_opendir' value='218'/>
        <enumerator name='StatInt_epoll_ctl' value='219'/>
        <enumerator name='StatInt_epoll_wait' value='220'/>
        <enumerator name='StatInt_poll' value='221'/>
        <enumerator name='StatInt_ppoll' value='222'/>
        <enumerator name='StatInt_sigaction' value='223'/>
        <enumerator name='StatInt_signal' value='224'/>
        <enumerator name='StatInt_sigsuspend' value='225'/>
        <enumerator name='StatInt_raise' value='226'/>
        <enumerator name='StatInt_kill' value='227'/>
        <enumerator name='StatInt_pthread_kill' value='228'/>
        <enumerator name='StatInt_sleep' value='229'/>
        <enumerator name='StatInt_usleep' value='230'/>
        <enumerator name='StatInt_nanosleep' value='231'/>
        <enumerator name='StatInt_gettimeofday' value='232'/>
        <enumerator name='StatInt_fork' value='233'/>
        <enumerator name='StatInt_vscanf' value='234'/>
        <enumerator name='StatInt_vsscanf' value='235'/>
        <enumerator name='StatInt_vfscanf' value='236'/>
        <enumerator name='StatInt_scanf' value='237'/>
        <enumerator name='StatInt_sscanf' value='238'/>
        <enumerator name='StatInt_fscanf' value='239'/>
        <enumerator name='StatInt___isoc99_vscanf' value='240'/>
        <enumerator name='StatInt___isoc99_vsscanf' value='241'/>
        <enumerator name='StatInt___isoc99_vfscanf' value='242'/>
        <enumerator name='StatInt___isoc99_scanf' value='243'/>
        <enumerator name='StatInt___isoc99_sscanf' value='244'/>
        <enumerator name='StatInt___isoc99_fscanf' value='245'/>
        <enumerator name='StatInt_on_exit' value='246'/>
        <enumerator name='StatInt___cxa_atexit' value='247'/>
        <enumerator name='StatInt_localtime' value='248'/>
        <enumerator name='StatInt_localtime_r' value='249'/>
        <enumerator name='StatInt_gmtime' value='250'/>
        <enumerator name='StatInt_gmtime_r' value='251'/>
        <enumerator name='StatInt_ctime' value='252'/>
        <enumerator name='StatInt_ctime_r' value='253'/>
        <enumerator name='StatInt_asctime' value='254'/>
        <enumerator name='StatInt_asctime_r' value='255'/>
        <enumerator name='StatInt_strptime' value='256'/>
        <enumerator name='StatInt_frexp' value='257'/>
        <enumerator name='StatInt_frexpf' value='258'/>
        <enumerator name='StatInt_frexpl' value='259'/>
        <enumerator name='StatInt_getpwnam' value='260'/>
        <enumerator name='StatInt_getpwuid' value='261'/>
        <enumerator name='StatInt_getgrnam' value='262'/>
        <enumerator name='StatInt_getgrgid' value='263'/>
        <enumerator name='StatInt_getpwnam_r' value='264'/>
        <enumerator name='StatInt_getpwuid_r' value='265'/>
        <enumerator name='StatInt_getgrnam_r' value='266'/>
        <enumerator name='StatInt_getgrgid_r' value='267'/>
        <enumerator name='StatInt_clock_getres' value='268'/>
        <enumerator name='StatInt_clock_gettime' value='269'/>
        <enumerator name='StatInt_clock_settime' value='270'/>
        <enumerator name='StatInt_getitimer' value='271'/>
        <enumerator name='StatInt_setitimer' value='272'/>
        <enumerator name='StatInt_time' value='273'/>
        <enumerator name='StatInt_glob' value='274'/>
        <enumerator name='StatInt_glob64' value='275'/>
        <enumerator name='StatInt_wait' value='276'/>
        <enumerator name='StatInt_waitid' value='277'/>
        <enumerator name='StatInt_waitpid' value='278'/>
        <enumerator name='StatInt_wait3' value='279'/>
        <enumerator name='StatInt_wait4' value='280'/>
        <enumerator name='StatInt_inet_ntop' value='281'/>
        <enumerator name='StatInt_inet_pton' value='282'/>
        <enumerator name='StatInt_inet_aton' value='283'/>
        <enumerator name='StatInt_getaddrinfo' value='284'/>
        <enumerator name='StatInt_getnameinfo' value='285'/>
        <enumerator name='StatInt_getsockname' value='286'/>
        <enumerator name='StatInt_gethostent' value='287'/>
        <enumerator name='StatInt_gethostbyname' value='288'/>
        <enumerator name='StatInt_gethostbyname2' value='289'/>
        <enumerator name='StatInt_gethostbyaddr' value='290'/>
        <enumerator name='StatInt_gethostent_r' value='291'/>
        <enumerator name='StatInt_gethostbyname_r' value='292'/>
        <enumerator name='StatInt_gethostbyname2_r' value='293'/>
        <enumerator name='StatInt_gethostbyaddr_r' value='294'/>
        <enumerator name='StatInt_getsockopt' value='295'/>
        <enumerator name='StatInt_modf' value='296'/>
        <enumerator name='StatInt_modff' value='297'/>
        <enumerator name='StatInt_modfl' value='298'/>
        <enumerator name='StatInt_getpeername' value='299'/>
        <enumerator name='StatInt_ioctl' value='300'/>
        <enumerator name='StatInt_sysinfo' value='301'/>
        <enumerator name='StatInt_readdir' value='302'/>
        <enumerator name='StatInt_readdir64' value='303'/>
        <enumerator name='StatInt_readdir_r' value='304'/>
        <enumerator name='StatInt_readdir64_r' value='305'/>
        <enumerator name='StatInt_ptrace' value='306'/>
        <enumerator name='StatInt_setlocale' value='307'/>
        <enumerator name='StatInt_getcwd' value='308'/>
        <enumerator name='StatInt_get_current_dir_name' value='309'/>
        <enumerator name='StatInt_strtoimax' value='310'/>
        <enumerator name='StatInt_strtoumax' value='311'/>
        <enumerator name='StatInt_mbstowcs' value='312'/>
        <enumerator name='StatInt_mbsrtowcs' value='313'/>
        <enumerator name='StatInt_mbsnrtowcs' value='314'/>
        <enumerator name='StatInt_wcstombs' value='315'/>
        <enumerator name='StatInt_wcsrtombs' value='316'/>
        <enumerator name='StatInt_wcsnrtombs' value='317'/>
        <enumerator name='StatInt_tcgetattr' value='318'/>
        <enumerator name='StatInt_realpath' value='319'/>
        <enumerator name='StatInt_canonicalize_file_name' value='320'/>
        <enumerator name='StatInt_confstr' value='321'/>
        <enumerator name='StatInt_sched_getaffinity' value='322'/>
        <enumerator name='StatInt_strerror' value='323'/>
        <enumerator name='StatInt_strerror_r' value='324'/>
        <enumerator name='StatInt___xpg_strerror_r' value='325'/>
        <enumerator name='StatInt_scandir' value='326'/>
        <enumerator name='StatInt_scandir64' value='327'/>
        <enumerator name='StatInt_getgroups' value='328'/>
        <enumerator name='StatInt_wordexp' value='329'/>
        <enumerator name='StatInt_sigwait' value='330'/>
        <enumerator name='StatInt_sigwaitinfo' value='331'/>
        <enumerator name='StatInt_sigtimedwait' value='332'/>
        <enumerator name='StatInt_sigemptyset' value='333'/>
        <enumerator name='StatInt_sigfillset' value='334'/>
        <enumerator name='StatInt_sigpending' value='335'/>
        <enumerator name='StatInt_sigprocmask' value='336'/>
        <enumerator name='StatInt_backtrace' value='337'/>
        <enumerator name='StatInt_backtrace_symbols' value='338'/>
        <enumerator name='StatInt_dlopen' value='339'/>
        <enumerator name='StatInt_dlclose' value='340'/>
        <enumerator name='StatInt_getmntent' value='341'/>
        <enumerator name='StatInt_getmntent_r' value='342'/>
        <enumerator name='StatInt_statfs' value='343'/>
        <enumerator name='StatInt_statfs64' value='344'/>
        <enumerator name='StatInt_fstatfs' value='345'/>
        <enumerator name='StatInt_fstatfs64' value='346'/>
        <enumerator name='StatInt_statvfs' value='347'/>
        <enumerator name='StatInt_statvfs64' value='348'/>
        <enumerator name='StatInt_fstatvfs' value='349'/>
        <enumerator name='StatInt_fstatvfs64' value='350'/>
        <enumerator name='StatInt_initgroups' value='351'/>
        <enumerator name='StatInt_ether_ntoa' value='352'/>
        <enumerator name='StatInt_ether_aton' value='353'/>
        <enumerator name='StatInt_ether_ntoa_r' value='354'/>
        <enumerator name='StatInt_ether_aton_r' value='355'/>
        <enumerator name='StatInt_ether_ntohost' value='356'/>
        <enumerator name='StatInt_ether_hostton' value='357'/>
        <enumerator name='StatInt_ether_line' value='358'/>
        <enumerator name='StatInt_shmctl' value='359'/>
        <enumerator name='StatInt_random_r' value='360'/>
        <enumerator name='StatInt_tmpnam' value='361'/>
        <enumerator name='StatInt_tmpnam_r' value='362'/>
        <enumerator name='StatInt_tempnam' value='363'/>
        <enumerator name='StatInt_sincos' value='364'/>
        <enumerator name='StatInt_sincosf' value='365'/>
        <enumerator name='StatInt_sincosl' value='366'/>
        <enumerator name='StatInt_remquo' value='367'/>
        <enumerator name='StatInt_remquof' value='368'/>
        <enumerator name='StatInt_remquol' value='369'/>
        <enumerator name='StatInt_lgamma' value='370'/>
        <enumerator name='StatInt_lgammaf' value='371'/>
        <enumerator name='StatInt_lgammal' value='372'/>
        <enumerator name='StatInt_lgamma_r' value='373'/>
        <enumerator name='StatInt_lgammaf_r' value='374'/>
        <enumerator name='StatInt_lgammal_r' value='375'/>
        <enumerator name='StatInt_drand48_r' value='376'/>
        <enumerator name='StatInt_lrand48_r' value='377'/>
        <enumerator name='StatInt_getline' value='378'/>
        <enumerator name='StatInt_getdelim' value='379'/>
        <enumerator name='StatInt_iconv' value='380'/>
        <enumerator name='StatInt_times' value='381'/>
        <enumerator name='StatInt_pthread_attr_getdetachstate' value='382'/>
        <enumerator name='StatInt_pthread_attr_getguardsize' value='383'/>
        <enumerator name='StatInt_pthread_attr_getschedparam' value='384'/>
        <enumerator name='StatInt_pthread_attr_getschedpolicy' value='385'/>
        <enumerator name='StatInt_pthread_attr_getinheritsched' value='386'/>
        <enumerator name='StatInt_pthread_attr_getscope' value='387'/>
        <enumerator name='StatInt_pthread_attr_getstacksize' value='388'/>
        <enumerator name='StatInt_pthread_attr_getstack' value='389'/>
        <enumerator name='StatInt_pthread_attr_getaffinity_np' value='390'/>
        <enumerator name='StatAnnotation' value='391'/>
        <enumerator name='StatAnnotateHappensBefore' value='392'/>
        <enumerator name='StatAnnotateHappensAfter' value='393'/>
        <enumerator name='StatAnnotateCondVarSignal' value='394'/>
        <enumerator name='StatAnnotateCondVarSignalAll' value='395'/>
        <enumerator name='StatAnnotateMutexIsNotPHB' value='396'/>
        <enumerator name='StatAnnotateCondVarWait' value='397'/>
        <enumerator name='StatAnnotateRWLockCreate' value='398'/>
        <enumerator name='StatAnnotateRWLockCreateStatic' value='399'/>
        <enumerator name='StatAnnotateRWLockDestroy' value='400'/>
        <enumerator name='StatAnnotateRWLockAcquired' value='401'/>
        <enumerator name='StatAnnotateRWLockReleased' value='402'/>
        <enumerator name='StatAnnotateTraceMemory' value='403'/>
        <enumerator name='StatAnnotateFlushState' value='404'/>
        <enumerator name='StatAnnotateNewMemory' value='405'/>
        <enumerator name='StatAnnotateNoOp' value='406'/>
        <enumerator name='StatAnnotateFlushExpectedRaces' value='407'/>
        <enumerator name='StatAnnotateEnableRaceDetection' value='408'/>
        <enumerator name='StatAnnotateMutexIsUsedAsCondVar' value='409'/>
        <enumerator name='StatAnnotatePCQGet' value='410'/>
        <enumerator name='StatAnnotatePCQPut' value='411'/>
        <enumerator name='StatAnnotatePCQDestroy' value='412'/>
        <enumerator name='StatAnnotatePCQCreate' value='413'/>
        <enumerator name='StatAnnotateExpectRace' value='414'/>
        <enumerator name='StatAnnotateBenignRaceSized' value='415'/>
        <enumerator name='StatAnnotateBenignRace' value='416'/>
        <enumerator name='StatAnnotateIgnoreReadsBegin' value='417'/>
        <enumerator name='StatAnnotateIgnoreReadsEnd' value='418'/>
        <enumerator name='StatAnnotateIgnoreWritesBegin' value='419'/>
        <enumerator name='StatAnnotateIgnoreWritesEnd' value='420'/>
        <enumerator name='StatAnnotateIgnoreSyncBegin' value='421'/>
        <enumerator name='StatAnnotateIgnoreSyncEnd' value='422'/>
        <enumerator name='StatAnnotatePublishMemoryRange' value='423'/>
        <enumerator name='StatAnnotateUnpublishMemoryRange' value='424'/>
        <enumerator name='StatAnnotateThreadName' value='425'/>
        <enumerator name='StatMtxTotal' value='426'/>
        <enumerator name='StatMtxTrace' value='427'/>
        <enumerator name='StatMtxThreads' value='428'/>
        <enumerator name='StatMtxReport' value='429'/>
        <enumerator name='StatMtxSyncVar' value='430'/>
        <enumerator name='StatMtxSyncTab' value='431'/>
        <enumerator name='StatMtxSlab' value='432'/>
        <enumerator name='StatMtxAnnotations' value='433'/>
        <enumerator name='StatMtxAtExit' value='434'/>
        <enumerator name='StatMtxMBlock' value='435'/>
        <enumerator name='StatMtxJavaMBlock' value='436'/>
        <enumerator name='StatMtxFD' value='437'/>
        <enumerator name='StatCnt' value='438'/>
      </enum-decl>
      <!-- struct __tsan::SyncVar -->
      <class-decl name='SyncVar' size-in-bits='960' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='50' column='1' id='3a4cd32f'>
        <data-member access='public' static='yes'>
          <!-- static const int __tsan::SyncVar::kInvalidTid -->
          <var-decl name='kInvalidTid' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='53' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::Mutex __tsan::SyncVar::mtx -->
          <var-decl name='mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='55' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::SyncVar::addr -->
          <var-decl name='addr' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='56' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- const __sanitizer::u64 __tsan::SyncVar::uid -->
          <var-decl name='uid' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='57' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __tsan::SyncClock __tsan::SyncVar::clock -->
          <var-decl name='clock' type-id='66fb3efc' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- __tsan::SyncClock __tsan::SyncVar::read_clock -->
          <var-decl name='read_clock' type-id='66fb3efc' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='59' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='704'>
          <!-- __sanitizer::u32 __tsan::SyncVar::creation_stack_id -->
          <var-decl name='creation_stack_id' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='60' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='736'>
          <!-- int __tsan::SyncVar::owner_tid -->
          <var-decl name='owner_tid' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='61' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='768'>
          <!-- __sanitizer::u64 __tsan::SyncVar::last_lock -->
          <var-decl name='last_lock' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='62' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='832'>
          <!-- int __tsan::SyncVar::recursion -->
          <var-decl name='recursion' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='63' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='864'>
          <!-- bool __tsan::SyncVar::is_rw -->
          <var-decl name='is_rw' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='64' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='872'>
          <!-- bool __tsan::SyncVar::is_recursive -->
          <var-decl name='is_recursive' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='65' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='880'>
          <!-- bool __tsan::SyncVar::is_broken -->
          <var-decl name='is_broken' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='66' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='888'>
          <!-- bool __tsan::SyncVar::is_linker_init -->
          <var-decl name='is_linker_init' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='67' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='896'>
          <!-- __tsan::SyncVar* __tsan::SyncVar::next -->
          <var-decl name='next' type-id='5cc51217' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='68' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncVar::SyncVar(__sanitizer::uptr, __sanitizer::u64) -->
          <function-decl name='SyncVar' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncVar*' -->
            <parameter type-id='5cc51217' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::SyncVar::GetId() -->
          <function-decl name='GetId' mangled-name='_ZNK6__tsan7SyncVar5GetIdEv' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::SyncVar*' -->
            <parameter type-id='0852d8e2' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- __sanitizer::uptr __tsan::SyncVar::SplitId(__sanitizer::u64*) -->
          <function-decl name='SplitId' mangled-name='_ZN6__tsan7SyncVar7SplitIdEyPy' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type '__sanitizer::u64*' -->
            <parameter type-id='92a71083'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::SyncVar::CheckId(__sanitizer::u64) -->
          <function-decl name='CheckId' mangled-name='_ZNK6__tsan7SyncVar7CheckIdEy' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::SyncVar*' -->
            <parameter type-id='0852d8e2' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncVar::SyncVar(__sanitizer::uptr, __sanitizer::u64) -->
          <function-decl name='SyncVar' mangled-name='_ZN6__tsan7SyncVarC2Emy' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncVar*' -->
            <parameter type-id='5cc51217' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::SyncTab -->
      <class-decl name='SyncTab' size-in-bits='516672' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='85' column='1' id='2d5691e1'>
        <member-type access='private'>
          <!-- struct __tsan::SyncTab::Part -->
          <class-decl name='Part' size-in-bits='512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='102' column='1' id='bc6744d8'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __tsan::Mutex __tsan::SyncTab::Part::mtx -->
              <var-decl name='mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='103' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __tsan::SyncVar* __tsan::SyncTab::Part::val -->
              <var-decl name='val' type-id='5cc51217' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='104' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- char __tsan::SyncTab::Part::pad[48] -->
              <var-decl name='pad' type-id='36d7f119' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='105' column='1'/>
            </data-member>
            <member-function access='public' constructor='yes'>
              <!-- __tsan::SyncTab::Part::Part() -->
              <function-decl name='Part' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__tsan::SyncTab::Part*' -->
                <parameter type-id='8092adce' is-artificial='yes'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
            <member-function access='public' constructor='yes'>
              <!-- __tsan::SyncTab::Part::Part() -->
              <function-decl name='Part' mangled-name='_ZN6__tsan7SyncTab4PartC2Ev' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
                <!-- implicit parameter of type '__tsan::SyncTab::Part*' -->
                <parameter type-id='8092adce' is-artificial='yes'/>
                <!-- void -->
                <return type-id='48b5725f'/>
              </function-decl>
            </member-function>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const int __tsan::SyncTab::kPartCount -->
          <var-decl name='kPartCount' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='110' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::SyncTab::Part __tsan::SyncTab::tab_[1009] -->
          <var-decl name='tab_' type-id='8c5a5e52' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='111' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='516608'>
          <!-- __sanitizer::atomic_uint64_t __tsan::SyncTab::uid_gen_ -->
          <var-decl name='uid_gen_' type-id='46b20e41' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='112' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncTab::SyncTab() -->
          <function-decl name='SyncTab' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::SyncTab::~SyncTab(int) -->
          <function-decl name='~SyncTab' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __tsan::SyncTab::SyncTab(const __tsan::SyncTab&) -->
          <function-decl name='SyncTab' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::SyncTab&' -->
            <parameter type-id='26e0c758'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- int __tsan::SyncTab::PartIdx(__sanitizer::uptr) -->
          <function-decl name='PartIdx' mangled-name='_ZN6__tsan7SyncTab7PartIdxEm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- int -->
            <return type-id='95e97e5e'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __tsan::SyncVar* __tsan::SyncTab::GetAndLock(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, bool, bool) -->
          <function-decl name='GetAndLock' mangled-name='_ZN6__tsan7SyncTab10GetAndLockEPNS_11ThreadStateEmmbb' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::SyncTab::SyncTab() -->
          <function-decl name='SyncTab' mangled-name='_ZN6__tsan7SyncTabC2Ev' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::SyncTab::~SyncTab(int) -->
          <function-decl name='~SyncTab' mangled-name='_ZN6__tsan7SyncTabD2Ev' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::SyncVar* __tsan::SyncTab::Create(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='Create' mangled-name='_ZN6__tsan7SyncTab6CreateEPNS_11ThreadStateEmm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::SyncVar* __tsan::SyncTab::GetOrCreateAndLock(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, bool) -->
          <function-decl name='GetOrCreateAndLock' mangled-name='_ZN6__tsan7SyncTab18GetOrCreateAndLockEPNS_11ThreadStateEmmb' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::SyncVar* __tsan::SyncTab::GetIfExistsAndLock(__sanitizer::uptr, bool) -->
          <function-decl name='GetIfExistsAndLock' mangled-name='_ZN6__tsan7SyncTab18GetIfExistsAndLockEmb' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::SyncVar* __tsan::SyncTab::GetAndRemove(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='GetAndRemove' mangled-name='_ZN6__tsan7SyncTab12GetAndRemoveEPNS_11ThreadStateEmm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::SyncTab*' -->
            <parameter type-id='956739a9' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::JmpBuf> -->
      <class-decl name='Vector&lt;__tsan::JmpBuf&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='e9df2984'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::JmpBuf>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::JmpBuf* __tsan::Vector<__tsan::JmpBuf>::begin_ -->
          <var-decl name='begin_' type-id='85cae1c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::JmpBuf* __tsan::Vector<__tsan::JmpBuf>::end_ -->
          <var-decl name='end_' type-id='85cae1c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::JmpBuf* __tsan::Vector<__tsan::JmpBuf>::last_ -->
          <var-decl name='last_' type-id='85cae1c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::JmpBuf>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::JmpBuf>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::JmpBuf>::Vector(const __tsan::Vector<__tsan::JmpBuf>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::JmpBuf>&' -->
            <parameter type-id='2eae47c5'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::JmpBuf>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_6JmpBufEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='32ae4e11' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::JmpBuf& __tsan::Vector<__tsan::JmpBuf>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorINS_6JmpBufEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::JmpBuf& -->
            <return type-id='89cae811'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::JmpBuf>::PopBack() -->
          <function-decl name='PopBack' mangled-name='_ZN6__tsan6VectorINS_6JmpBufEE7PopBackEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::JmpBuf* __tsan::Vector<__tsan::JmpBuf>::PushBack(__tsan::JmpBuf) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_6JmpBufEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::JmpBuf' -->
            <parameter type-id='ae12f925'/>
            <!-- __tsan::JmpBuf* -->
            <return type-id='85cae1c5'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::JmpBuf>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_6JmpBufEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::JmpBuf>*' -->
            <parameter type-id='f1ba7fd2' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::RacyAddress> -->
      <class-decl name='Vector&lt;__tsan::RacyAddress&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='656a63fd'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::RacyAddress>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::RacyAddress* __tsan::Vector<__tsan::RacyAddress>::begin_ -->
          <var-decl name='begin_' type-id='2c00a642' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::RacyAddress* __tsan::Vector<__tsan::RacyAddress>::end_ -->
          <var-decl name='end_' type-id='2c00a642' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::RacyAddress* __tsan::Vector<__tsan::RacyAddress>::last_ -->
          <var-decl name='last_' type-id='2c00a642' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::RacyAddress>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::RacyAddress>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::RacyAddress>::Vector(const __tsan::Vector<__tsan::RacyAddress>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::RacyAddress>&' -->
            <parameter type-id='d56dac88'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::RacyAddress>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_11RacyAddressEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='d16da63c' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::RacyAddress& __tsan::Vector<__tsan::RacyAddress>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorINS_11RacyAddressEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::RacyAddress& -->
            <return type-id='3000ac8e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::RacyAddress* __tsan::Vector<__tsan::RacyAddress>::PushBack(__tsan::RacyAddress) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_11RacyAddressEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::RacyAddress' -->
            <parameter type-id='a8924794'/>
            <!-- __tsan::RacyAddress* -->
            <return type-id='2c00a642'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::RacyAddress>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_11RacyAddressEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyAddress>*' -->
            <parameter type-id='908aa4fd' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::RacyStacks> -->
      <class-decl name='Vector&lt;__tsan::RacyStacks&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='e3a70d84'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::RacyStacks>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::RacyStacks* __tsan::Vector<__tsan::RacyStacks>::begin_ -->
          <var-decl name='begin_' type-id='f843b91d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::RacyStacks* __tsan::Vector<__tsan::RacyStacks>::end_ -->
          <var-decl name='end_' type-id='f843b91d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::RacyStacks* __tsan::Vector<__tsan::RacyStacks>::last_ -->
          <var-decl name='last_' type-id='f843b91d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::RacyStacks>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::RacyStacks>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::RacyStacks>::Vector(const __tsan::Vector<__tsan::RacyStacks>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::RacyStacks>&' -->
            <parameter type-id='6eea196d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::RacyStacks>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_10RacyStacksEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='62ea0689' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::RacyStacks& __tsan::Vector<__tsan::RacyStacks>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorINS_10RacyStacksEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::RacyStacks& -->
            <return type-id='ec43a639'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::RacyStacks* __tsan::Vector<__tsan::RacyStacks>::PushBack(__tsan::RacyStacks) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_10RacyStacksEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::RacyStacks' -->
            <parameter type-id='d02ac4fd'/>
            <!-- __tsan::RacyStacks* -->
            <return type-id='f843b91d'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::RacyStacks>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_10RacyStacksEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::RacyStacks>*' -->
            <parameter type-id='c5345512' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- void __tsan::FdClose(__tsan::ThreadState*, __sanitizer::uptr, int) -->
      <function-decl name='FdClose' mangled-name='_ZN6__tsan7FdCloseEPNS_11ThreadStateEmi' filepath='../../.././libsanitizer/tsan/tsan_fd.cc' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::DestroyAndFree<__tsan::SyncVar>(__tsan::SyncVar*&) -->
      <function-decl name='DestroyAndFree&lt;__tsan::SyncVar&gt;' filepath='../../.././libsanitizer/tsan/tsan_mman.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::SyncVar*&' -->
        <parameter type-id='3b3ba323'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::MemoryRead(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, int) -->
      <function-decl name='MemoryRead' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='664' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::MemoryWrite(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, int) -->
      <function-decl name='MemoryWrite' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='669' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_flags.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- const char* __tsan::__tsan_default_options() -->
      <function-decl name='__tsan_default_options' mangled-name='__tsan_default_options' filepath='../../.././libsanitizer/tsan/tsan_flags.cc' line='33' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_default_options'>
        <!-- const char* -->
        <return type-id='80f4b756'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_ignoreset.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_interceptors.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- SignalDesc[64] -->
    <array-type-def dimensions='1' type-id='980a1fec' size-in-bits='552960' id='e74fed76'>
      <!-- <anonymous range>[64] -->
      <subrange length='64' type-id='4c87fef4' id='b10be967'/>
    </array-type-def>
    <!-- bool[128] -->
    <array-type-def dimensions='1' type-id='c894953d' size-in-bits='1024' id='71ed37c2'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- char[14] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='112' id='f01a039e'>
      <!-- <anonymous range>[14] -->
      <subrange length='14' type-id='4c87fef4' id='48882d96'/>
    </array-type-def>
    <!-- double -->
    <type-decl name='double' size-in-bits='64' id='a0eb0f08'/>
    <!-- float -->
    <type-decl name='float' size-in-bits='32' id='a6c45d85'/>
    <!-- ioctl_desc[500] -->
    <array-type-def dimensions='1' type-id='e72cc2f6' size-in-bits='64000' id='0abb86f9'>
      <!-- <anonymous range>[500] -->
      <subrange length='500' type-id='4c87fef4' id='69a7c8f8'/>
    </array-type-def>
    <!-- long double -->
    <type-decl name='long double' size-in-bits='128' id='e095c704'/>
    <!-- long long unsigned int[118] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='7552' id='68853fa5'>
      <!-- <anonymous range>[118] -->
      <subrange length='118' type-id='4c87fef4' id='d3d55f9f'/>
    </array-type-def>
    <!-- long long unsigned int[16] -->
    <array-type-def dimensions='1' type-id='3a47d82b' size-in-bits='1024' id='bc284626'>
      <!-- <anonymous range>[16] -->
      <subrange length='16' type-id='4c87fef4' id='848d0938'/>
    </array-type-def>
    <!-- unsigned char[6] -->
    <array-type-def dimensions='1' type-id='002ac4a6' size-in-bits='48' id='4cfa781a'>
      <!-- <anonymous range>[6] -->
      <subrange length='6' type-id='4c87fef4' id='52fa524b'/>
    </array-type-def>
    <!-- unsigned long int[16] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='1024' id='d2baa450'>
      <!-- <anonymous range>[16] -->
      <subrange length='16' type-id='4c87fef4' id='848d0938'/>
    </array-type-def>
    <!-- unsigned long int[4] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='256' id='f46d9f4d'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='4c87fef4' id='16fe7105'/>
    </array-type-def>
    <!-- void*[128] -->
    <array-type-def dimensions='1' type-id='953b12f8' size-in-bits='8192' id='1a187abd'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- wchar_t -->
    <type-decl name='wchar_t' size-in-bits='32' id='c523b9f1'/>
    <!-- typedef __sanitizer::uptr SIZE_T -->
    <typedef-decl name='SIZE_T' type-id='c8e929d2' filepath='../../.././libsanitizer/interception/interception.h' line='24' column='1' id='883d32ae'/>
    <!-- typedef __sanitizer::sptr SSIZE_T -->
    <typedef-decl name='SSIZE_T' type-id='d1291724' filepath='../../.././libsanitizer/interception/interception.h' line='25' column='1' id='0459b20f'/>
    <!-- typedef __sanitizer::s64 INTMAX_T -->
    <typedef-decl name='INTMAX_T' type-id='475d8470' filepath='../../.././libsanitizer/interception/interception.h' line='27' column='1' id='feaaa4a2'/>
    <!-- typedef __sanitizer::OFF_T OFF_T -->
    <typedef-decl name='OFF_T' type-id='43055039' filepath='../../.././libsanitizer/interception/interception.h' line='28' column='1' id='91130bda'/>
    <!-- typedef __sanitizer::OFF64_T OFF64_T -->
    <typedef-decl name='OFF64_T' type-id='29f1a393' filepath='../../.././libsanitizer/interception/interception.h' line='29' column='1' id='552d30a0'/>
    <!-- typedef char* (const char*)* textdomain_f -->
    <typedef-decl name='textdomain_f' type-id='73d960c5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='62' column='1' id='7ca95672'/>
    <!-- typedef int (const char*, const char*)* strcmp_f -->
    <typedef-decl name='strcmp_f' type-id='92b87cd7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='82' column='1' id='d43ca270'/>
    <!-- typedef int (const char*, const char*, typedef __sanitizer::uptr)* strncmp_f -->
    <typedef-decl name='strncmp_f' type-id='6a722202' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='97' column='1' id='e3fc85c4'/>
    <!-- typedef int (const char*, const char*)* strcasecmp_f -->
    <typedef-decl name='strcasecmp_f' type-id='92b87cd7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='126' column='1' id='77f0c05c'/>
    <!-- typedef int (const char*, const char*, typedef SIZE_T)* strncasecmp_f -->
    <typedef-decl name='strncasecmp_f' type-id='31690c50' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1' id='17426838'/>
    <!-- typedef double (double, int*)* frexp_f -->
    <typedef-decl name='frexp_f' type-id='a44c2893' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='164' column='1' id='084e2746'/>
    <!-- typedef float (float, int*)* frexpf_f -->
    <typedef-decl name='frexpf_f' type-id='3d7dba0b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='178' column='1' id='88c8e0e2'/>
    <!-- typedef long double (long double, int*)* frexpl_f -->
    <typedef-decl name='frexpl_f' type-id='4033dc35' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='186' column='1' id='cb1351d0'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef SIZE_T)* read_f -->
    <typedef-decl name='read_f' type-id='1f3968a8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='223' column='1' id='acb6f071'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef SIZE_T, typedef OFF_T)* pread_f -->
    <typedef-decl name='pread_f' type-id='730d6c23' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='238' column='1' id='8d7fa6e9'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef SIZE_T, typedef OFF64_T)* pread64_f -->
    <typedef-decl name='pread64_f' type-id='41105f59' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1' id='a839032b'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int)* readv_f -->
    <typedef-decl name='readv_f' type-id='231aa643' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='268' column='1' id='a27222d3'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF_T)* preadv_f -->
    <typedef-decl name='preadv_f' type-id='607fb932' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='284' column='1' id='06390cbb'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF64_T)* preadv64_f -->
    <typedef-decl name='preadv64_f' type-id='3aa13710' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='300' column='1' id='393c0ee1'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef SIZE_T)* write_f -->
    <typedef-decl name='write_f' type-id='1f3968a8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1' id='786d3c7e'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef SIZE_T, typedef OFF_T)* pwrite_f -->
    <typedef-decl name='pwrite_f' type-id='730d6c23' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1' id='9ad038d6'/>
    <!-- typedef typedef SSIZE_T (int, void*, typedef OFF64_T, typedef OFF64_T)* pwrite64_f -->
    <typedef-decl name='pwrite64_f' type-id='8c007d6d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1' id='595930f4'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int)* writev_f -->
    <typedef-decl name='writev_f' type-id='231aa643' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1' id='e22d723a'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF_T)* pwritev_f -->
    <typedef-decl name='pwritev_f' type-id='607fb932' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1' id='d0378ba2'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF64_T)* pwritev64_f -->
    <typedef-decl name='pwritev64_f' type-id='3aa13710' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1' id='346d1700'/>
    <!-- typedef int (int, unsigned long int, unsigned long int, unsigned long int, unsigned long int)* prctl_f -->
    <typedef-decl name='prctl_f' type-id='ad4e7650' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1' id='f96d36fe'/>
    <!-- typedef unsigned long int (unsigned long int*)* time_f -->
    <typedef-decl name='time_f' type-id='d5b1e062' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='432' column='1' id='d7d14370'/>
    <!-- typedef __sanitizer::__sanitizer_tm* (unsigned long int*)* localtime_f -->
    <typedef-decl name='localtime_f' type-id='abd47c5c' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='456' column='1' id='5141bde7'/>
    <!-- typedef __sanitizer::__sanitizer_tm* (unsigned long int*, void*)* localtime_r_f -->
    <typedef-decl name='localtime_r_f' type-id='dc75548e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='466' column='1' id='37b675ce'/>
    <!-- typedef __sanitizer::__sanitizer_tm* (unsigned long int*)* gmtime_f -->
    <typedef-decl name='gmtime_f' type-id='abd47c5c' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='476' column='1' id='beb29868'/>
    <!-- typedef __sanitizer::__sanitizer_tm* (unsigned long int*, void*)* gmtime_r_f -->
    <typedef-decl name='gmtime_r_f' type-id='dc75548e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1' id='d2b91be5'/>
    <!-- typedef char* (unsigned long int*)* ctime_f -->
    <typedef-decl name='ctime_f' type-id='d76a822a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='496' column='1' id='d1909a8d'/>
    <!-- typedef char* (unsigned long int*, char*)* ctime_r_f -->
    <typedef-decl name='ctime_r_f' type-id='f60b342e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='506' column='1' id='07a18fc4'/>
    <!-- typedef char* (__sanitizer::__sanitizer_tm*)* asctime_f -->
    <typedef-decl name='asctime_f' type-id='e2f20fb8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='516' column='1' id='bb818bad'/>
    <!-- typedef char* (__sanitizer::__sanitizer_tm*, char*)* asctime_r_f -->
    <typedef-decl name='asctime_r_f' type-id='c0ff0864' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='526' column='1' id='b09e1aa4'/>
    <!-- typedef char* (char*, char*, __sanitizer::__sanitizer_tm*)* strptime_f -->
    <typedef-decl name='strptime_f' type-id='f4cfe0d0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1' id='bfebe099'/>
    <!-- typedef int (const char*, typedef __va_list_tag __va_list_tag*)* vscanf_f -->
    <typedef-decl name='vscanf_f' type-id='d78a816b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='587' column='1' id='851485aa'/>
    <!-- typedef int (const char*, const char*, typedef __va_list_tag __va_list_tag*)* vsscanf_f -->
    <typedef-decl name='vsscanf_f' type-id='a1e1a720' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='590' column='1' id='b9ab66e9'/>
    <!-- typedef int (void*, const char*, typedef __va_list_tag __va_list_tag*)* vfscanf_f -->
    <typedef-decl name='vfscanf_f' type-id='36ba4b5f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='593' column='1' id='89d530b8'/>
    <!-- typedef int (const char*, typedef __va_list_tag __va_list_tag*)* __isoc99_vscanf_f -->
    <typedef-decl name='__isoc99_vscanf_f' type-id='d78a816b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1' id='85b62851'/>
    <!-- typedef int (const char*, const char*, typedef __va_list_tag __va_list_tag*)* __isoc99_vsscanf_f -->
    <typedef-decl name='__isoc99_vsscanf_f' type-id='a1e1a720' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1' id='0152998c'/>
    <!-- typedef int (void*, const char*, typedef __va_list_tag __va_list_tag*)* __isoc99_vfscanf_f -->
    <typedef-decl name='__isoc99_vfscanf_f' type-id='36ba4b5f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1' id='dfe0e6c5'/>
    <!-- typedef int (const char*, variadic parameter type)* scanf_f -->
    <typedef-decl name='scanf_f' type-id='2779dca4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='619' column='1' id='ee623564'/>
    <!-- typedef int (void*, const char*, variadic parameter type)* fscanf_f -->
    <typedef-decl name='fscanf_f' type-id='83636708' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='622' column='1' id='8a90971a'/>
    <!-- typedef int (const char*, const char*, variadic parameter type)* sscanf_f -->
    <typedef-decl name='sscanf_f' type-id='4edba3f9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='625' column='1' id='2377e823'/>
    <!-- typedef int (const char*, variadic parameter type)* __isoc99_scanf_f -->
    <typedef-decl name='__isoc99_scanf_f' type-id='2779dca4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='629' column='1' id='cf64abad'/>
    <!-- typedef int (void*, const char*, variadic parameter type)* __isoc99_fscanf_f -->
    <typedef-decl name='__isoc99_fscanf_f' type-id='83636708' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1' id='27ebe361'/>
    <!-- typedef int (const char*, const char*, variadic parameter type)* __isoc99_sscanf_f -->
    <typedef-decl name='__isoc99_sscanf_f' type-id='4edba3f9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='635' column='1' id='3af69310'/>
    <!-- typedef int (int, unsigned int, void*)* ioctl_f -->
    <typedef-decl name='ioctl_f' type-id='716454bc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1' id='87b6cf44'/>
    <!-- typedef int (typedef __sanitizer::u32, void*)* clock_getres_f -->
    <typedef-decl name='clock_getres_f' type-id='6dc691a1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='790' column='1' id='c3b00450'/>
    <!-- typedef int (typedef __sanitizer::u32, void*)* clock_gettime_f -->
    <typedef-decl name='clock_gettime_f' type-id='6dc691a1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='799' column='1' id='37c5d0b1'/>
    <!-- typedef int (typedef __sanitizer::u32, void*)* clock_settime_f -->
    <typedef-decl name='clock_settime_f' type-id='6dc691a1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1' id='ffb5d6d5'/>
    <!-- typedef int (int, void*)* getitimer_f -->
    <typedef-decl name='getitimer_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='823' column='1' id='e1c36cd9'/>
    <!-- typedef int (int, void*, void*)* setitimer_f -->
    <typedef-decl name='setitimer_f' type-id='f4f5b664' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1' id='2669e80d'/>
    <!-- typedef int (int*)* wait_f -->
    <typedef-decl name='wait_f' type-id='81436ec0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='968' column='1' id='544949b0'/>
    <!-- typedef int (int, int, void*, int)* waitid_f -->
    <typedef-decl name='waitid_f' type-id='7b5e821a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1' id='8de24b79'/>
    <!-- typedef int (int, int*, int)* waitpid_f -->
    <typedef-decl name='waitpid_f' type-id='2b0969a8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1' id='d97d066b'/>
    <!-- typedef int (int*, int, void*)* wait3_f -->
    <typedef-decl name='wait3_f' type-id='34636e63' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1' id='dd12e05b'/>
    <!-- typedef int (int, int*, int, void*)* wait4_f -->
    <typedef-decl name='wait4_f' type-id='5d464332' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1' id='994fa19e'/>
    <!-- typedef char* (int, void*, char*, typedef __sanitizer::u32)* inet_ntop_f -->
    <typedef-decl name='inet_ntop_f' type-id='8885abbb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1' id='312d2403'/>
    <!-- typedef int (int, const char*, void*)* inet_pton_f -->
    <typedef-decl name='inet_pton_f' type-id='9bce4873' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1' id='a74ea50f'/>
    <!-- typedef int (const char*, void*)* inet_aton_f -->
    <typedef-decl name='inet_aton_f' type-id='bbe66bb2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1' id='41cb65de'/>
    <!-- typedef int (typedef __sanitizer::uptr, int*, int*)* pthread_getschedparam_f -->
    <typedef-decl name='pthread_getschedparam_f' type-id='bdac86e8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1' id='50de72ae'/>
    <!-- typedef int (int, void*, int*)* getsockname_f -->
    <typedef-decl name='getsockname_f' type-id='93a13ebb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1' id='083158e6'/>
    <!-- typedef __sanitizer::__sanitizer_hostent* (char*)* gethostbyname_f -->
    <typedef-decl name='gethostbyname_f' type-id='97a59eec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1181' column='1' id='80be82d9'/>
    <!-- typedef __sanitizer::__sanitizer_hostent* (void*, int, int)* gethostbyaddr_f -->
    <typedef-decl name='gethostbyaddr_f' type-id='480c26c8' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1' id='00161e5d'/>
    <!-- typedef __sanitizer::__sanitizer_hostent* (int)* gethostent_f -->
    <typedef-decl name='gethostent_f' type-id='731edcaf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1199' column='1' id='6cb25d0a'/>
    <!-- typedef __sanitizer::__sanitizer_hostent* (char*, int)* gethostbyname2_f -->
    <typedef-decl name='gethostbyname2_f' type-id='951cabeb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1207' column='1' id='7650812f'/>
    <!-- typedef int (__sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* gethostent_r_f -->
    <typedef-decl name='gethostent_r_f' type-id='86db4187' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1' id='d1cc5f1f'/>
    <!-- typedef int (void*, int, int, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* gethostbyaddr_r_f -->
    <typedef-decl name='gethostbyaddr_r_f' type-id='912a9dd1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1' id='80bea6d4'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* gethostbyname_r_f -->
    <typedef-decl name='gethostbyname_r_f' type-id='6438f749' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1' id='b57d6308'/>
    <!-- typedef int (char*, int, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* gethostbyname2_r_f -->
    <typedef-decl name='gethostbyname2_r_f' type-id='405ef428' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1' id='cb7b35c6'/>
    <!-- typedef int (int, int, int, void*, int*)* getsockopt_f -->
    <typedef-decl name='getsockopt_f' type-id='e4fc13a9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1' id='46c918ac'/>
    <!-- typedef int (int, void*, unsigned int*)* accept_f -->
    <typedef-decl name='accept_f' type-id='e14ed160' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1324' column='1' id='e45b5d85'/>
    <!-- typedef int (int, void*, unsigned int*, int)* accept4_f -->
    <typedef-decl name='accept4_f' type-id='a4f53fcf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1' id='7dfe4781'/>
    <!-- typedef double (double, double*)* modf_f -->
    <typedef-decl name='modf_f' type-id='acbb0259' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1368' column='1' id='37706b13'/>
    <!-- typedef float (float, float*)* modff_f -->
    <typedef-decl name='modff_f' type-id='7787ca9e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1377' column='1' id='a5b6d17d'/>
    <!-- typedef long double (long double, long double*)* modfl_f -->
    <typedef-decl name='modfl_f' type-id='97cef7df' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1386' column='1' id='e801426b'/>
    <!-- typedef typedef SSIZE_T (int, __sanitizer::__sanitizer_msghdr*, int)* recvmsg_f -->
    <typedef-decl name='recvmsg_f' type-id='9b85861a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1' id='18bfe250'/>
    <!-- typedef int (int, void*, unsigned int*)* getpeername_f -->
    <typedef-decl name='getpeername_f' type-id='e14ed160' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1' id='974475ba'/>
    <!-- typedef int (void*)* sysinfo_f -->
    <typedef-decl name='sysinfo_f' type-id='b9b212f5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1453' column='1' id='5e981e90'/>
    <!-- typedef __sanitizer::__sanitizer_dirent* (void*)* readdir_f -->
    <typedef-decl name='readdir_f' type-id='e9d565e5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1467' column='1' id='f8a3285a'/>
    <!-- typedef int (void*, __sanitizer::__sanitizer_dirent*, __sanitizer::__sanitizer_dirent**)* readdir_r_f -->
    <typedef-decl name='readdir_r_f' type-id='69d17af7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1' id='11ee912f'/>
    <!-- typedef __sanitizer::__sanitizer_dirent64* (void*)* readdir64_f -->
    <typedef-decl name='readdir64_f' type-id='4aac6d53' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1496' column='1' id='217cead8'/>
    <!-- typedef int (void*, __sanitizer::__sanitizer_dirent64*, __sanitizer::__sanitizer_dirent64**)* readdir64_r_f -->
    <typedef-decl name='readdir64_r_f' type-id='999954f7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1' id='23283395'/>
    <!-- typedef typedef __sanitizer::uptr (int, int, void*, void*)* ptrace_f -->
    <typedef-decl name='ptrace_f' type-id='88a4b65b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1524' column='1' id='cae5a8d8'/>
    <!-- typedef char* (int, char*)* setlocale_f -->
    <typedef-decl name='setlocale_f' type-id='d7e01157' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1570' column='1' id='abe623ef'/>
    <!-- typedef char* (char*, typedef SIZE_T)* getcwd_f -->
    <typedef-decl name='getcwd_f' type-id='cdee8de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1586' column='1' id='e8302fe3'/>
    <!-- typedef char* (int)* get_current_dir_name_f -->
    <typedef-decl name='get_current_dir_name_f' type-id='b8f8ba6d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1599' column='1' id='01d63b99'/>
    <!-- typedef typedef INTMAX_T (const char*, char**, int)* strtoimax_f -->
    <typedef-decl name='strtoimax_f' type-id='11605a47' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1614' column='1' id='71f7bad4'/>
    <!-- typedef typedef INTMAX_T (const char*, char**, int)* strtoumax_f -->
    <typedef-decl name='strtoumax_f' type-id='11605a47' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1' id='ec065ba0'/>
    <!-- typedef typedef SIZE_T (wchar_t*, const char*, typedef SIZE_T)* mbstowcs_f -->
    <typedef-decl name='mbstowcs_f' type-id='4ab37db3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1' id='8c052f09'/>
    <!-- typedef typedef SIZE_T (wchar_t*, const char**, typedef SIZE_T, void*)* mbsrtowcs_f -->
    <typedef-decl name='mbsrtowcs_f' type-id='8879c1c7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1' id='3741c6b3'/>
    <!-- typedef typedef SIZE_T (wchar_t*, const char**, typedef SIZE_T, typedef SIZE_T, void*)* mbsnrtowcs_f -->
    <typedef-decl name='mbsnrtowcs_f' type-id='13831ade' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1' id='76c0d981'/>
    <!-- typedef typedef SIZE_T (char*, const wchar_t*, typedef SIZE_T)* wcstombs_f -->
    <typedef-decl name='wcstombs_f' type-id='358ee825' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1' id='d5b47093'/>
    <!-- typedef typedef SIZE_T (char*, const wchar_t**, typedef SIZE_T, void*)* wcsrtombs_f -->
    <typedef-decl name='wcsrtombs_f' type-id='a6d97b09' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1' id='a68eaf6b'/>
    <!-- typedef typedef SIZE_T (char*, const wchar_t**, typedef SIZE_T, typedef SIZE_T, void*)* wcsnrtombs_f -->
    <typedef-decl name='wcsnrtombs_f' type-id='c176a9d0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1' id='a9e931c7'/>
    <!-- typedef int (int, void*)* tcgetattr_f -->
    <typedef-decl name='tcgetattr_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1752' column='1' id='e1a86f2d'/>
    <!-- typedef char* (const char*, char*)* realpath_f -->
    <typedef-decl name='realpath_f' type-id='1be230ef' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1767' column='1' id='240ca9e2'/>
    <!-- typedef char* (const char*)* canonicalize_file_name_f -->
    <typedef-decl name='canonicalize_file_name_f' type-id='73d960c5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1791' column='1' id='0e39e20a'/>
    <!-- typedef typedef SIZE_T (int, char*, typedef SIZE_T)* confstr_f -->
    <typedef-decl name='confstr_f' type-id='573a5163' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1' id='413d0fa0'/>
    <!-- typedef int (int, typedef SIZE_T, void*)* sched_getaffinity_f -->
    <typedef-decl name='sched_getaffinity_f' type-id='a0ff8473' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1' id='e9240489'/>
    <!-- typedef char* (int)* strerror_f -->
    <typedef-decl name='strerror_f' type-id='b8f8ba6d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1833' column='1' id='9d5729e6'/>
    <!-- typedef char* (int, char*, typedef SIZE_T)* strerror_r_f -->
    <typedef-decl name='strerror_r_f' type-id='a35ec0d0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1' id='502ea9b3'/>
    <!-- typedef int (int, char*, typedef SIZE_T)* __xpg_strerror_r_f -->
    <typedef-decl name='__xpg_strerror_r_f' type-id='f038f3b3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1' id='5367e82f'/>
    <!-- typedef int (const __sanitizer::__sanitizer_dirent*)* scandir_filter_f -->
    <typedef-decl name='scandir_filter_f' type-id='f1cc163b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1889' column='1' id='9b85ec4e'/>
    <!-- typedef int (const __sanitizer::__sanitizer_dirent**, const __sanitizer::__sanitizer_dirent**)* scandir_compar_f -->
    <typedef-decl name='scandir_compar_f' type-id='41ff5e31' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1890' column='1' id='d381b210'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_dirent***, typedef scandir_filter_f, typedef scandir_compar_f)* scandir_f -->
    <typedef-decl name='scandir_f' type-id='72fe0d1a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1' id='fde85e4d'/>
    <!-- typedef int (const __sanitizer::__sanitizer_dirent64*)* scandir64_filter_f -->
    <typedef-decl name='scandir64_filter_f' type-id='c98f46b5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1942' column='1' id='f5b34980'/>
    <!-- typedef int (const __sanitizer::__sanitizer_dirent64**, const __sanitizer::__sanitizer_dirent64**)* scandir64_compar_f -->
    <typedef-decl name='scandir64_compar_f' type-id='caa33b11' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1943' column='1' id='1af10236'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_dirent64***, typedef scandir64_filter_f, typedef scandir64_compar_f)* scandir64_f -->
    <typedef-decl name='scandir64_f' type-id='af572870' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1' id='5bc933ef'/>
    <!-- typedef int (int, __sanitizer::u32*)* getgroups_f -->
    <typedef-decl name='getgroups_f' type-id='1a6988d3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1996' column='1' id='d6d91359'/>
    <!-- typedef int (__sanitizer::__sanitizer_pollfd*, typedef __sanitizer::__sanitizer_nfds_t, int)* poll_f -->
    <typedef-decl name='poll_f' type-id='654e0744' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1' id='d38898f4'/>
    <!-- typedef int (__sanitizer::__sanitizer_pollfd*, typedef __sanitizer::__sanitizer_nfds_t, void*, __sanitizer::__sanitizer_sigset_t*)* ppoll_f -->
    <typedef-decl name='ppoll_f' type-id='f9311f32' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1' id='bb441c5c'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_wordexp_t*, int)* wordexp_f -->
    <typedef-decl name='wordexp_f' type-id='1ff4eb9d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1' id='3cede3e6'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*, int*)* sigwait_f -->
    <typedef-decl name='sigwait_f' type-id='c4ff2d3b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2081' column='1' id='1ce43acd'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*, void*)* sigwaitinfo_f -->
    <typedef-decl name='sigwaitinfo_f' type-id='2bd429e4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2095' column='1' id='25edeef1'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*, void*, void*)* sigtimedwait_f -->
    <typedef-decl name='sigtimedwait_f' type-id='7af7c786' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1' id='f5d74b88'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*)* sigemptyset_f -->
    <typedef-decl name='sigemptyset_f' type-id='8cf31caa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2125' column='1' id='43d99e9b'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*)* sigpending_f -->
    <typedef-decl name='sigpending_f' type-id='8cf31caa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1' id='4b9b8989'/>
    <!-- typedef int (int, __sanitizer::__sanitizer_sigset_t*, __sanitizer::__sanitizer_sigset_t*)* sigprocmask_f -->
    <typedef-decl name='sigprocmask_f' type-id='307fe454' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1' id='276ae1fc'/>
    <!-- typedef int (void**, int)* backtrace_f -->
    <typedef-decl name='backtrace_f' type-id='9489f11e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2177' column='1' id='e4ca53d5'/>
    <!-- typedef char** (void**, int)* backtrace_symbols_f -->
    <typedef-decl name='backtrace_symbols_f' type-id='1e4a8e2f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2186' column='1' id='bfaf1873'/>
    <!-- typedef void (int)* _exit_f -->
    <typedef-decl name='_exit_f' type-id='03347643' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2207' column='1' id='c43ad10c'/>
    <!-- typedef int (void*)* pthread_mutex_lock_f -->
    <typedef-decl name='pthread_mutex_lock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2220' column='1' id='ccaf2b4b'/>
    <!-- typedef int (void*)* pthread_mutex_unlock_f -->
    <typedef-decl name='pthread_mutex_unlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2231' column='1' id='fbb70f50'/>
    <!-- typedef int (void*, void*)* pthread_cond_wait_f -->
    <typedef-decl name='pthread_cond_wait_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2247' column='1' id='578ff17a'/>
    <!-- typedef int (void*, void*)* pthread_cond_init_f -->
    <typedef-decl name='pthread_cond_init_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2257' column='1' id='ab8abcc9'/>
    <!-- typedef int (void*)* pthread_cond_signal_f -->
    <typedef-decl name='pthread_cond_signal_f' type-id='b9b212f5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2264' column='1' id='94c7a0a3'/>
    <!-- typedef int (void*)* pthread_cond_broadcast_f -->
    <typedef-decl name='pthread_cond_broadcast_f' type-id='b9b212f5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2271' column='1' id='5956ba18'/>
    <!-- typedef __sanitizer::__sanitizer_mntent* (void*)* getmntent_f -->
    <typedef-decl name='getmntent_f' type-id='9a05c377' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2312' column='1' id='580f6f5b'/>
    <!-- typedef __sanitizer::__sanitizer_mntent* (void*, __sanitizer::__sanitizer_mntent*, char*, int)* getmntent_r_f -->
    <typedef-decl name='getmntent_r_f' type-id='44da291d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1' id='d2874eba'/>
    <!-- typedef int (char*, void*)* statfs_f -->
    <typedef-decl name='statfs_f' type-id='831c566f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2339' column='1' id='fd67a644'/>
    <!-- typedef int (int, void*)* fstatfs_f -->
    <typedef-decl name='fstatfs_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2347' column='1' id='36fd79d2'/>
    <!-- typedef int (char*, void*)* statfs64_f -->
    <typedef-decl name='statfs64_f' type-id='831c566f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2362' column='1' id='0c695836'/>
    <!-- typedef int (int, void*)* fstatfs64_f -->
    <typedef-decl name='fstatfs64_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2370' column='1' id='48a45f30'/>
    <!-- typedef int (char*, void*)* statvfs_f -->
    <typedef-decl name='statvfs_f' type-id='831c566f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2385' column='1' id='664a517e'/>
    <!-- typedef int (int, void*)* fstatvfs_f -->
    <typedef-decl name='fstatvfs_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2393' column='1' id='0ec06fac'/>
    <!-- typedef int (char*, void*)* statvfs64_f -->
    <typedef-decl name='statvfs64_f' type-id='831c566f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1' id='77ee431c'/>
    <!-- typedef int (int, void*)* fstatvfs64_f -->
    <typedef-decl name='fstatvfs64_f' type-id='2e711a2a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1' id='4c4cbffe'/>
    <!-- typedef int (char*, typedef __sanitizer::u32)* initgroups_f -->
    <typedef-decl name='initgroups_f' type-id='895f6573' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2431' column='1' id='58e32347'/>
    <!-- typedef char* (__sanitizer::__sanitizer_ether_addr*)* ether_ntoa_f -->
    <typedef-decl name='ether_ntoa_f' type-id='7c55e4bf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2444' column='1' id='5e34948a'/>
    <!-- typedef __sanitizer::__sanitizer_ether_addr* (char*)* ether_aton_f -->
    <typedef-decl name='ether_aton_f' type-id='9aa0a0ad' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2452' column='1' id='1d8e4388'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_ether_addr*)* ether_ntohost_f -->
    <typedef-decl name='ether_ntohost_f' type-id='abc2a8ca' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2460' column='1' id='ea4d129f'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_ether_addr*)* ether_hostton_f -->
    <typedef-decl name='ether_hostton_f' type-id='abc2a8ca' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1' id='95937d79'/>
    <!-- typedef int (char*, __sanitizer::__sanitizer_ether_addr*, char*)* ether_line_f -->
    <typedef-decl name='ether_line_f' type-id='f04e83ce' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1' id='047c788e'/>
    <!-- typedef char* (__sanitizer::__sanitizer_ether_addr*, char*)* ether_ntoa_r_f -->
    <typedef-decl name='ether_ntoa_r_f' type-id='a74aebd1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2502' column='1' id='5da8229f'/>
    <!-- typedef __sanitizer::__sanitizer_ether_addr* (char*, __sanitizer::__sanitizer_ether_addr*)* ether_aton_r_f -->
    <typedef-decl name='ether_aton_r_f' type-id='78f30e40' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2510' column='1' id='c09ff0c5'/>
    <!-- typedef int (int, int, void*)* shmctl_f -->
    <typedef-decl name='shmctl_f' type-id='d08b57b3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1' id='c246eb7a'/>
    <!-- typedef int (void*, __sanitizer::u32*)* random_r_f -->
    <typedef-decl name='random_r_f' type-id='3298c708' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2549' column='1' id='a262f6c3'/>
    <!-- typedef int (void*, void*)* pthread_attr_getguardsize_f -->
    <typedef-decl name='pthread_attr_getguardsize_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2576' column='1' id='766e0d52'/>
    <!-- typedef int (void*, void*)* pthread_attr_getschedparam_f -->
    <typedef-decl name='pthread_attr_getschedparam_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2577' column='1' id='07cb745c'/>
    <!-- typedef int (void*, void*)* pthread_attr_getschedpolicy_f -->
    <typedef-decl name='pthread_attr_getschedpolicy_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2578' column='1' id='3340ab03'/>
    <!-- typedef int (void*, void*)* pthread_attr_getscope_f -->
    <typedef-decl name='pthread_attr_getscope_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2579' column='1' id='a2a8279e'/>
    <!-- typedef int (void*, void*)* pthread_attr_getstacksize_f -->
    <typedef-decl name='pthread_attr_getstacksize_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2580' column='1' id='a4354107'/>
    <!-- typedef int (void*, void**, SIZE_T*)* pthread_attr_getstack_f -->
    <typedef-decl name='pthread_attr_getstack_f' type-id='39189f6f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1' id='5a4a9dc2'/>
    <!-- typedef int (void*, void*)* pthread_attr_getinheritsched_f -->
    <typedef-decl name='pthread_attr_getinheritsched_f' type-id='585e1de9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2612' column='1' id='2ac74b96'/>
    <!-- typedef int (void*, typedef SIZE_T, void*)* pthread_attr_getaffinity_np_f -->
    <typedef-decl name='pthread_attr_getaffinity_np_f' type-id='6c10c330' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1' id='601defcd'/>
    <!-- typedef char* (char*)* tmpnam_f -->
    <typedef-decl name='tmpnam_f' type-id='bf1738fa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2639' column='1' id='357320c2'/>
    <!-- typedef char* (char*)* tmpnam_r_f -->
    <typedef-decl name='tmpnam_r_f' type-id='bf1738fa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2657' column='1' id='20e32e07'/>
    <!-- typedef char* (char*, char*)* tempnam_f -->
    <typedef-decl name='tempnam_f' type-id='a181d2be' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2670' column='1' id='8227220f'/>
    <!-- typedef int (typedef __sanitizer::uptr, const char*)* pthread_setname_np_f -->
    <typedef-decl name='pthread_setname_np_f' type-id='a6e43f8f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2685' column='1' id='30c855b2'/>
    <!-- typedef void (double, double*, double*)* sincos_f -->
    <typedef-decl name='sincos_f' type-id='6a44710b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1' id='b920491c'/>
    <!-- typedef void (float, float*, float*)* sincosf_f -->
    <typedef-decl name='sincosf_f' type-id='b7f78534' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1' id='dd3cdfd0'/>
    <!-- typedef void (long double, long double*, long double*)* sincosl_f -->
    <typedef-decl name='sincosl_f' type-id='12b02e29' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1' id='9af26ee2'/>
    <!-- typedef double (double, double, int*)* remquo_f -->
    <typedef-decl name='remquo_f' type-id='3d23eb5e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1' id='a871207a'/>
    <!-- typedef float (float, float, int*)* remquof_f -->
    <typedef-decl name='remquof_f' type-id='75935a47' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1' id='6dda31b6'/>
    <!-- typedef long double (long double, long double, int*)* remquol_f -->
    <typedef-decl name='remquol_f' type-id='b8eaf1bc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1' id='bdaa52d4'/>
    <!-- typedef double (double)* lgamma_f -->
    <typedef-decl name='lgamma_f' type-id='22b3b5c2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2758' column='1' id='70ba9bb4'/>
    <!-- typedef float (float)* lgammaf_f -->
    <typedef-decl name='lgammaf_f' type-id='326a95da' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2765' column='1' id='d21288d8'/>
    <!-- typedef long double (long double)* lgammal_f -->
    <typedef-decl name='lgammal_f' type-id='96b9585c' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2772' column='1' id='7de39aba'/>
    <!-- typedef double (double, int*)* lgamma_r_f -->
    <typedef-decl name='lgamma_r_f' type-id='a44c2893' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1' id='48944b79'/>
    <!-- typedef float (float, int*)* lgammaf_r_f -->
    <typedef-decl name='lgammaf_r_f' type-id='3d7dba0b' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1' id='19d20195'/>
    <!-- typedef long double (long double, int*)* lgammal_r_f -->
    <typedef-decl name='lgammal_r_f' type-id='4033dc35' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1' id='55dc0a4f'/>
    <!-- typedef int (void*, double*)* drand48_r_f -->
    <typedef-decl name='drand48_r_f' type-id='6bdf6f90' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2818' column='1' id='fa250223'/>
    <!-- typedef int (void*, long int*)* lrand48_r_f -->
    <typedef-decl name='lrand48_r_f' type-id='f1d29302' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2825' column='1' id='b1941d6b'/>
    <!-- typedef typedef SSIZE_T (char**, SIZE_T*, void*)* getline_f -->
    <typedef-decl name='getline_f' type-id='87931e30' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1' id='c99d2cd3'/>
    <!-- typedef typedef SSIZE_T (char**, SIZE_T*, int, void*)* getdelim_f -->
    <typedef-decl name='getdelim_f' type-id='73bf6599' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1' id='2bc9cb76'/>
    <!-- typedef typedef SIZE_T (void*, char**, SIZE_T*, char**, SIZE_T*)* iconv_f -->
    <typedef-decl name='iconv_f' type-id='cdfc717d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1' id='4fbfd564'/>
    <!-- typedef typedef __sanitizer::__sanitizer_clock_t (void*)* times_f -->
    <typedef-decl name='times_f' type-id='e36559c3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2896' column='1' id='6490a7db'/>
    <!-- struct ioctl_desc -->
    <class-decl name='ioctl_desc' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='13' column='1' id='e72cc2f6'>
      <member-type access='public'>
        <!-- enum ioctl_desc::__anonymous_enum__ -->
        <enum-decl name='__anonymous_enum__' is-anonymous='yes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='16' column='1' id='08f5ca17'>
          <underlying-type type-id='9cac1fee'/>
          <enumerator name='NONE' value='0'/>
          <enumerator name='READ' value='1'/>
          <enumerator name='WRITE' value='2'/>
          <enumerator name='CUSTOM' value='3'/>
        </enum-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int ioctl_desc::req -->
        <var-decl name='req' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='14' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- ioctl_desc::__anonymous_enum__ ioctl_desc::type -->
        <var-decl name='type' type-id='08f5ca17' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='21' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='34'>
        <!-- unsigned int ioctl_desc::size -->
        <var-decl name='size' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='22' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* ioctl_desc::name -->
        <var-decl name='name' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='23' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct ioctl_desc_compare -->
    <class-decl name='ioctl_desc_compare' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='462' column='1' id='45df539a'>
      <member-function access='public' const='yes'>
        <!-- bool ioctl_desc_compare::operator()(const ioctl_desc&, const ioctl_desc&) -->
        <function-decl name='operator()' mangled-name='_ZNK18ioctl_desc_compareclERK10ioctl_descS2_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors_ioctl.inc' line='463' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'const ioctl_desc_compare*' -->
          <parameter type-id='fe534cc3' is-artificial='yes'/>
          <!-- parameter of type 'const ioctl_desc&' -->
          <parameter type-id='b8a71a87'/>
          <!-- parameter of type 'const ioctl_desc&' -->
          <parameter type-id='b8a71a87'/>
          <!-- bool -->
          <return type-id='c894953d'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct sanitizer_kernel_iovec -->
    <class-decl name='sanitizer_kernel_iovec' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='88' column='1' id='41f15db9'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* sanitizer_kernel_iovec::iov_base -->
        <var-decl name='iov_base' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned long int sanitizer_kernel_iovec::iov_len -->
        <var-decl name='iov_len' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='90' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct sanitizer_kernel_msghdr -->
    <class-decl name='sanitizer_kernel_msghdr' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='93' column='1' id='18e0f174'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* sanitizer_kernel_msghdr::msg_name -->
        <var-decl name='msg_name' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='94' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int sanitizer_kernel_msghdr::msg_namelen -->
        <var-decl name='msg_namelen' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- sanitizer_kernel_iovec* sanitizer_kernel_msghdr::msg_iov -->
        <var-decl name='msg_iov' type-id='99b62211' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned long int sanitizer_kernel_msghdr::msg_iovlen -->
        <var-decl name='msg_iovlen' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void* sanitizer_kernel_msghdr::msg_control -->
        <var-decl name='msg_control' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- unsigned long int sanitizer_kernel_msghdr::msg_controllen -->
        <var-decl name='msg_controllen' type-id='7359adad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int sanitizer_kernel_msghdr::msg_flags -->
        <var-decl name='msg_flags' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='100' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct sanitizer_kernel_mmsghdr -->
    <class-decl name='sanitizer_kernel_mmsghdr' size-in-bits='512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='103' column='1' id='b9b1aba5'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- sanitizer_kernel_msghdr sanitizer_kernel_mmsghdr::msg_hdr -->
        <var-decl name='msg_hdr' type-id='18e0f174' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- unsigned int sanitizer_kernel_mmsghdr::msg_len -->
        <var-decl name='msg_len' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='105' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct sanitizer_kernel_sockaddr -->
    <class-decl name='sanitizer_kernel_sockaddr' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='123' column='1' id='86093762'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned short int sanitizer_kernel_sockaddr::sa_family -->
        <var-decl name='sa_family' type-id='8efea9e5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- char sanitizer_kernel_sockaddr::sa_data[14] -->
        <var-decl name='sa_data' type-id='f01a039e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='125' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void kernel_sigset_t -->
    <typedef-decl name='kernel_sigset_t' type-id='48b5725f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='130' column='1' id='2a19a19a'/>
    <!-- struct my_siginfo_t -->
    <class-decl name='my_siginfo_t' size-in-bits='1024' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='32' column='1' id='ed334f22'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long long unsigned int my_siginfo_t::opaque[16] -->
        <var-decl name='opaque' type-id='bc284626' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='34' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct ucontext_t -->
    <class-decl name='ucontext_t' size-in-bits='7552' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='37' column='1' id='1ba65dc8'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long long unsigned int ucontext_t::opaque[118] -->
        <var-decl name='opaque' type-id='68853fa5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='39' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef int (void*, void*)* pthread_attr_getdetachstate_f -->
    <typedef-decl name='pthread_attr_getdetachstate_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='44' column='1' id='e447f24a'/>
    <!-- typedef int (__sanitizer::__sanitizer_sigset_t*)* sigfillset_f -->
    <typedef-decl name='sigfillset_f' type-id='8cf31caa' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='53' column='1' id='9961c3e5'/>
    <!-- typedef long int long_t -->
    <typedef-decl name='long_t' type-id='bd54fe1a' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='79' column='1' id='6848d8c1'/>
    <!-- typedef void (int)* sighandler_t -->
    <typedef-decl name='sighandler_t' type-id='03347643' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='87' column='1' id='bdbc1684'/>
    <!-- struct sigaction_t -->
    <class-decl name='sigaction_t' size-in-bits='1216' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='91' column='1' id='2afd8e53'>
      <member-type access='public'>
        <!-- union {sighandler_t sa_handler; void (int, my_siginfo_t*, void*)* sa_sigaction;} -->
        <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='92' column='1' id='ac5ab598'>
          <data-member access='public'>
            <!-- sighandler_t sa_handler -->
            <var-decl name='sa_handler' type-id='bdbc1684' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='93' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- void (int, my_siginfo_t*, void*)* sa_sigaction -->
            <var-decl name='sa_sigaction' type-id='3edfe2b6' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='94' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- union {sighandler_t sa_handler; void (int, my_siginfo_t*, void*)* sa_sigaction;} -->
        <var-decl name='' type-id='ac5ab598' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- __sanitizer::__sanitizer_sigset_t sigaction_t::sa_mask -->
        <var-decl name='sa_mask' type-id='0735853c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- int sigaction_t::sa_flags -->
        <var-decl name='sa_flags' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- void ()* sigaction_t::sa_restorer -->
        <var-decl name='sa_restorer' type-id='953b12f8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='98' column='1'/>
      </data-member>
    </class-decl>
    <!-- class ScopedInterceptor -->
    <class-decl name='ScopedInterceptor' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='155' column='1' id='27eb98a4'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- __tsan::ThreadState* const ScopedInterceptor::thr_ -->
        <var-decl name='thr_' type-id='0bdbb7fb' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='160' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- const __sanitizer::uptr ScopedInterceptor::pc_ -->
        <var-decl name='pc_' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='161' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- const int ScopedInterceptor::in_rtl_ -->
        <var-decl name='in_rtl_' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='162' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- bool ScopedInterceptor::in_ignored_lib_ -->
        <var-decl name='in_ignored_lib_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='163' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- ScopedInterceptor::ScopedInterceptor(__tsan::ThreadState*, const char*, __sanitizer::uptr) -->
        <function-decl name='ScopedInterceptor' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedInterceptor*' -->
          <parameter type-id='24283232' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='80f4b756'/>
          <!-- parameter of type 'typedef __sanitizer::uptr' -->
          <parameter type-id='c8e929d2'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- ScopedInterceptor::~ScopedInterceptor(int) -->
        <function-decl name='~ScopedInterceptor' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedInterceptor*' -->
          <parameter type-id='24283232' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='95e97e5e' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- ScopedInterceptor::ScopedInterceptor(__tsan::ThreadState*, const char*, __sanitizer::uptr) -->
        <function-decl name='ScopedInterceptor' mangled-name='_ZN17ScopedInterceptorC2EPN6__tsan11ThreadStateEPKcm' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedInterceptor*' -->
          <parameter type-id='24283232' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='80f4b756'/>
          <!-- parameter of type 'typedef __sanitizer::uptr' -->
          <parameter type-id='c8e929d2'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- ScopedInterceptor::~ScopedInterceptor(int) -->
        <function-decl name='~ScopedInterceptor' mangled-name='_ZN17ScopedInterceptorD2Ev' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedInterceptor*' -->
          <parameter type-id='24283232' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='95e97e5e' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct BlockingCall -->
    <class-decl name='BlockingCall' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='225' column='1' id='099b32fa'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __tsan::SignalContext* BlockingCall::ctx -->
        <var-decl name='ctx' type-id='76f0aa3e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='235' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- BlockingCall::BlockingCall(__tsan::ThreadState*) -->
        <function-decl name='BlockingCall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='226' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BlockingCall*' -->
          <parameter type-id='80427cd8' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- BlockingCall::~BlockingCall(int) -->
        <function-decl name='~BlockingCall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='231' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BlockingCall*' -->
          <parameter type-id='80427cd8' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='95e97e5e' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef unsigned int (unsigned int)* sleep_f -->
    <typedef-decl name='sleep_f' type-id='17a94daa' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='238' column='1' id='b36b3be2'/>
    <!-- typedef int (typedef long_t)* usleep_f -->
    <typedef-decl name='usleep_f' type-id='fcfbca39' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='245' column='1' id='d98ad8cf'/>
    <!-- typedef int (void*, void*)* nanosleep_f -->
    <typedef-decl name='nanosleep_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='252' column='1' id='53f60640'/>
    <!-- typedef void* (const char*, int)* dlopen_f -->
    <typedef-decl name='dlopen_f' type-id='13f7c742' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='259' column='1' id='d0d4e4cd'/>
    <!-- typedef int (void*)* dlclose_f -->
    <typedef-decl name='dlclose_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='270' column='1' id='aadc1231'/>
    <!-- class AtExitContext -->
    <class-decl name='AtExitContext' size-in-bits='17536' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='281' column='1' id='9420db93'>
      <member-type access='public'>
        <!-- typedef void ()* AtExitContext::atexit_t -->
        <typedef-decl name='atexit_t' type-id='953b12f8' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='288' column='1' id='b7655aa2'/>
      </member-type>
      <data-member access='private' static='yes'>
        <!-- static const int AtExitContext::kMaxAtExit -->
        <var-decl name='kMaxAtExit' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='332' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- __tsan::Mutex AtExitContext::mtx_ -->
        <var-decl name='mtx_' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='333' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- void ()* AtExitContext::stack_[128] -->
        <var-decl name='stack_' type-id='1a187abd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='334' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='8256'>
        <!-- void* AtExitContext::args_[128] -->
        <var-decl name='args_' type-id='47dd7ec8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='335' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='16448'>
        <!-- bool AtExitContext::is_on_exits_[128] -->
        <var-decl name='is_on_exits_' type-id='71ed37c2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='336' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='17472'>
        <!-- int AtExitContext::pos_ -->
        <var-decl name='pos_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='337' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- AtExitContext::AtExitContext() -->
        <function-decl name='AtExitContext' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='283' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'AtExitContext*' -->
          <parameter type-id='9055a6b3' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void AtExitContext::exit(__tsan::ThreadState*, __sanitizer::uptr) -->
        <function-decl name='exit' mangled-name='_ZN13AtExitContext4exitEPN6__tsan11ThreadStateEm' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='303' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'AtExitContext*' -->
          <parameter type-id='9055a6b3' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- parameter of type 'typedef __sanitizer::uptr' -->
          <parameter type-id='c8e929d2'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int AtExitContext::atexit(__tsan::ThreadState*, __sanitizer::uptr, bool, AtExitContext::atexit_t, void*) -->
        <function-decl name='atexit' mangled-name='_ZN13AtExitContext6atexitEPN6__tsan11ThreadStateEmbPFvvEPv' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'AtExitContext*' -->
          <parameter type-id='9055a6b3' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- parameter of type 'typedef __sanitizer::uptr' -->
          <parameter type-id='c8e929d2'/>
          <!-- parameter of type 'bool' -->
          <parameter type-id='c894953d'/>
          <!-- parameter of type 'typedef AtExitContext::atexit_t' -->
          <parameter type-id='b7655aa2'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='eaa32e2f'/>
          <!-- int -->
          <return type-id='95e97e5e'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef int (void ()*)* atexit_f -->
    <typedef-decl name='atexit_f' type-id='11cddbfc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='342' column='1' id='1cd4975c'/>
    <!-- typedef int (void (int, void*)*, void*)* on_exit_f -->
    <typedef-decl name='on_exit_f' type-id='20db5267' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='349' column='1' id='b4099c07'/>
    <!-- typedef int (void (void*)*, void*, void*)* __cxa_atexit_f -->
    <typedef-decl name='__cxa_atexit_f' type-id='1efc7ad0' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1' id='276aaee1'/>
    <!-- typedef int (void*)* setjmp_f -->
    <typedef-decl name='setjmp_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='454' column='1' id='e54ae702'/>
    <!-- typedef int (void*)* _setjmp_f -->
    <typedef-decl name='_setjmp_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='455' column='1' id='e48ae053'/>
    <!-- typedef int (void*)* sigsetjmp_f -->
    <typedef-decl name='sigsetjmp_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='456' column='1' id='e9a6f28b'/>
    <!-- typedef int (void*)* __sigsetjmp_f -->
    <typedef-decl name='__sigsetjmp_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='457' column='1' id='47a97dc5'/>
    <!-- typedef void (__sanitizer::uptr*, int)* longjmp_f -->
    <typedef-decl name='longjmp_f' type-id='9b1489d7' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='459' column='1' id='491aa978'/>
    <!-- typedef void (__sanitizer::uptr*, int)* siglongjmp_f -->
    <typedef-decl name='siglongjmp_f' type-id='9b1489d7' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1' id='4df57093'/>
    <!-- typedef void* (typedef __sanitizer::uptr)* malloc_f -->
    <typedef-decl name='malloc_f' type-id='8b77a933' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='475' column='1' id='3bdd9e39'/>
    <!-- typedef void* (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* __libc_memalign_f -->
    <typedef-decl name='__libc_memalign_f' type-id='d93fa99e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='487' column='1' id='b149ffb8'/>
    <!-- typedef void* (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* calloc_f -->
    <typedef-decl name='calloc_f' type-id='d93fa99e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='492' column='1' id='61c70a7f'/>
    <!-- typedef void* (void*, typedef __sanitizer::uptr)* realloc_f -->
    <typedef-decl name='realloc_f' type-id='ccef1141' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1' id='2d45b4af'/>
    <!-- typedef void (void*)* free_f -->
    <typedef-decl name='free_f' type-id='b7f9d8e6' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='521' column='1' id='ac305533'/>
    <!-- typedef void (void*)* cfree_f -->
    <typedef-decl name='cfree_f' type-id='b7f9d8e6' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='531' column='1' id='0d44f4c6'/>
    <!-- typedef typedef __sanitizer::uptr (void*)* malloc_usable_size_f -->
    <typedef-decl name='malloc_usable_size_f' type-id='6373cd49' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='541' column='1' id='0cf8e96e'/>
    <!-- typedef typedef __sanitizer::uptr (const char*)* strlen_f -->
    <typedef-decl name='strlen_f' type-id='7a2b35ac' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='613' column='1' id='54bb88eb'/>
    <!-- typedef void* (void*, int, typedef __sanitizer::uptr)* memset_f -->
    <typedef-decl name='memset_f' type-id='26565874' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='620' column='1' id='cf324e6e'/>
    <!-- typedef void* (void*, void*, typedef __sanitizer::uptr)* memcpy_f -->
    <typedef-decl name='memcpy_f' type-id='2ea955f7' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='626' column='1' id='9b4546f8'/>
    <!-- typedef int (void*, void*, typedef __sanitizer::uptr)* memcmp_f -->
    <typedef-decl name='memcmp_f' type-id='c33a1d80' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='633' column='1' id='fa9030b2'/>
    <!-- typedef void* (void*, int, typedef __sanitizer::uptr)* memchr_f -->
    <typedef-decl name='memchr_f' type-id='26565874' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='646' column='1' id='5558e99d'/>
    <!-- typedef void* (char*, int, typedef __sanitizer::uptr)* memrchr_f -->
    <typedef-decl name='memrchr_f' type-id='b1d4f4ea' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1' id='dd2e187d'/>
    <!-- typedef void* (void*, void*, typedef __sanitizer::uptr)* memmove_f -->
    <typedef-decl name='memmove_f' type-id='2ea955f7' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='660' column='1' id='aaba677d'/>
    <!-- typedef char* (char*, int)* strchr_f -->
    <typedef-decl name='strchr_f' type-id='f3ff41a1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='667' column='1' id='46cc4fe7'/>
    <!-- typedef char* (char*, int)* strchrnul_f -->
    <typedef-decl name='strchrnul_f' type-id='f3ff41a1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='675' column='1' id='0b1413f4'/>
    <!-- typedef char* (char*, int)* strrchr_f -->
    <typedef-decl name='strrchr_f' type-id='f3ff41a1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1' id='3d1edcf7'/>
    <!-- typedef char* (char*, const char*)* strcpy_f -->
    <typedef-decl name='strcpy_f' type-id='aecce0d1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='689' column='1' id='a9f800c6'/>
    <!-- typedef char* (char*, char*, typedef __sanitizer::uptr)* strncpy_f -->
    <typedef-decl name='strncpy_f' type-id='96e88439' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1' id='4faffbe2'/>
    <!-- typedef const char* (const char*, const char*)* strstr_f -->
    <typedef-decl name='strstr_f' type-id='58d5662f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='705' column='1' id='ba4e17c3'/>
    <!-- typedef char* (const char*)* strdup_f -->
    <typedef-decl name='strdup_f' type-id='73d960c5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='715' column='1' id='03e375f9'/>
    <!-- typedef void* (void*, typedef long_t, int, int, int, unsigned int)* mmap_f -->
    <typedef-decl name='mmap_f' type-id='ccd09d01' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1' id='f78b4d96'/>
    <!-- typedef void* (void*, typedef long_t, int, int, int, typedef __sanitizer::u64)* mmap64_f -->
    <typedef-decl name='mmap64_f' type-id='85473620' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1' id='28c29ab4'/>
    <!-- typedef int (void*, typedef long_t)* munmap_f -->
    <typedef-decl name='munmap_f' type-id='237051e5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='763' column='1' id='95e830db'/>
    <!-- typedef void* (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* memalign_f -->
    <typedef-decl name='memalign_f' type-id='d93fa99e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='770' column='1' id='3e306737'/>
    <!-- typedef void* (typedef __sanitizer::uptr)* valloc_f -->
    <typedef-decl name='valloc_f' type-id='8b77a933' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='775' column='1' id='0b939ac2'/>
    <!-- typedef void* (typedef __sanitizer::uptr)* pvalloc_f -->
    <typedef-decl name='pvalloc_f' type-id='8b77a933' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1' id='ecfa5f0a'/>
    <!-- typedef int (void**, typedef __sanitizer::uptr, typedef __sanitizer::uptr)* posix_memalign_f -->
    <typedef-decl name='posix_memalign_f' type-id='f5542b3d' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1' id='43eba3cb'/>
    <!-- typedef int (void*, void*, void* (void*)*, void*)* pthread_create_f -->
    <typedef-decl name='pthread_create_f' type-id='f4b9479c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1' id='d84d3edc'/>
    <!-- typedef int (void*, void**)* pthread_join_f -->
    <typedef-decl name='pthread_join_f' type-id='1938e4f3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='904' column='1' id='8f8b86f0'/>
    <!-- typedef int (void*)* pthread_detach_f -->
    <typedef-decl name='pthread_detach_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='914' column='1' id='d44ce89f'/>
    <!-- typedef int (void*, void*)* pthread_mutex_init_f -->
    <typedef-decl name='pthread_mutex_init_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='924' column='1' id='7b83b89e'/>
    <!-- typedef int (void*)* pthread_mutex_destroy_f -->
    <typedef-decl name='pthread_mutex_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='940' column='1' id='8cf2bcf0'/>
    <!-- typedef int (void*)* pthread_mutex_trylock_f -->
    <typedef-decl name='pthread_mutex_trylock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='949' column='1' id='a7b7fb24'/>
    <!-- typedef int (void*, void*)* pthread_mutex_timedlock_f -->
    <typedef-decl name='pthread_mutex_timedlock_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='959' column='1' id='d9ebba72'/>
    <!-- typedef int (void*, int)* pthread_spin_init_f -->
    <typedef-decl name='pthread_spin_init_f' type-id='dbff155c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='968' column='1' id='76924835'/>
    <!-- typedef int (void*)* pthread_spin_destroy_f -->
    <typedef-decl name='pthread_spin_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='977' column='1' id='64fa7201'/>
    <!-- typedef int (void*)* pthread_spin_lock_f -->
    <typedef-decl name='pthread_spin_lock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='986' column='1' id='107b1d8c'/>
    <!-- typedef int (void*)* pthread_spin_trylock_f -->
    <typedef-decl name='pthread_spin_trylock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='995' column='1' id='151ca791'/>
    <!-- typedef int (void*)* pthread_spin_unlock_f -->
    <typedef-decl name='pthread_spin_unlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1004' column='1' id='ddd0e48b'/>
    <!-- typedef int (void*, void*)* pthread_rwlock_init_f -->
    <typedef-decl name='pthread_rwlock_init_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1011' column='1' id='28407a1d'/>
    <!-- typedef int (void*)* pthread_rwlock_destroy_f -->
    <typedef-decl name='pthread_rwlock_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1020' column='1' id='aeb14969'/>
    <!-- typedef int (void*)* pthread_rwlock_rdlock_f -->
    <typedef-decl name='pthread_rwlock_rdlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1029' column='1' id='045b4f42'/>
    <!-- typedef int (void*)* pthread_rwlock_tryrdlock_f -->
    <typedef-decl name='pthread_rwlock_tryrdlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1038' column='1' id='e04c6f47'/>
    <!-- typedef int (void*, void*)* pthread_rwlock_timedrdlock_f -->
    <typedef-decl name='pthread_rwlock_timedrdlock_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1047' column='1' id='4ad9e681'/>
    <!-- typedef int (void*)* pthread_rwlock_wrlock_f -->
    <typedef-decl name='pthread_rwlock_wrlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1056' column='1' id='41e7978d'/>
    <!-- typedef int (void*)* pthread_rwlock_trywrlock_f -->
    <typedef-decl name='pthread_rwlock_trywrlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1065' column='1' id='4aa8c05c'/>
    <!-- typedef int (void*, void*)* pthread_rwlock_timedwrlock_f -->
    <typedef-decl name='pthread_rwlock_timedwrlock_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1074' column='1' id='a573726a'/>
    <!-- typedef int (void*)* pthread_rwlock_unlock_f -->
    <typedef-decl name='pthread_rwlock_unlock_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1083' column='1' id='e46ade43'/>
    <!-- typedef int (void*)* pthread_cond_destroy_f -->
    <typedef-decl name='pthread_cond_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1090' column='1' id='dd703ddd'/>
    <!-- typedef int (void*, void*, void*)* pthread_cond_timedwait_f -->
    <typedef-decl name='pthread_cond_timedwait_f' type-id='84812415' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1' id='980809b1'/>
    <!-- typedef int (void*, void*, unsigned int)* pthread_barrier_init_f -->
    <typedef-decl name='pthread_barrier_init_f' type-id='40a3f6a3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1' id='48211ad2'/>
    <!-- typedef int (void*)* pthread_barrier_destroy_f -->
    <typedef-decl name='pthread_barrier_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1114' column='1' id='86fa158c'/>
    <!-- typedef int (void*)* pthread_barrier_wait_f -->
    <typedef-decl name='pthread_barrier_wait_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1121' column='1' id='752aeddd'/>
    <!-- typedef int (void*, void ()*)* pthread_once_f -->
    <typedef-decl name='pthread_once_f' type-id='d7130ce8' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1133' column='1' id='3768f4a1'/>
    <!-- typedef int (void*, int, unsigned int)* sem_init_f -->
    <typedef-decl name='sem_init_f' type-id='8f145e16' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1' id='8ac09a03'/>
    <!-- typedef int (void*)* sem_destroy_f -->
    <typedef-decl name='sem_destroy_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1168' column='1' id='b88db2ab'/>
    <!-- typedef int (void*)* sem_wait_f -->
    <typedef-decl name='sem_wait_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1174' column='1' id='90821004'/>
    <!-- typedef int (void*)* sem_trywait_f -->
    <typedef-decl name='sem_trywait_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1183' column='1' id='10413675'/>
    <!-- typedef int (void*, void*)* sem_timedwait_f -->
    <typedef-decl name='sem_timedwait_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1192' column='1' id='73986c9f'/>
    <!-- typedef int (void*)* sem_post_f -->
    <typedef-decl name='sem_post_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1201' column='1' id='de36a55b'/>
    <!-- typedef int (void*, int*)* sem_getvalue_f -->
    <typedef-decl name='sem_getvalue_f' type-id='bbaaa2c4' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1' id='27ece798'/>
    <!-- typedef int (int, const char*, void*)* __xstat_f -->
    <typedef-decl name='__xstat_f' type-id='9bce4873' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1217' column='1' id='b8997085'/>
    <!-- typedef int (const char*, void*)* stat_f -->
    <typedef-decl name='stat_f' type-id='bbe66bb2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1222' column='1' id='06298a7f'/>
    <!-- typedef int (int, const char*, void*)* __xstat64_f -->
    <typedef-decl name='__xstat64_f' type-id='9bce4873' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1227' column='1' id='6e4bed47'/>
    <!-- typedef int (const char*, void*)* stat64_f -->
    <typedef-decl name='stat64_f' type-id='bbe66bb2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1232' column='1' id='f71e0e55'/>
    <!-- typedef int (int, const char*, void*)* __lxstat_f -->
    <typedef-decl name='__lxstat_f' type-id='9bce4873' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1237' column='1' id='e73f277d'/>
    <!-- typedef int (const char*, void*)* lstat_f -->
    <typedef-decl name='lstat_f' type-id='bbe66bb2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1242' column='1' id='4ba5a463'/>
    <!-- typedef int (int, const char*, void*)* __lxstat64_f -->
    <typedef-decl name='__lxstat64_f' type-id='9bce4873' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1247' column='1' id='92419e1f'/>
    <!-- typedef int (const char*, void*)* lstat64_f -->
    <typedef-decl name='lstat64_f' type-id='bbe66bb2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1252' column='1' id='d9faab09'/>
    <!-- typedef int (int, int, void*)* __fxstat_f -->
    <typedef-decl name='__fxstat_f' type-id='d08b57b3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1257' column='1' id='f1889c2f'/>
    <!-- typedef int (int, void*)* fstat_f -->
    <typedef-decl name='fstat_f' type-id='2e711a2a' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1264' column='1' id='d32fce15'/>
    <!-- typedef int (int, int, void*)* __fxstat64_f -->
    <typedef-decl name='__fxstat64_f' type-id='d08b57b3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1271' column='1' id='4b443905'/>
    <!-- typedef int (int, void*)* fstat64_f -->
    <typedef-decl name='fstat64_f' type-id='2e711a2a' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1278' column='1' id='865bc697'/>
    <!-- typedef int (const char*, int, int)* open_f -->
    <typedef-decl name='open_f' type-id='6e85562e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1285' column='1' id='c866701d'/>
    <!-- typedef int (const char*, int, int)* open64_f -->
    <typedef-decl name='open64_f' type-id='6e85562e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1' id='33a3acbf'/>
    <!-- typedef int (const char*, int)* creat_f -->
    <typedef-decl name='creat_f' type-id='04e86f97' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1301' column='1' id='cfd91750'/>
    <!-- typedef int (const char*, int)* creat64_f -->
    <typedef-decl name='creat64_f' type-id='04e86f97' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1' id='4b45b162'/>
    <!-- typedef int (int)* dup_f -->
    <typedef-decl name='dup_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1317' column='1' id='616fb758'/>
    <!-- typedef int (int, int)* dup2_f -->
    <typedef-decl name='dup2_f' type-id='ba83cbff' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1325' column='1' id='bd9564c8'/>
    <!-- typedef int (int, int, int)* dup3_f -->
    <typedef-decl name='dup3_f' type-id='44c6d296' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1333' column='1' id='230cdd13'/>
    <!-- typedef int (unsigned int, int)* eventfd_f -->
    <typedef-decl name='eventfd_f' type-id='c192576a' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1341' column='1' id='fd5452a7'/>
    <!-- typedef int (int, void*, int)* signalfd_f -->
    <typedef-decl name='signalfd_f' type-id='ab463111' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1' id='597efc9b'/>
    <!-- typedef int (int)* inotify_init_f -->
    <typedef-decl name='inotify_init_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1359' column='1' id='ab7cd0dc'/>
    <!-- typedef int (int)* inotify_init1_f -->
    <typedef-decl name='inotify_init1_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1367' column='1' id='f7a2cb59'/>
    <!-- typedef int (int, int, int)* socket_f -->
    <typedef-decl name='socket_f' type-id='44c6d296' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1' id='1c6a8ec0'/>
    <!-- typedef int (int, int, int, int*)* socketpair_f -->
    <typedef-decl name='socketpair_f' type-id='e148fa8f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1' id='aa8cca1c'/>
    <!-- typedef int (int, void*, unsigned int)* connect_f -->
    <typedef-decl name='connect_f' type-id='e5d8a4b0' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1391' column='1' id='5acc9333'/>
    <!-- typedef int (int, void*, unsigned int)* bind_f -->
    <typedef-decl name='bind_f' type-id='e5d8a4b0' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1' id='7ab177f6'/>
    <!-- typedef int (int, int)* listen_f -->
    <typedef-decl name='listen_f' type-id='ba83cbff' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1408' column='1' id='551c8d1a'/>
    <!-- typedef int (int)* epoll_create_f -->
    <typedef-decl name='epoll_create_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1416' column='1' id='3ea3d96a'/>
    <!-- typedef int (int)* epoll_create1_f -->
    <typedef-decl name='epoll_create1_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1424' column='1' id='9689fdd3'/>
    <!-- typedef int (int)* close_f -->
    <typedef-decl name='close_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1432' column='1' id='b40c89a1'/>
    <!-- typedef int (int)* __close_f -->
    <typedef-decl name='__close_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1439' column='1' id='0c2fd74f'/>
    <!-- typedef void (void*, bool)* __res_iclose_f -->
    <typedef-decl name='__res_iclose_f' type-id='7f8b4dc2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1447' column='1' id='ca4300cd'/>
    <!-- typedef int (int*)* pipe_f -->
    <typedef-decl name='pipe_f' type-id='81436ec0' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1458' column='1' id='fb0ba0c1'/>
    <!-- typedef int (int*, int)* pipe2_f -->
    <typedef-decl name='pipe2_f' type-id='6b7f122f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1466' column='1' id='ac967ca7'/>
    <!-- typedef typedef long_t (int, void*, typedef long_t, int)* send_f -->
    <typedef-decl name='send_f' type-id='c49ffbd4' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1474' column='1' id='7f782003'/>
    <!-- typedef typedef long_t (int, void*, int)* sendmsg_f -->
    <typedef-decl name='sendmsg_f' type-id='86fbe384' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1' id='82e1e5ca'/>
    <!-- typedef typedef long_t (int, void*, typedef long_t, int)* recv_f -->
    <typedef-decl name='recv_f' type-id='c49ffbd4' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1' id='39850d35'/>
    <!-- typedef int (char*)* unlink_f -->
    <typedef-decl name='unlink_f' type-id='7d760683' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1505' column='1' id='165d2356'/>
    <!-- typedef void* (char*, char*)* fopen_f -->
    <typedef-decl name='fopen_f' type-id='c0da602c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1512' column='1' id='4d4dba4f'/>
    <!-- typedef void* (char*, char*, void*)* freopen_f -->
    <typedef-decl name='freopen_f' type-id='421fb61e' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1' id='25001612'/>
    <!-- typedef int (void*)* fclose_f -->
    <typedef-decl name='fclose_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1541' column='1' id='072efd4b'/>
    <!-- typedef typedef __sanitizer::uptr (void*, typedef __sanitizer::uptr, typedef __sanitizer::uptr, void*)* fread_f -->
    <typedef-decl name='fread_f' type-id='48703143' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1554' column='1' id='4b083b97'/>
    <!-- typedef typedef __sanitizer::uptr (void*, typedef __sanitizer::uptr, typedef __sanitizer::uptr, void*)* fwrite_f -->
    <typedef-decl name='fwrite_f' type-id='48703143' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1' id='0c074bbc'/>
    <!-- typedef int (void*)* fflush_f -->
    <typedef-decl name='fflush_f' type-id='b9b212f5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1572' column='1' id='24d3b561'/>
    <!-- typedef void (int)* abort_f -->
    <typedef-decl name='abort_f' type-id='03347643' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1580' column='1' id='1990bf27'/>
    <!-- typedef int (const char*)* puts_f -->
    <typedef-decl name='puts_f' type-id='70487b28' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1586' column='1' id='c52e4133'/>
    <!-- typedef int (char*)* rmdir_f -->
    <typedef-decl name='rmdir_f' type-id='7d760683' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1592' column='1' id='10879e85'/>
    <!-- typedef void* (char*)* opendir_f -->
    <typedef-decl name='opendir_f' type-id='db1fbf00' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1599' column='1' id='b892f116'/>
    <!-- typedef int (int, int, int, void*)* epoll_ctl_f -->
    <typedef-decl name='epoll_ctl_f' type-id='0ca625d8' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1' id='c6b78825'/>
    <!-- typedef int (int, void*, int, int)* epoll_wait_f -->
    <typedef-decl name='epoll_wait_f' type-id='7a35cd18' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1' id='f1a50127'/>
    <!-- typedef int (int, sigaction_t*, sigaction_t*)* sigaction_f -->
    <typedef-decl name='sigaction_f' type-id='195e87c8' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1' id='d9be16f6'/>
    <!-- typedef typedef sighandler_t (int, typedef sighandler_t)* signal_f -->
    <typedef-decl name='signal_f' type-id='b7a175f3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1698' column='1' id='d74239b9'/>
    <!-- typedef int (const __sanitizer::__sanitizer_sigset_t*)* sigsuspend_f -->
    <typedef-decl name='sigsuspend_f' type-id='9c37045f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1710' column='1' id='2bcc6d6a'/>
    <!-- typedef int (int)* raise_f -->
    <typedef-decl name='raise_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1715' column='1' id='2369d32d'/>
    <!-- typedef int (int, int)* kill_f -->
    <typedef-decl name='kill_f' type-id='ba83cbff' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1727' column='1' id='462e314d'/>
    <!-- typedef int (void*, int)* pthread_kill_f -->
    <typedef-decl name='pthread_kill_f' type-id='dbff155c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1' id='7094c300'/>
    <!-- typedef int (void*, void*)* gettimeofday_f -->
    <typedef-decl name='gettimeofday_f' type-id='585e1de9' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1759' column='1' id='55d1f3df'/>
    <!-- typedef int (void*, void*, void*, void*)* getaddrinfo_f -->
    <typedef-decl name='getaddrinfo_f' type-id='e8fed509' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1' id='af3e9a72'/>
    <!-- typedef int (void*, typedef __sanitizer::uptr)* mlock_f -->
    <typedef-decl name='mlock_f' type-id='1c5594fc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1' id='9e5f99ed'/>
    <!-- typedef int (void*, typedef __sanitizer::uptr)* munlock_f -->
    <typedef-decl name='munlock_f' type-id='1c5594fc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1796' column='1' id='5ffdec7e'/>
    <!-- typedef int (int)* mlockall_f -->
    <typedef-decl name='mlockall_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1801' column='1' id='111bdfea'/>
    <!-- typedef int ()* munlockall_f -->
    <typedef-decl name='munlockall_f' type-id='1db260e5' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1806' column='1' id='5a1bc08f'/>
    <!-- typedef int (int)* fork_f -->
    <typedef-decl name='fork_f' type-id='7f416e10' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1811' column='1' id='bee80139'/>
    <!-- struct ScopedSyscall -->
    <class-decl name='ScopedSyscall' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1920' column='1' id='a5dfa7aa'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __tsan::ThreadState* ScopedSyscall::thr -->
        <var-decl name='thr' type-id='8111c228' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1921' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- ScopedSyscall::ScopedSyscall(__tsan::ThreadState*) -->
        <function-decl name='ScopedSyscall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1923' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedSyscall*' -->
          <parameter type-id='16f04aa8' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- ScopedSyscall::~ScopedSyscall(int) -->
        <function-decl name='~ScopedSyscall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1930' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedSyscall*' -->
          <parameter type-id='16f04aa8' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='95e97e5e' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- AtExitContext* -->
    <pointer-type-def type-id='9420db93' size-in-bits='64' id='9055a6b3'/>
    <!-- BlockingCall* -->
    <pointer-type-def type-id='099b32fa' size-in-bits='64' id='80427cd8'/>
    <!-- SIZE_T* -->
    <pointer-type-def type-id='883d32ae' size-in-bits='64' id='bb423747'/>
    <!-- ScopedInterceptor* -->
    <pointer-type-def type-id='27eb98a4' size-in-bits='64' id='24283232'/>
    <!-- ScopedSyscall* -->
    <pointer-type-def type-id='a5dfa7aa' size-in-bits='64' id='16f04aa8'/>
    <!-- __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>* -->
    <pointer-type-def type-id='dd65c438' size-in-bits='64' id='a0d5050e'/>
    <!-- __sanitizer::GenericScopedLock<__tsan::Mutex>* -->
    <pointer-type-def type-id='b6676417' size-in-bits='64' id='b22dff1f'/>
    <!-- __sanitizer::__sanitizer___kernel_fd_set* -->
    <pointer-type-def type-id='777073a0' size-in-bits='64' id='bddfe521'/>
    <!-- __sanitizer::__sanitizer___kernel_gid_t* -->
    <pointer-type-def type-id='87d14f40' size-in-bits='64' id='19723dcf'/>
    <!-- __sanitizer::__sanitizer___kernel_loff_t* -->
    <pointer-type-def type-id='034f6b6b' size-in-bits='64' id='a42f551c'/>
    <!-- __sanitizer::__sanitizer___kernel_off_t* -->
    <pointer-type-def type-id='9d293059' size-in-bits='64' id='a6d86880'/>
    <!-- __sanitizer::__sanitizer___kernel_old_gid_t* -->
    <pointer-type-def type-id='78f882ea' size-in-bits='64' id='f628a8d1'/>
    <!-- __sanitizer::__sanitizer___kernel_old_uid_t* -->
    <pointer-type-def type-id='e0789dcc' size-in-bits='64' id='20b68dfb'/>
    <!-- __sanitizer::__sanitizer___sysctl_args* -->
    <pointer-type-def type-id='c8641710' size-in-bits='64' id='3b9d21c6'/>
    <!-- __sanitizer::__sanitizer_dirent* -->
    <pointer-type-def type-id='6e0e7838' size-in-bits='64' id='a2bd35ce'/>
    <!-- __sanitizer::__sanitizer_dirent* (void*)* -->
    <pointer-type-def type-id='a65cd2a1' size-in-bits='64' id='e9d565e5'/>
    <!-- __sanitizer::__sanitizer_dirent** -->
    <pointer-type-def type-id='a2bd35ce' size-in-bits='64' id='13dbd5ec'/>
    <!-- __sanitizer::__sanitizer_dirent*** -->
    <pointer-type-def type-id='13dbd5ec' size-in-bits='64' id='091186b2'/>
    <!-- __sanitizer::__sanitizer_dirent64* -->
    <pointer-type-def type-id='41423b9a' size-in-bits='64' id='1f0707a8'/>
    <!-- __sanitizer::__sanitizer_dirent64* (void*)* -->
    <pointer-type-def type-id='bfc524cf' size-in-bits='64' id='4aac6d53'/>
    <!-- __sanitizer::__sanitizer_dirent64** -->
    <pointer-type-def type-id='1f0707a8' size-in-bits='64' id='5a10d1a6'/>
    <!-- __sanitizer::__sanitizer_dirent64*** -->
    <pointer-type-def type-id='5a10d1a6' size-in-bits='64' id='5479df64'/>
    <!-- __sanitizer::__sanitizer_ether_addr* -->
    <pointer-type-def type-id='ed7ea166' size-in-bits='64' id='23990d3c'/>
    <!-- __sanitizer::__sanitizer_ether_addr* (char*)* -->
    <pointer-type-def type-id='c0409091' size-in-bits='64' id='9aa0a0ad'/>
    <!-- __sanitizer::__sanitizer_ether_addr* (char*, __sanitizer::__sanitizer_ether_addr*)* -->
    <pointer-type-def type-id='d9f6d656' size-in-bits='64' id='78f30e40'/>
    <!-- __sanitizer::__sanitizer_hostent* -->
    <pointer-type-def type-id='7a257f83' size-in-bits='64' id='cb045ea3'/>
    <!-- __sanitizer::__sanitizer_hostent* (char*)* -->
    <pointer-type-def type-id='95c782aa' size-in-bits='64' id='97a59eec'/>
    <!-- __sanitizer::__sanitizer_hostent* (char*, int)* -->
    <pointer-type-def type-id='a159e29f' size-in-bits='64' id='951cabeb'/>
    <!-- __sanitizer::__sanitizer_hostent* (int)* -->
    <pointer-type-def type-id='7d415b2b' size-in-bits='64' id='731edcaf'/>
    <!-- __sanitizer::__sanitizer_hostent* (void*, int, int)* -->
    <pointer-type-def type-id='40c801c6' size-in-bits='64' id='480c26c8'/>
    <!-- __sanitizer::__sanitizer_hostent** -->
    <pointer-type-def type-id='cb045ea3' size-in-bits='64' id='20e0d1ab'/>
    <!-- __sanitizer::__sanitizer_io_event* -->
    <pointer-type-def type-id='d32134cf' size-in-bits='64' id='45c8bbd7'/>
    <!-- __sanitizer::__sanitizer_iocb* -->
    <pointer-type-def type-id='e4aa4949' size-in-bits='64' id='46862f31'/>
    <!-- __sanitizer::__sanitizer_iocb** -->
    <pointer-type-def type-id='46862f31' size-in-bits='64' id='203c2781'/>
    <!-- __sanitizer::__sanitizer_iovec* -->
    <pointer-type-def type-id='3fd74eaa' size-in-bits='64' id='36c19aa8'/>
    <!-- __sanitizer::__sanitizer_mntent* -->
    <pointer-type-def type-id='0b02c0a6' size-in-bits='64' id='fd509f4c'/>
    <!-- __sanitizer::__sanitizer_mntent* (void*)* -->
    <pointer-type-def type-id='d62569bb' size-in-bits='64' id='9a05c377'/>
    <!-- __sanitizer::__sanitizer_mntent* (void*, __sanitizer::__sanitizer_mntent*, char*, int)* -->
    <pointer-type-def type-id='0dd66ac9' size-in-bits='64' id='44da291d'/>
    <!-- __sanitizer::__sanitizer_msghdr* -->
    <pointer-type-def type-id='3f07df19' size-in-bits='64' id='30239581'/>
    <!-- __sanitizer::__sanitizer_perf_event_attr* -->
    <pointer-type-def type-id='65f60ffa' size-in-bits='64' id='b90aae48'/>
    <!-- __sanitizer::__sanitizer_pollfd* -->
    <pointer-type-def type-id='41f84d7b' size-in-bits='64' id='8eba518b'/>
    <!-- __sanitizer::__sanitizer_sigset_t* -->
    <pointer-type-def type-id='0735853c' size-in-bits='64' id='be744a7a'/>
    <!-- __sanitizer::__sanitizer_tm* -->
    <pointer-type-def type-id='b4997f07' size-in-bits='64' id='16088d5f'/>
    <!-- __sanitizer::__sanitizer_tm* (unsigned long int*)* -->
    <pointer-type-def type-id='fb4dde82' size-in-bits='64' id='abd47c5c'/>
    <!-- __sanitizer::__sanitizer_tm* (unsigned long int*, void*)* -->
    <pointer-type-def type-id='4ee9d5dc' size-in-bits='64' id='dc75548e'/>
    <!-- __sanitizer::__sanitizer_wordexp_t* -->
    <pointer-type-def type-id='7c9f2ec8' size-in-bits='64' id='47896ade'/>
    <!-- __sanitizer::atomic_uint32_t* -->
    <pointer-type-def type-id='8e51b2c2' size-in-bits='64' id='73446da0'/>
    <!-- __sanitizer::atomic_uint32_t::Type* -->
    <pointer-type-def type-id='9c64597f' size-in-bits='64' id='7ac9e8fc'/>
    <!-- __tsan::ReportDesc* -->
    <pointer-type-def type-id='0ab0b57e' size-in-bits='64' id='558ea3b4'/>
    <!-- __tsan::ReportLocation* -->
    <pointer-type-def type-id='a11dae14' size-in-bits='64' id='9c4444e2'/>
    <!-- __tsan::ReportLocation* const -->
    <qualified-type-def type-id='9c4444e2' const='yes' id='604e9c6d'/>
    <!-- __tsan::ReportLocation* const& -->
    <reference-type-def kind='lvalue' type-id='604e9c6d' size-in-bits='64' id='e6c00a11'/>
    <!-- __tsan::ReportLocation*& -->
    <reference-type-def kind='lvalue' type-id='9c4444e2' size-in-bits='64' id='c378408c'/>
    <!-- __tsan::ReportLocation** -->
    <pointer-type-def type-id='9c4444e2' size-in-bits='64' id='c77846d8'/>
    <!-- __tsan::ReportMop* -->
    <pointer-type-def type-id='2d49419d' size-in-bits='64' id='62ce8cdd'/>
    <!-- __tsan::ReportMop* const -->
    <qualified-type-def type-id='62ce8cdd' const='yes' id='51e4b5b2'/>
    <!-- __tsan::ReportMop* const& -->
    <reference-type-def kind='lvalue' type-id='51e4b5b2' size-in-bits='64' id='7f09d7fc'/>
    <!-- __tsan::ReportMop*& -->
    <reference-type-def kind='lvalue' type-id='62ce8cdd' size-in-bits='64' id='8627ef21'/>
    <!-- __tsan::ReportMop** -->
    <pointer-type-def type-id='62ce8cdd' size-in-bits='64' id='8227e8d5'/>
    <!-- __tsan::ReportMopMutex& -->
    <reference-type-def kind='lvalue' type-id='8fb9d30c' size-in-bits='64' id='58a8d046'/>
    <!-- __tsan::ReportMopMutex* -->
    <pointer-type-def type-id='8fb9d30c' size-in-bits='64' id='64a8e32a'/>
    <!-- __tsan::ReportMutex* -->
    <pointer-type-def type-id='4cfd52c6' size-in-bits='64' id='9c35ae8c'/>
    <!-- __tsan::ReportMutex* const -->
    <qualified-type-def type-id='9c35ae8c' const='yes' id='db57e937'/>
    <!-- __tsan::ReportMutex* const& -->
    <reference-type-def kind='lvalue' type-id='db57e937' size-in-bits='64' id='5c63e5c3'/>
    <!-- __tsan::ReportMutex*& -->
    <reference-type-def kind='lvalue' type-id='9c35ae8c' size-in-bits='64' id='9281f59e'/>
    <!-- __tsan::ReportMutex** -->
    <pointer-type-def type-id='9c35ae8c' size-in-bits='64' id='8e81ef52'/>
    <!-- __tsan::ReportStack* -->
    <pointer-type-def type-id='22d334d5' size-in-bits='64' id='7db73ee5'/>
    <!-- __tsan::ReportStack* const -->
    <qualified-type-def type-id='7db73ee5' const='yes' id='466cd5da'/>
    <!-- __tsan::ReportStack* const& -->
    <reference-type-def kind='lvalue' type-id='466cd5da' size-in-bits='64' id='d954dbb4'/>
    <!-- __tsan::ReportStack*& -->
    <reference-type-def kind='lvalue' type-id='7db73ee5' size-in-bits='64' id='aa77ccf9'/>
    <!-- __tsan::ReportStack** -->
    <pointer-type-def type-id='7db73ee5' size-in-bits='64' id='b677dfdd'/>
    <!-- __tsan::ReportThread* -->
    <pointer-type-def type-id='84fbe4eb' size-in-bits='64' id='ba91cbbb'/>
    <!-- __tsan::ReportThread* const -->
    <qualified-type-def type-id='ba91cbbb' const='yes' id='b81529b0'/>
    <!-- __tsan::ReportThread* const& -->
    <reference-type-def kind='lvalue' type-id='b81529b0' size-in-bits='64' id='5f507722'/>
    <!-- __tsan::ReportThread*& -->
    <reference-type-def kind='lvalue' type-id='ba91cbbb' size-in-bits='64' id='50838827'/>
    <!-- __tsan::ReportThread** -->
    <pointer-type-def type-id='ba91cbbb' size-in-bits='64' id='44837543'/>
    <!-- __tsan::ScopedReport* -->
    <pointer-type-def type-id='e51318fb' size-in-bits='64' id='6cf13deb'/>
    <!-- __tsan::Shadow* -->
    <pointer-type-def type-id='9a6b58a9' size-in-bits='64' id='74ae3dc1'/>
    <!-- __tsan::StackTrace* -->
    <pointer-type-def type-id='27c6bf14' size-in-bits='64' id='e56fe152'/>
    <!-- __tsan::ThreadState* const -->
    <qualified-type-def type-id='8111c228' const='yes' id='0bdbb7fb'/>
    <!-- __tsan::Vector<__tsan::ReportLocation*>* -->
    <pointer-type-def type-id='4525918b' size-in-bits='64' id='5348bc7b'/>
    <!-- __tsan::Vector<__tsan::ReportMop*>* -->
    <pointer-type-def type-id='8ec11ba8' size-in-bits='64' id='cbb055ee'/>
    <!-- __tsan::Vector<__tsan::ReportMopMutex>* -->
    <pointer-type-def type-id='92f540bf' size-in-bits='64' id='d6ccdd47'/>
    <!-- __tsan::Vector<__tsan::ReportMutex*>* -->
    <pointer-type-def type-id='5beae62f' size-in-bits='64' id='b189e4c7'/>
    <!-- __tsan::Vector<__tsan::ReportStack*>* -->
    <pointer-type-def type-id='4de68f98' size-in-bits='64' id='c9b1320e'/>
    <!-- __tsan::Vector<__tsan::ReportThread*>* -->
    <pointer-type-def type-id='bd4a0bb0' size-in-bits='64' id='e3333df6'/>
    <!-- char* (__sanitizer::__sanitizer_ether_addr*)* -->
    <pointer-type-def type-id='f2b95e1b' size-in-bits='64' id='7c55e4bf'/>
    <!-- char* (__sanitizer::__sanitizer_ether_addr*, char*)* -->
    <pointer-type-def type-id='31da07ed' size-in-bits='64' id='a74aebd1'/>
    <!-- char* (__sanitizer::__sanitizer_tm*)* -->
    <pointer-type-def type-id='e4c292de' size-in-bits='64' id='e2f20fb8'/>
    <!-- char* (__sanitizer::__sanitizer_tm*, char*)* -->
    <pointer-type-def type-id='92cbcbf2' size-in-bits='64' id='c0ff0864'/>
    <!-- char* (char*)* -->
    <pointer-type-def type-id='4dbec760' size-in-bits='64' id='bf1738fa'/>
    <!-- char* (char*, char*)* -->
    <pointer-type-def type-id='7aef30cc' size-in-bits='64' id='a181d2be'/>
    <!-- char* (char*, char*, __sanitizer::__sanitizer_tm*)* -->
    <pointer-type-def type-id='632673f6' size-in-bits='64' id='f4cfe0d0'/>
    <!-- char* (char*, char*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='b7c554a5' size-in-bits='64' id='96e88439'/>
    <!-- char* (char*, const char*)* -->
    <pointer-type-def type-id='65561fc5' size-in-bits='64' id='aecce0d1'/>
    <!-- char* (char*, int)* -->
    <pointer-type-def type-id='caefc26d' size-in-bits='64' id='f3ff41a1'/>
    <!-- char* (char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='c385b5ed' size-in-bits='64' id='cdee8de9'/>
    <!-- char* (const char*)* -->
    <pointer-type-def type-id='1258b361' size-in-bits='64' id='73d960c5'/>
    <!-- char* (const char*, char*)* -->
    <pointer-type-def type-id='d7da27e3' size-in-bits='64' id='1be230ef'/>
    <!-- char* (int)* -->
    <pointer-type-def type-id='22922811' size-in-bits='64' id='b8f8ba6d'/>
    <!-- char* (int, char*)* -->
    <pointer-type-def type-id='e24dab53' size-in-bits='64' id='d7e01157'/>
    <!-- char* (int, char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='d1507e3e' size-in-bits='64' id='a35ec0d0'/>
    <!-- char* (int, void*, char*, typedef __sanitizer::u32)* -->
    <pointer-type-def type-id='4f231697' size-in-bits='64' id='8885abbb'/>
    <!-- char* (unsigned long int*)* -->
    <pointer-type-def type-id='c945cb88' size-in-bits='64' id='d76a822a'/>
    <!-- char* (unsigned long int*, char*)* -->
    <pointer-type-def type-id='01a2e7f4' size-in-bits='64' id='f60b342e'/>
    <!-- char** (void**, int)* -->
    <pointer-type-def type-id='f724d123' size-in-bits='64' id='1e4a8e2f'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry> -->
    <qualified-type-def type-id='dd65c438' const='yes' id='3aed4607'/>
    <!-- const __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>& -->
    <reference-type-def kind='lvalue' type-id='3aed4607' size-in-bits='64' id='e48565f3'/>
    <!-- const __sanitizer::GenericScopedLock<__tsan::Mutex> -->
    <qualified-type-def type-id='b6676417' const='yes' id='8d613e34'/>
    <!-- const __sanitizer::GenericScopedLock<__tsan::Mutex>& -->
    <reference-type-def kind='lvalue' type-id='8d613e34' size-in-bits='64' id='a214b656'/>
    <!-- const __sanitizer::__sanitizer_dirent -->
    <qualified-type-def type-id='6e0e7838' const='yes' id='73eaa9ab'/>
    <!-- const __sanitizer::__sanitizer_dirent* -->
    <pointer-type-def type-id='73eaa9ab' size-in-bits='64' id='fb68d613'/>
    <!-- const __sanitizer::__sanitizer_dirent** -->
    <pointer-type-def type-id='fb68d613' size-in-bits='64' id='ff093bbb'/>
    <!-- const __sanitizer::__sanitizer_dirent64 -->
    <qualified-type-def type-id='41423b9a' const='yes' id='ed4e43e9'/>
    <!-- const __sanitizer::__sanitizer_dirent64* -->
    <pointer-type-def type-id='ed4e43e9' size-in-bits='64' id='5534abf9'/>
    <!-- const __sanitizer::__sanitizer_dirent64** -->
    <pointer-type-def type-id='5534abf9' size-in-bits='64' id='f4ea7d29'/>
    <!-- const __sanitizer::__sanitizer_iovec -->
    <qualified-type-def type-id='3fd74eaa' const='yes' id='822ebef3'/>
    <!-- const __sanitizer::__sanitizer_iovec* -->
    <pointer-type-def type-id='822ebef3' size-in-bits='64' id='c8966f9b'/>
    <!-- const __sanitizer::__sanitizer_sigset_t -->
    <qualified-type-def type-id='0735853c' const='yes' id='ae6bef1b'/>
    <!-- const __sanitizer::__sanitizer_sigset_t* -->
    <pointer-type-def type-id='ae6bef1b' size-in-bits='64' id='c4e98a23'/>
    <!-- const __tsan::FastState& -->
    <reference-type-def kind='lvalue' type-id='f31faca7' size-in-bits='64' id='3bdc8f13'/>
    <!-- const __tsan::ReportDesc -->
    <qualified-type-def type-id='0ab0b57e' const='yes' id='94c12bc7'/>
    <!-- const __tsan::ReportDesc& -->
    <reference-type-def kind='lvalue' type-id='94c12bc7' size-in-bits='64' id='0d181333'/>
    <!-- const __tsan::ReportDesc* -->
    <pointer-type-def type-id='94c12bc7' size-in-bits='64' id='19182617'/>
    <!-- const __tsan::ReportLocation -->
    <qualified-type-def type-id='a11dae14' const='yes' id='e30b288d'/>
    <!-- const __tsan::ReportLocation* -->
    <pointer-type-def type-id='e30b288d' size-in-bits='64' id='1190fee5'/>
    <!-- const __tsan::ReportMopMutex -->
    <qualified-type-def type-id='8fb9d30c' const='yes' id='ec60edc5'/>
    <!-- const __tsan::ReportMopMutex& -->
    <reference-type-def kind='lvalue' type-id='ec60edc5' size-in-bits='64' id='ff967c59'/>
    <!-- const __tsan::ReportStack -->
    <qualified-type-def type-id='22d334d5' const='yes' id='574cc3d6'/>
    <!-- const __tsan::ReportStack* -->
    <pointer-type-def type-id='574cc3d6' size-in-bits='64' id='69d885b4'/>
    <!-- const __tsan::ScopedReport -->
    <qualified-type-def type-id='e51318fb' const='yes' id='4fcc097e'/>
    <!-- const __tsan::ScopedReport& -->
    <reference-type-def kind='lvalue' type-id='4fcc097e' size-in-bits='64' id='f632b588'/>
    <!-- const __tsan::ScopedReport* -->
    <pointer-type-def type-id='4fcc097e' size-in-bits='64' id='f232af3c'/>
    <!-- const __tsan::Shadow -->
    <qualified-type-def type-id='9a6b58a9' const='yes' id='02512580'/>
    <!-- const __tsan::Shadow* -->
    <pointer-type-def type-id='02512580' size-in-bits='64' id='4fbe4a9e'/>
    <!-- const __tsan::StackTrace -->
    <qualified-type-def type-id='27c6bf14' const='yes' id='b39b0a6d'/>
    <!-- const __tsan::StackTrace& -->
    <reference-type-def kind='lvalue' type-id='b39b0a6d' size-in-bits='64' id='08113411'/>
    <!-- const __tsan::StackTrace* -->
    <pointer-type-def type-id='b39b0a6d' size-in-bits='64' id='04112dc5'/>
    <!-- const __tsan::ThreadContext -->
    <qualified-type-def type-id='6b5da130' const='yes' id='8a4f43ff'/>
    <!-- const __tsan::ThreadContext* -->
    <pointer-type-def type-id='8a4f43ff' size-in-bits='64' id='8fc7c84f'/>
    <!-- const __tsan::Vector<__tsan::ReportLocation*> -->
    <qualified-type-def type-id='4525918b' const='yes' id='7c36208c'/>
    <!-- const __tsan::Vector<__tsan::ReportLocation*>& -->
    <reference-type-def kind='lvalue' type-id='7c36208c' size-in-bits='64' id='33356b9e'/>
    <!-- const __tsan::Vector<__tsan::ReportLocation*>* -->
    <pointer-type-def type-id='7c36208c' size-in-bits='64' id='2f356552'/>
    <!-- const __tsan::Vector<__tsan::ReportMop*> -->
    <qualified-type-def type-id='8ec11ba8' const='yes' id='d5197691'/>
    <!-- const __tsan::Vector<__tsan::ReportMop*>& -->
    <reference-type-def kind='lvalue' type-id='d5197691' size-in-bits='64' id='2e15e215'/>
    <!-- const __tsan::Vector<__tsan::ReportMop*>* -->
    <pointer-type-def type-id='d5197691' size-in-bits='64' id='3215e861'/>
    <!-- const __tsan::Vector<__tsan::ReportMopMutex> -->
    <qualified-type-def type-id='92f540bf' const='yes' id='d8f48e56'/>
    <!-- const __tsan::Vector<__tsan::ReportMopMutex>& -->
    <reference-type-def kind='lvalue' type-id='d8f48e56' size-in-bits='64' id='f8fc3a50'/>
    <!-- const __tsan::Vector<__tsan::ReportMopMutex>* -->
    <pointer-type-def type-id='d8f48e56' size-in-bits='64' id='04fc4d34'/>
    <!-- const __tsan::Vector<__tsan::ReportMutex*> -->
    <qualified-type-def type-id='5beae62f' const='yes' id='242ea0ae'/>
    <!-- const __tsan::Vector<__tsan::ReportMutex*>& -->
    <reference-type-def kind='lvalue' type-id='242ea0ae' size-in-bits='64' id='7d66b618'/>
    <!-- const __tsan::Vector<__tsan::ReportMutex*>* -->
    <pointer-type-def type-id='242ea0ae' size-in-bits='64' id='7966afcc'/>
    <!-- const __tsan::Vector<__tsan::ReportStack*> -->
    <qualified-type-def type-id='4de68f98' const='yes' id='0f3cd909'/>
    <!-- const __tsan::Vector<__tsan::ReportStack*>& -->
    <reference-type-def kind='lvalue' type-id='0f3cd909' size-in-bits='64' id='2bc9e4fd'/>
    <!-- const __tsan::Vector<__tsan::ReportStack*>* -->
    <pointer-type-def type-id='0f3cd909' size-in-bits='64' id='1fc9d219'/>
    <!-- const __tsan::Vector<__tsan::ReportThread*> -->
    <qualified-type-def type-id='bd4a0bb0' const='yes' id='766884f7'/>
    <!-- const __tsan::Vector<__tsan::ReportThread*>& -->
    <reference-type-def kind='lvalue' type-id='766884f7' size-in-bits='64' id='37891503'/>
    <!-- const __tsan::Vector<__tsan::ReportThread*>* -->
    <pointer-type-def type-id='766884f7' size-in-bits='64' id='438927e7'/>
    <!-- const char* (const char*, const char*)* -->
    <pointer-type-def type-id='7b76db83' size-in-bits='64' id='58d5662f'/>
    <!-- const ioctl_desc -->
    <qualified-type-def type-id='e72cc2f6' const='yes' id='4d7ceb9b'/>
    <!-- const ioctl_desc& -->
    <reference-type-def kind='lvalue' type-id='4d7ceb9b' size-in-bits='64' id='b8a71a87'/>
    <!-- const ioctl_desc_compare -->
    <qualified-type-def type-id='45df539a' const='yes' id='42a7463b'/>
    <!-- const ioctl_desc_compare* -->
    <pointer-type-def type-id='42a7463b' size-in-bits='64' id='fe534cc3'/>
    <!-- const kernel_sigset_t -->
    <qualified-type-def type-id='2a19a19a' const='yes' id='090853aa'/>
    <!-- const kernel_sigset_t* -->
    <pointer-type-def type-id='090853aa' size-in-bits='64' id='b81b7280'/>
    <!-- const std::nothrow_t -->
    <qualified-type-def type-id='e2b67d34' const='yes' id='93224c99'/>
    <!-- const std::nothrow_t& -->
    <reference-type-def kind='lvalue' type-id='93224c99' size-in-bits='64' id='5dfed0ad'/>
    <!-- const wchar_t -->
    <qualified-type-def type-id='c523b9f1' const='yes' id='effb3702'/>
    <!-- const wchar_t* -->
    <pointer-type-def type-id='effb3702' size-in-bits='64' id='f077d3f8'/>
    <!-- const wchar_t** -->
    <pointer-type-def type-id='f077d3f8' size-in-bits='64' id='5ea27396'/>
    <!-- double (double)* -->
    <pointer-type-def type-id='2e5c5dd8' size-in-bits='64' id='22b3b5c2'/>
    <!-- double (double, double*)* -->
    <pointer-type-def type-id='ef7e7e4d' size-in-bits='64' id='acbb0259'/>
    <!-- double (double, double, int*)* -->
    <pointer-type-def type-id='fe6798a4' size-in-bits='64' id='3d23eb5e'/>
    <!-- double (double, int*)* -->
    <pointer-type-def type-id='4c344d9f' size-in-bits='64' id='a44c2893'/>
    <!-- double* -->
    <pointer-type-def type-id='a0eb0f08' size-in-bits='64' id='7408d286'/>
    <!-- float (float)* -->
    <pointer-type-def type-id='f081d340' size-in-bits='64' id='326a95da'/>
    <!-- float (float, float*)* -->
    <pointer-type-def type-id='868bead4' size-in-bits='64' id='7787ca9e'/>
    <!-- float (float, float, int*)* -->
    <pointer-type-def type-id='582ca80b' size-in-bits='64' id='75935a47'/>
    <!-- float (float, int*)* -->
    <pointer-type-def type-id='90617b87' size-in-bits='64' id='3d7dba0b'/>
    <!-- float* -->
    <pointer-type-def type-id='a6c45d85' size-in-bits='64' id='361f7a7d'/>
    <!-- int ()* -->
    <pointer-type-def type-id='276427e1' size-in-bits='64' id='1db260e5'/>
    <!-- int (__sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* -->
    <pointer-type-def type-id='7782548b' size-in-bits='64' id='86db4187'/>
    <!-- int (__sanitizer::__sanitizer_pollfd*, typedef __sanitizer::__sanitizer_nfds_t, int)* -->
    <pointer-type-def type-id='0b107c52' size-in-bits='64' id='654e0744'/>
    <!-- int (__sanitizer::__sanitizer_pollfd*, typedef __sanitizer::__sanitizer_nfds_t, void*, __sanitizer::__sanitizer_sigset_t*)* -->
    <pointer-type-def type-id='e425e7b8' size-in-bits='64' id='f9311f32'/>
    <!-- int (__sanitizer::__sanitizer_sigset_t*)* -->
    <pointer-type-def type-id='f3811278' size-in-bits='64' id='8cf31caa'/>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, int*)* -->
    <pointer-type-def type-id='569f9e3f' size-in-bits='64' id='c4ff2d3b'/>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, void*)* -->
    <pointer-type-def type-id='23432a62' size-in-bits='64' id='2bd429e4'/>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, void*, void*)* -->
    <pointer-type-def type-id='7668293c' size-in-bits='64' id='7af7c786'/>
    <!-- int (char*)* -->
    <pointer-type-def type-id='e05223d7' size-in-bits='64' id='7d760683'/>
    <!-- int (char*, __sanitizer::__sanitizer_dirent***, typedef scandir_filter_f, typedef scandir_compar_f)* -->
    <pointer-type-def type-id='4d94f4a0' size-in-bits='64' id='72fe0d1a'/>
    <!-- int (char*, __sanitizer::__sanitizer_dirent64***, typedef scandir64_filter_f, typedef scandir64_compar_f)* -->
    <pointer-type-def type-id='149d5bf6' size-in-bits='64' id='af572870'/>
    <!-- int (char*, __sanitizer::__sanitizer_ether_addr*)* -->
    <pointer-type-def type-id='7061cca0' size-in-bits='64' id='abc2a8ca'/>
    <!-- int (char*, __sanitizer::__sanitizer_ether_addr*, char*)* -->
    <pointer-type-def type-id='a0c2518c' size-in-bits='64' id='f04e83ce'/>
    <!-- int (char*, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* -->
    <pointer-type-def type-id='6d0df63d' size-in-bits='64' id='6438f749'/>
    <!-- int (char*, __sanitizer::__sanitizer_wordexp_t*, int)* -->
    <pointer-type-def type-id='6959c359' size-in-bits='64' id='1ff4eb9d'/>
    <!-- int (char*, int, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* -->
    <pointer-type-def type-id='9420ca56' size-in-bits='64' id='405ef428'/>
    <!-- int (char*, typedef __sanitizer::u32)* -->
    <pointer-type-def type-id='e8bbb497' size-in-bits='64' id='895f6573'/>
    <!-- int (char*, void*)* -->
    <pointer-type-def type-id='835f4623' size-in-bits='64' id='831c566f'/>
    <!-- int (const __sanitizer::__sanitizer_dirent*)* -->
    <pointer-type-def type-id='b115b897' size-in-bits='64' id='f1cc163b'/>
    <!-- int (const __sanitizer::__sanitizer_dirent**, const __sanitizer::__sanitizer_dirent**)* -->
    <pointer-type-def type-id='fa1745fd' size-in-bits='64' id='41ff5e31'/>
    <!-- int (const __sanitizer::__sanitizer_dirent64*)* -->
    <pointer-type-def type-id='3374a341' size-in-bits='64' id='c98f46b5'/>
    <!-- int (const __sanitizer::__sanitizer_dirent64**, const __sanitizer::__sanitizer_dirent64**)* -->
    <pointer-type-def type-id='97d1518d' size-in-bits='64' id='caa33b11'/>
    <!-- int (const __sanitizer::__sanitizer_sigset_t*)* -->
    <pointer-type-def type-id='16aeceab' size-in-bits='64' id='9c37045f'/>
    <!-- int (const char*)* -->
    <pointer-type-def type-id='5113b296' size-in-bits='64' id='70487b28'/>
    <!-- int (const char*, const char*)* -->
    <pointer-type-def type-id='8bb5e773' size-in-bits='64' id='92b87cd7'/>
    <!-- int (const char*, const char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='1a9d10de' size-in-bits='64' id='31690c50'/>
    <!-- int (const char*, const char*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='55d73658' size-in-bits='64' id='6a722202'/>
    <!-- int (const char*, const char*, typedef __va_list_tag __va_list_tag*)* -->
    <pointer-type-def type-id='226ad136' size-in-bits='64' id='a1e1a720'/>
    <!-- int (const char*, const char*, variadic parameter type)* -->
    <pointer-type-def type-id='15187fe5' size-in-bits='64' id='4edba3f9'/>
    <!-- int (const char*, int)* -->
    <pointer-type-def type-id='861ec88b' size-in-bits='64' id='04e86f97'/>
    <!-- int (const char*, int, int)* -->
    <pointer-type-def type-id='61e84dd4' size-in-bits='64' id='6e85562e'/>
    <!-- int (const char*, typedef __va_list_tag __va_list_tag*)* -->
    <pointer-type-def type-id='ee5d7867' size-in-bits='64' id='d78a816b'/>
    <!-- int (const char*, variadic parameter type)* -->
    <pointer-type-def type-id='f1677a7a' size-in-bits='64' id='2779dca4'/>
    <!-- int (const char*, void*)* -->
    <pointer-type-def type-id='b4249a78' size-in-bits='64' id='bbe66bb2'/>
    <!-- int (int)* -->
    <pointer-type-def type-id='9b634486' size-in-bits='64' id='7f416e10'/>
    <!-- int (int*)* -->
    <pointer-type-def type-id='e4423d2e' size-in-bits='64' id='81436ec0'/>
    <!-- int (int*, int)* -->
    <pointer-type-def type-id='e78a25c3' size-in-bits='64' id='6b7f122f'/>
    <!-- int (int*, int, void*)* -->
    <pointer-type-def type-id='f853ab57' size-in-bits='64' id='34636e63'/>
    <!-- int (int, __sanitizer::__sanitizer_sigset_t*, __sanitizer::__sanitizer_sigset_t*)* -->
    <pointer-type-def type-id='bf0bd4f2' size-in-bits='64' id='307fe454'/>
    <!-- int (int, __sanitizer::u32*)* -->
    <pointer-type-def type-id='449e65e7' size-in-bits='64' id='1a6988d3'/>
    <!-- int (int, char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='00baa36f' size-in-bits='64' id='f038f3b3'/>
    <!-- int (int, const char*, void*)* -->
    <pointer-type-def type-id='02e8b5b7' size-in-bits='64' id='9bce4873'/>
    <!-- int (int, int)* -->
    <pointer-type-def type-id='5cd1f23b' size-in-bits='64' id='ba83cbff'/>
    <!-- int (int, int*, int)* -->
    <pointer-type-def type-id='a8919986' size-in-bits='64' id='2b0969a8'/>
    <!-- int (int, int*, int, void*)* -->
    <pointer-type-def type-id='9308f9e8' size-in-bits='64' id='5d464332'/>
    <!-- int (int, int, int)* -->
    <pointer-type-def type-id='d98259c4' size-in-bits='64' id='44c6d296'/>
    <!-- int (int, int, int, int*)* -->
    <pointer-type-def type-id='55042d93' size-in-bits='64' id='e148fa8f'/>
    <!-- int (int, int, int, void*)* -->
    <pointer-type-def type-id='691aba26' size-in-bits='64' id='0ca625d8'/>
    <!-- int (int, int, int, void*, int*)* -->
    <pointer-type-def type-id='26e234c5' size-in-bits='64' id='e4fc13a9'/>
    <!-- int (int, int, void*)* -->
    <pointer-type-def type-id='073bc15f' size-in-bits='64' id='d08b57b3'/>
    <!-- int (int, int, void*, int)* -->
    <pointer-type-def type-id='6f7abb88' size-in-bits='64' id='7b5e821a'/>
    <!-- int (int, sigaction_t*, sigaction_t*)* -->
    <pointer-type-def type-id='38a8f4ae' size-in-bits='64' id='195e87c8'/>
    <!-- int (int, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='ea5e8ab7' size-in-bits='64' id='a0ff8473'/>
    <!-- int (int, unsigned int, void*)* -->
    <pointer-type-def type-id='fbf9da3a' size-in-bits='64' id='716454bc'/>
    <!-- int (int, unsigned long int, unsigned long int, unsigned long int, unsigned long int)* -->
    <pointer-type-def type-id='6a754fc6' size-in-bits='64' id='ad4e7650'/>
    <!-- int (int, void*)* -->
    <pointer-type-def type-id='c70fa2e8' size-in-bits='64' id='2e711a2a'/>
    <!-- int (int, void*, int)* -->
    <pointer-type-def type-id='9be2c2b5' size-in-bits='64' id='ab463111'/>
    <!-- int (int, void*, int*)* -->
    <pointer-type-def type-id='81f0d64f' size-in-bits='64' id='93a13ebb'/>
    <!-- int (int, void*, int, int)* -->
    <pointer-type-def type-id='048e9416' size-in-bits='64' id='7a35cd18'/>
    <!-- int (int, void*, unsigned int)* -->
    <pointer-type-def type-id='838eb0c6' size-in-bits='64' id='e5d8a4b0'/>
    <!-- int (int, void*, unsigned int*)* -->
    <pointer-type-def type-id='a09da5ee' size-in-bits='64' id='e14ed160'/>
    <!-- int (int, void*, unsigned int*, int)* -->
    <pointer-type-def type-id='3200de83' size-in-bits='64' id='a4f53fcf'/>
    <!-- int (int, void*, void*)* -->
    <pointer-type-def type-id='8852d0d2' size-in-bits='64' id='f4f5b664'/>
    <!-- int (typedef __sanitizer::u32, void*)* -->
    <pointer-type-def type-id='3f48a7e5' size-in-bits='64' id='6dc691a1'/>
    <!-- int (typedef __sanitizer::uptr, const char*)* -->
    <pointer-type-def type-id='4bce51b3' size-in-bits='64' id='a6e43f8f'/>
    <!-- int (typedef __sanitizer::uptr, int*, int*)* -->
    <pointer-type-def type-id='8744bbbe' size-in-bits='64' id='bdac86e8'/>
    <!-- int (typedef long_t)* -->
    <pointer-type-def type-id='cd9eac55' size-in-bits='64' id='fcfbca39'/>
    <!-- int (unsigned int, int)* -->
    <pointer-type-def type-id='0dda5f98' size-in-bits='64' id='c192576a'/>
    <!-- int (void ()*)* -->
    <pointer-type-def type-id='3a79f2fa' size-in-bits='64' id='11cddbfc'/>
    <!-- int (void (int, void*)*, void*)* -->
    <pointer-type-def type-id='ea63730b' size-in-bits='64' id='20db5267'/>
    <!-- int (void (void*)*, void*, void*)* -->
    <pointer-type-def type-id='505b16d6' size-in-bits='64' id='1efc7ad0'/>
    <!-- int (void**, int)* -->
    <pointer-type-def type-id='9627c96c' size-in-bits='64' id='9489f11e'/>
    <!-- int (void**, typedef __sanitizer::uptr, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='d740c561' size-in-bits='64' id='f5542b3d'/>
    <!-- int (void*, __sanitizer::__sanitizer_dirent*, __sanitizer::__sanitizer_dirent**)* -->
    <pointer-type-def type-id='448a8d43' size-in-bits='64' id='69d17af7'/>
    <!-- int (void*, __sanitizer::__sanitizer_dirent64*, __sanitizer::__sanitizer_dirent64**)* -->
    <pointer-type-def type-id='c31a1813' size-in-bits='64' id='999954f7'/>
    <!-- int (void*, __sanitizer::u32*)* -->
    <pointer-type-def type-id='b5be5b46' size-in-bits='64' id='3298c708'/>
    <!-- int (void*, const char*, typedef __va_list_tag __va_list_tag*)* -->
    <pointer-type-def type-id='1eb6cdab' size-in-bits='64' id='36ba4b5f'/>
    <!-- int (void*, const char*, variadic parameter type)* -->
    <pointer-type-def type-id='8be7785e' size-in-bits='64' id='83636708'/>
    <!-- int (void*, double*)* -->
    <pointer-type-def type-id='3d6c4926' size-in-bits='64' id='6bdf6f90'/>
    <!-- int (void*, int)* -->
    <pointer-type-def type-id='dd42ab12' size-in-bits='64' id='dbff155c'/>
    <!-- int (void*, int*)* -->
    <pointer-type-def type-id='12f09262' size-in-bits='64' id='bbaaa2c4'/>
    <!-- int (void*, int, int, __sanitizer::__sanitizer_hostent*, char*, typedef SIZE_T, __sanitizer::__sanitizer_hostent**, int*)* -->
    <pointer-type-def type-id='33664dcd' size-in-bits='64' id='912a9dd1'/>
    <!-- int (void*, int, unsigned int)* -->
    <pointer-type-def type-id='468e5404' size-in-bits='64' id='8f145e16'/>
    <!-- int (void*, long int*)* -->
    <pointer-type-def type-id='3b4c30d0' size-in-bits='64' id='f1d29302'/>
    <!-- int (void*, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='370905ce' size-in-bits='64' id='6c10c330'/>
    <!-- int (void*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='13a4eed2' size-in-bits='64' id='1c5594fc'/>
    <!-- int (void*, typedef long_t)* -->
    <pointer-type-def type-id='54eb43c1' size-in-bits='64' id='237051e5'/>
    <!-- int (void*, void ()*)* -->
    <pointer-type-def type-id='73e99a56' size-in-bits='64' id='d7130ce8'/>
    <!-- int (void*, void**)* -->
    <pointer-type-def type-id='a4dc031f' size-in-bits='64' id='1938e4f3'/>
    <!-- int (void*, void**, SIZE_T*)* -->
    <pointer-type-def type-id='8b2a77fb' size-in-bits='64' id='39189f6f'/>
    <!-- int (void*, void*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='8a0bb7d6' size-in-bits='64' id='c33a1d80'/>
    <!-- int (void*, void*, unsigned int)* -->
    <pointer-type-def type-id='ca4f66ef' size-in-bits='64' id='40a3f6a3'/>
    <!-- int (void*, void*, void* (void*)*, void*)* -->
    <pointer-type-def type-id='0207cbca' size-in-bits='64' id='f4b9479c'/>
    <!-- int (void*, void*, void*)* -->
    <pointer-type-def type-id='add6e811' size-in-bits='64' id='84812415'/>
    <!-- int (void*, void*, void*, void*)* -->
    <pointer-type-def type-id='85c083a5' size-in-bits='64' id='e8fed509'/>
    <!-- ioctl_desc& -->
    <reference-type-def kind='lvalue' type-id='e72cc2f6' size-in-bits='64' id='79101378'/>
    <!-- ioctl_desc[500]* -->
    <pointer-type-def type-id='0abb86f9' size-in-bits='64' id='b8353e29'/>
    <!-- kernel_sigset_t* -->
    <pointer-type-def type-id='2a19a19a' size-in-bits='64' id='c0d5d369'/>
    <!-- long double (long double)* -->
    <pointer-type-def type-id='87de9dba' size-in-bits='64' id='96b9585c'/>
    <!-- long double (long double, int*)* -->
    <pointer-type-def type-id='d8d5a931' size-in-bits='64' id='4033dc35'/>
    <!-- long double (long double, long double*)* -->
    <pointer-type-def type-id='3276ba4b' size-in-bits='64' id='97cef7df'/>
    <!-- long double (long double, long double, int*)* -->
    <pointer-type-def type-id='b8b5eb4a' size-in-bits='64' id='b8eaf1bc'/>
    <!-- long double* -->
    <pointer-type-def type-id='e095c704' size-in-bits='64' id='b9c88d6a'/>
    <!-- long int* -->
    <pointer-type-def type-id='bd54fe1a' size-in-bits='64' id='3ccc2590'/>
    <!-- my_siginfo_t* -->
    <pointer-type-def type-id='ed334f22' size-in-bits='64' id='ebbb56f0'/>
    <!-- sanitizer_kernel_iovec* -->
    <pointer-type-def type-id='41f15db9' size-in-bits='64' id='99b62211'/>
    <!-- sanitizer_kernel_mmsghdr* -->
    <pointer-type-def type-id='b9b1aba5' size-in-bits='64' id='33f66375'/>
    <!-- sanitizer_kernel_msghdr* -->
    <pointer-type-def type-id='18e0f174' size-in-bits='64' id='1c343372'/>
    <!-- sanitizer_kernel_sockaddr* -->
    <pointer-type-def type-id='86093762' size-in-bits='64' id='d8e6eb10'/>
    <!-- sigaction_t* -->
    <pointer-type-def type-id='2afd8e53' size-in-bits='64' id='e44ade73'/>
    <!-- typedef INTMAX_T (const char*, char**, int)* -->
    <pointer-type-def type-id='42d9a18b' size-in-bits='64' id='11605a47'/>
    <!-- typedef SIZE_T (char*, const wchar_t**, typedef SIZE_T, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='03039366' size-in-bits='64' id='c176a9d0'/>
    <!-- typedef SIZE_T (char*, const wchar_t**, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='5cf7758d' size-in-bits='64' id='a6d97b09'/>
    <!-- typedef SIZE_T (char*, const wchar_t*, typedef SIZE_T)* -->
    <pointer-type-def type-id='50bbd9a1' size-in-bits='64' id='358ee825'/>
    <!-- typedef SIZE_T (int, char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='f33d80b7' size-in-bits='64' id='573a5163'/>
    <!-- typedef SIZE_T (void*, char**, SIZE_T*, char**, SIZE_T*)* -->
    <pointer-type-def type-id='4151e8b1' size-in-bits='64' id='cdfc717d'/>
    <!-- typedef SIZE_T (wchar_t*, const char**, typedef SIZE_T, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='7bc3ee3c' size-in-bits='64' id='13831ade'/>
    <!-- typedef SIZE_T (wchar_t*, const char**, typedef SIZE_T, void*)* -->
    <pointer-type-def type-id='b5ef33db' size-in-bits='64' id='8879c1c7'/>
    <!-- typedef SIZE_T (wchar_t*, const char*, typedef SIZE_T)* -->
    <pointer-type-def type-id='f084726f' size-in-bits='64' id='4ab37db3'/>
    <!-- typedef SSIZE_T (char**, SIZE_T*, int, void*)* -->
    <pointer-type-def type-id='aac6c15d' size-in-bits='64' id='73bf6599'/>
    <!-- typedef SSIZE_T (char**, SIZE_T*, void*)* -->
    <pointer-type-def type-id='8b55128e' size-in-bits='64' id='87931e30'/>
    <!-- typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int)* -->
    <pointer-type-def type-id='cb671dc7' size-in-bits='64' id='231aa643'/>
    <!-- typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF64_T)* -->
    <pointer-type-def type-id='ea622916' size-in-bits='64' id='3aa13710'/>
    <!-- typedef SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, typedef OFF_T)* -->
    <pointer-type-def type-id='ef775a18' size-in-bits='64' id='607fb932'/>
    <!-- typedef SSIZE_T (int, __sanitizer::__sanitizer_msghdr*, int)* -->
    <pointer-type-def type-id='8c45e988' size-in-bits='64' id='9b85861a'/>
    <!-- typedef SSIZE_T (int, void*, typedef OFF64_T, typedef OFF64_T)* -->
    <pointer-type-def type-id='e3a13259' size-in-bits='64' id='8c007d6d'/>
    <!-- typedef SSIZE_T (int, void*, typedef SIZE_T)* -->
    <pointer-type-def type-id='cda25a3e' size-in-bits='64' id='1f3968a8'/>
    <!-- typedef SSIZE_T (int, void*, typedef SIZE_T, typedef OFF64_T)* -->
    <pointer-type-def type-id='ad6e6425' size-in-bits='64' id='41105f59'/>
    <!-- typedef SSIZE_T (int, void*, typedef SIZE_T, typedef OFF_T)* -->
    <pointer-type-def type-id='9fa67c37' size-in-bits='64' id='730d6c23'/>
    <!-- typedef __sanitizer::__sanitizer_clock_t (void*)* -->
    <pointer-type-def type-id='62f10f97' size-in-bits='64' id='e36559c3'/>
    <!-- typedef __sanitizer::uptr (const char*)* -->
    <pointer-type-def type-id='289dc5a2' size-in-bits='64' id='7a2b35ac'/>
    <!-- typedef __sanitizer::uptr (int, int, void*, void*)* -->
    <pointer-type-def type-id='b341ae3f' size-in-bits='64' id='88a4b65b'/>
    <!-- typedef __sanitizer::uptr (void*)* -->
    <pointer-type-def type-id='ae538a4d' size-in-bits='64' id='6373cd49'/>
    <!-- typedef __sanitizer::uptr (void*, typedef __sanitizer::uptr, typedef __sanitizer::uptr, void*)* -->
    <pointer-type-def type-id='8b963f27' size-in-bits='64' id='48703143'/>
    <!-- typedef long_t (int, void*, int)* -->
    <pointer-type-def type-id='e5db37ca' size-in-bits='64' id='86fbe384'/>
    <!-- typedef long_t (int, void*, typedef long_t, int)* -->
    <pointer-type-def type-id='0aefacfa' size-in-bits='64' id='c49ffbd4'/>
    <!-- typedef sighandler_t (int, typedef sighandler_t)* -->
    <pointer-type-def type-id='5b4783e7' size-in-bits='64' id='b7a175f3'/>
    <!-- unsigned int (unsigned int)* -->
    <pointer-type-def type-id='32efe300' size-in-bits='64' id='17a94daa'/>
    <!-- unsigned long int (unsigned long int*)* -->
    <pointer-type-def type-id='06961940' size-in-bits='64' id='d5b1e062'/>
    <!-- void (__sanitizer::uptr*, int)* -->
    <pointer-type-def type-id='013cf1f3' size-in-bits='64' id='9b1489d7'/>
    <!-- void (double, double*, double*)* -->
    <pointer-type-def type-id='5bbad9df' size-in-bits='64' id='6a44710b'/>
    <!-- void (float, float*, float*)* -->
    <pointer-type-def type-id='30253582' size-in-bits='64' id='b7f78534'/>
    <!-- void (int, my_siginfo_t*, void*)* -->
    <pointer-type-def type-id='d334e8cc' size-in-bits='64' id='3edfe2b6'/>
    <!-- void (int, void*)* -->
    <pointer-type-def type-id='7b5ced03' size-in-bits='64' id='f1eb0faf'/>
    <!-- void (long double, long double*, long double*)* -->
    <pointer-type-def type-id='eb6400dd' size-in-bits='64' id='12b02e29'/>
    <!-- void (void*)* -->
    <pointer-type-def type-id='c5c76c9c' size-in-bits='64' id='b7f9d8e6'/>
    <!-- void (void*, bool)* -->
    <pointer-type-def type-id='a45fc9e0' size-in-bits='64' id='7f8b4dc2'/>
    <!-- void* (char*)* -->
    <pointer-type-def type-id='df1e5dee' size-in-bits='64' id='db1fbf00'/>
    <!-- void* (char*, char*)* -->
    <pointer-type-def type-id='55ff3502' size-in-bits='64' id='c0da602c'/>
    <!-- void* (char*, char*, void*)* -->
    <pointer-type-def type-id='ae5fa55c' size-in-bits='64' id='421fb61e'/>
    <!-- void* (char*, int, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='132c20e8' size-in-bits='64' id='b1d4f4ea'/>
    <!-- void* (const char*, int)* -->
    <pointer-type-def type-id='7a8a8468' size-in-bits='64' id='13f7c742'/>
    <!-- void* (typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='919d283f' size-in-bits='64' id='8b77a933'/>
    <!-- void* (typedef __sanitizer::uptr, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='525203a4' size-in-bits='64' id='d93fa99e'/>
    <!-- void* (void*)* -->
    <pointer-type-def type-id='cd5d79f4' size-in-bits='64' id='5ad9edb6'/>
    <!-- void* (void*, int, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='78df7a12' size-in-bits='64' id='26565874'/>
    <!-- void* (void*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='4523cf7d' size-in-bits='64' id='ccef1141'/>
    <!-- void* (void*, typedef long_t, int, int, int, typedef __sanitizer::u64)* -->
    <pointer-type-def type-id='ac9fd216' size-in-bits='64' id='85473620'/>
    <!-- void* (void*, typedef long_t, int, int, int, unsigned int)* -->
    <pointer-type-def type-id='67f8dd75' size-in-bits='64' id='ccd09d01'/>
    <!-- void* (void*, void*, typedef __sanitizer::uptr)* -->
    <pointer-type-def type-id='3211796b' size-in-bits='64' id='2ea955f7'/>
    <!-- wchar_t* -->
    <pointer-type-def type-id='c523b9f1' size-in-bits='64' id='323d93c1'/>
    <!-- namespace std -->
    <namespace-decl name='std'>
      <!-- struct std::nothrow_t -->
      <class-decl name='nothrow_t' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='108' column='1' id='e2b67d34'/>
    </namespace-decl>
    <!-- namespace __interception -->
    <namespace-decl name='__interception'>
      <!-- textdomain_f __interception::real_textdomain -->
      <var-decl name='real_textdomain' type-id='7ca95672' mangled-name='_ZN14__interception15real_textdomainE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='62' column='1'/>
      <!-- strcmp_f __interception::real_strcmp -->
      <var-decl name='real_strcmp' type-id='d43ca270' mangled-name='_ZN14__interception11real_strcmpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='82' column='1'/>
      <!-- strncmp_f __interception::real_strncmp -->
      <var-decl name='real_strncmp' type-id='e3fc85c4' mangled-name='_ZN14__interception12real_strncmpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='97' column='1'/>
      <!-- strcasecmp_f __interception::real_strcasecmp -->
      <var-decl name='real_strcasecmp' type-id='77f0c05c' mangled-name='_ZN14__interception15real_strcasecmpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='126' column='1'/>
      <!-- strncasecmp_f __interception::real_strncasecmp -->
      <var-decl name='real_strncasecmp' type-id='17426838' mangled-name='_ZN14__interception16real_strncasecmpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1'/>
      <!-- frexp_f __interception::real_frexp -->
      <var-decl name='real_frexp' type-id='084e2746' mangled-name='_ZN14__interception10real_frexpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='164' column='1'/>
      <!-- frexpf_f __interception::real_frexpf -->
      <var-decl name='real_frexpf' type-id='88c8e0e2' mangled-name='_ZN14__interception11real_frexpfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='178' column='1'/>
      <!-- frexpl_f __interception::real_frexpl -->
      <var-decl name='real_frexpl' type-id='cb1351d0' mangled-name='_ZN14__interception11real_frexplE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='186' column='1'/>
      <!-- read_f __interception::real_read -->
      <var-decl name='real_read' type-id='acb6f071' mangled-name='_ZN14__interception9real_readE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='223' column='1'/>
      <!-- pread_f __interception::real_pread -->
      <var-decl name='real_pread' type-id='8d7fa6e9' mangled-name='_ZN14__interception10real_preadE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='238' column='1'/>
      <!-- pread64_f __interception::real_pread64 -->
      <var-decl name='real_pread64' type-id='a839032b' mangled-name='_ZN14__interception12real_pread64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1'/>
      <!-- readv_f __interception::real_readv -->
      <var-decl name='real_readv' type-id='a27222d3' mangled-name='_ZN14__interception10real_readvE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='268' column='1'/>
      <!-- preadv_f __interception::real_preadv -->
      <var-decl name='real_preadv' type-id='06390cbb' mangled-name='_ZN14__interception11real_preadvE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='284' column='1'/>
      <!-- preadv64_f __interception::real_preadv64 -->
      <var-decl name='real_preadv64' type-id='393c0ee1' mangled-name='_ZN14__interception13real_preadv64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='300' column='1'/>
      <!-- write_f __interception::real_write -->
      <var-decl name='real_write' type-id='786d3c7e' mangled-name='_ZN14__interception10real_writeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- pwrite_f __interception::real_pwrite -->
      <var-decl name='real_pwrite' type-id='9ad038d6' mangled-name='_ZN14__interception11real_pwriteE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- pwrite64_f __interception::real_pwrite64 -->
      <var-decl name='real_pwrite64' type-id='595930f4' mangled-name='_ZN14__interception13real_pwrite64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1'/>
      <!-- writev_f __interception::real_writev -->
      <var-decl name='real_writev' type-id='e22d723a' mangled-name='_ZN14__interception11real_writevE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- pwritev_f __interception::real_pwritev -->
      <var-decl name='real_pwritev' type-id='d0378ba2' mangled-name='_ZN14__interception12real_pwritevE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- pwritev64_f __interception::real_pwritev64 -->
      <var-decl name='real_pwritev64' type-id='346d1700' mangled-name='_ZN14__interception14real_pwritev64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- prctl_f __interception::real_prctl -->
      <var-decl name='real_prctl' type-id='f96d36fe' mangled-name='_ZN14__interception10real_prctlE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- time_f __interception::real_time -->
      <var-decl name='real_time' type-id='d7d14370' mangled-name='_ZN14__interception9real_timeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='432' column='1'/>
      <!-- localtime_f __interception::real_localtime -->
      <var-decl name='real_localtime' type-id='5141bde7' mangled-name='_ZN14__interception14real_localtimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='456' column='1'/>
      <!-- localtime_r_f __interception::real_localtime_r -->
      <var-decl name='real_localtime_r' type-id='37b675ce' mangled-name='_ZN14__interception16real_localtime_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='466' column='1'/>
      <!-- gmtime_f __interception::real_gmtime -->
      <var-decl name='real_gmtime' type-id='beb29868' mangled-name='_ZN14__interception11real_gmtimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='476' column='1'/>
      <!-- gmtime_r_f __interception::real_gmtime_r -->
      <var-decl name='real_gmtime_r' type-id='d2b91be5' mangled-name='_ZN14__interception13real_gmtime_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1'/>
      <!-- ctime_f __interception::real_ctime -->
      <var-decl name='real_ctime' type-id='d1909a8d' mangled-name='_ZN14__interception10real_ctimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='496' column='1'/>
      <!-- ctime_r_f __interception::real_ctime_r -->
      <var-decl name='real_ctime_r' type-id='07a18fc4' mangled-name='_ZN14__interception12real_ctime_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='506' column='1'/>
      <!-- asctime_f __interception::real_asctime -->
      <var-decl name='real_asctime' type-id='bb818bad' mangled-name='_ZN14__interception12real_asctimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='516' column='1'/>
      <!-- asctime_r_f __interception::real_asctime_r -->
      <var-decl name='real_asctime_r' type-id='b09e1aa4' mangled-name='_ZN14__interception14real_asctime_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='526' column='1'/>
      <!-- strptime_f __interception::real_strptime -->
      <var-decl name='real_strptime' type-id='bfebe099' mangled-name='_ZN14__interception13real_strptimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1'/>
      <!-- vscanf_f __interception::real_vscanf -->
      <var-decl name='real_vscanf' type-id='851485aa' mangled-name='_ZN14__interception11real_vscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='587' column='1'/>
      <!-- vsscanf_f __interception::real_vsscanf -->
      <var-decl name='real_vsscanf' type-id='b9ab66e9' mangled-name='_ZN14__interception12real_vsscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='590' column='1'/>
      <!-- vfscanf_f __interception::real_vfscanf -->
      <var-decl name='real_vfscanf' type-id='89d530b8' mangled-name='_ZN14__interception12real_vfscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='593' column='1'/>
      <!-- __isoc99_vscanf_f __interception::real___isoc99_vscanf -->
      <var-decl name='real___isoc99_vscanf' type-id='85b62851' mangled-name='_ZN14__interception20real___isoc99_vscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1'/>
      <!-- __isoc99_vsscanf_f __interception::real___isoc99_vsscanf -->
      <var-decl name='real___isoc99_vsscanf' type-id='0152998c' mangled-name='_ZN14__interception21real___isoc99_vsscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- __isoc99_vfscanf_f __interception::real___isoc99_vfscanf -->
      <var-decl name='real___isoc99_vfscanf' type-id='dfe0e6c5' mangled-name='_ZN14__interception21real___isoc99_vfscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- scanf_f __interception::real_scanf -->
      <var-decl name='real_scanf' type-id='ee623564' mangled-name='_ZN14__interception10real_scanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='619' column='1'/>
      <!-- fscanf_f __interception::real_fscanf -->
      <var-decl name='real_fscanf' type-id='8a90971a' mangled-name='_ZN14__interception11real_fscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='622' column='1'/>
      <!-- sscanf_f __interception::real_sscanf -->
      <var-decl name='real_sscanf' type-id='2377e823' mangled-name='_ZN14__interception11real_sscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='625' column='1'/>
      <!-- __isoc99_scanf_f __interception::real___isoc99_scanf -->
      <var-decl name='real___isoc99_scanf' type-id='cf64abad' mangled-name='_ZN14__interception19real___isoc99_scanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='629' column='1'/>
      <!-- __isoc99_fscanf_f __interception::real___isoc99_fscanf -->
      <var-decl name='real___isoc99_fscanf' type-id='27ebe361' mangled-name='_ZN14__interception20real___isoc99_fscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1'/>
      <!-- __isoc99_sscanf_f __interception::real___isoc99_sscanf -->
      <var-decl name='real___isoc99_sscanf' type-id='3af69310' mangled-name='_ZN14__interception20real___isoc99_sscanfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='635' column='1'/>
      <!-- ioctl_f __interception::real_ioctl -->
      <var-decl name='real_ioctl' type-id='87b6cf44' mangled-name='_ZN14__interception10real_ioctlE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1'/>
      <!-- clock_getres_f __interception::real_clock_getres -->
      <var-decl name='real_clock_getres' type-id='c3b00450' mangled-name='_ZN14__interception17real_clock_getresE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='790' column='1'/>
      <!-- clock_gettime_f __interception::real_clock_gettime -->
      <var-decl name='real_clock_gettime' type-id='37c5d0b1' mangled-name='_ZN14__interception18real_clock_gettimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='799' column='1'/>
      <!-- clock_settime_f __interception::real_clock_settime -->
      <var-decl name='real_clock_settime' type-id='ffb5d6d5' mangled-name='_ZN14__interception18real_clock_settimeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- getitimer_f __interception::real_getitimer -->
      <var-decl name='real_getitimer' type-id='e1c36cd9' mangled-name='_ZN14__interception14real_getitimerE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='823' column='1'/>
      <!-- setitimer_f __interception::real_setitimer -->
      <var-decl name='real_setitimer' type-id='2669e80d' mangled-name='_ZN14__interception14real_setitimerE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1'/>
      <!-- wait_f __interception::real_wait -->
      <var-decl name='real_wait' type-id='544949b0' mangled-name='_ZN14__interception9real_waitE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='968' column='1'/>
      <!-- waitid_f __interception::real_waitid -->
      <var-decl name='real_waitid' type-id='8de24b79' mangled-name='_ZN14__interception11real_waitidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1'/>
      <!-- waitpid_f __interception::real_waitpid -->
      <var-decl name='real_waitpid' type-id='d97d066b' mangled-name='_ZN14__interception12real_waitpidE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1'/>
      <!-- wait3_f __interception::real_wait3 -->
      <var-decl name='real_wait3' type-id='dd12e05b' mangled-name='_ZN14__interception10real_wait3E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1'/>
      <!-- wait4_f __interception::real_wait4 -->
      <var-decl name='real_wait4' type-id='994fa19e' mangled-name='_ZN14__interception10real_wait4E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1'/>
      <!-- inet_ntop_f __interception::real_inet_ntop -->
      <var-decl name='real_inet_ntop' type-id='312d2403' mangled-name='_ZN14__interception14real_inet_ntopE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1'/>
      <!-- inet_pton_f __interception::real_inet_pton -->
      <var-decl name='real_inet_pton' type-id='a74ea50f' mangled-name='_ZN14__interception14real_inet_ptonE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- inet_aton_f __interception::real_inet_aton -->
      <var-decl name='real_inet_aton' type-id='41cb65de' mangled-name='_ZN14__interception14real_inet_atonE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- pthread_getschedparam_f __interception::real_pthread_getschedparam -->
      <var-decl name='real_pthread_getschedparam' type-id='50de72ae' mangled-name='_ZN14__interception26real_pthread_getschedparamE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1'/>
      <!-- getsockname_f __interception::real_getsockname -->
      <var-decl name='real_getsockname' type-id='083158e6' mangled-name='_ZN14__interception16real_getsocknameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1'/>
      <!-- gethostbyname_f __interception::real_gethostbyname -->
      <var-decl name='real_gethostbyname' type-id='80be82d9' mangled-name='_ZN14__interception18real_gethostbynameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1181' column='1'/>
      <!-- gethostbyaddr_f __interception::real_gethostbyaddr -->
      <var-decl name='real_gethostbyaddr' type-id='00161e5d' mangled-name='_ZN14__interception18real_gethostbyaddrE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1'/>
      <!-- gethostent_f __interception::real_gethostent -->
      <var-decl name='real_gethostent' type-id='6cb25d0a' mangled-name='_ZN14__interception15real_gethostentE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1199' column='1'/>
      <!-- gethostbyname2_f __interception::real_gethostbyname2 -->
      <var-decl name='real_gethostbyname2' type-id='7650812f' mangled-name='_ZN14__interception19real_gethostbyname2E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1207' column='1'/>
      <!-- gethostent_r_f __interception::real_gethostent_r -->
      <var-decl name='real_gethostent_r' type-id='d1cc5f1f' mangled-name='_ZN14__interception17real_gethostent_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- gethostbyaddr_r_f __interception::real_gethostbyaddr_r -->
      <var-decl name='real_gethostbyaddr_r' type-id='80bea6d4' mangled-name='_ZN14__interception20real_gethostbyaddr_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- gethostbyname_r_f __interception::real_gethostbyname_r -->
      <var-decl name='real_gethostbyname_r' type-id='b57d6308' mangled-name='_ZN14__interception20real_gethostbyname_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- gethostbyname2_r_f __interception::real_gethostbyname2_r -->
      <var-decl name='real_gethostbyname2_r' type-id='cb7b35c6' mangled-name='_ZN14__interception21real_gethostbyname2_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- getsockopt_f __interception::real_getsockopt -->
      <var-decl name='real_getsockopt' type-id='46c918ac' mangled-name='_ZN14__interception15real_getsockoptE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- accept_f __interception::real_accept -->
      <var-decl name='real_accept' type-id='e45b5d85' mangled-name='_ZN14__interception11real_acceptE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1324' column='1'/>
      <!-- accept4_f __interception::real_accept4 -->
      <var-decl name='real_accept4' type-id='7dfe4781' mangled-name='_ZN14__interception12real_accept4E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1'/>
      <!-- modf_f __interception::real_modf -->
      <var-decl name='real_modf' type-id='37706b13' mangled-name='_ZN14__interception9real_modfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1368' column='1'/>
      <!-- modff_f __interception::real_modff -->
      <var-decl name='real_modff' type-id='a5b6d17d' mangled-name='_ZN14__interception10real_modffE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1377' column='1'/>
      <!-- modfl_f __interception::real_modfl -->
      <var-decl name='real_modfl' type-id='e801426b' mangled-name='_ZN14__interception10real_modflE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1386' column='1'/>
      <!-- recvmsg_f __interception::real_recvmsg -->
      <var-decl name='real_recvmsg' type-id='18bfe250' mangled-name='_ZN14__interception12real_recvmsgE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1'/>
      <!-- getpeername_f __interception::real_getpeername -->
      <var-decl name='real_getpeername' type-id='974475ba' mangled-name='_ZN14__interception16real_getpeernameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- sysinfo_f __interception::real_sysinfo -->
      <var-decl name='real_sysinfo' type-id='5e981e90' mangled-name='_ZN14__interception12real_sysinfoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1453' column='1'/>
      <!-- readdir_f __interception::real_readdir -->
      <var-decl name='real_readdir' type-id='f8a3285a' mangled-name='_ZN14__interception12real_readdirE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1467' column='1'/>
      <!-- readdir_r_f __interception::real_readdir_r -->
      <var-decl name='real_readdir_r' type-id='11ee912f' mangled-name='_ZN14__interception14real_readdir_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1'/>
      <!-- readdir64_f __interception::real_readdir64 -->
      <var-decl name='real_readdir64' type-id='217cead8' mangled-name='_ZN14__interception14real_readdir64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1496' column='1'/>
      <!-- readdir64_r_f __interception::real_readdir64_r -->
      <var-decl name='real_readdir64_r' type-id='23283395' mangled-name='_ZN14__interception16real_readdir64_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1'/>
      <!-- ptrace_f __interception::real_ptrace -->
      <var-decl name='real_ptrace' type-id='cae5a8d8' mangled-name='_ZN14__interception11real_ptraceE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1524' column='1'/>
      <!-- setlocale_f __interception::real_setlocale -->
      <var-decl name='real_setlocale' type-id='abe623ef' mangled-name='_ZN14__interception14real_setlocaleE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1570' column='1'/>
      <!-- getcwd_f __interception::real_getcwd -->
      <var-decl name='real_getcwd' type-id='e8302fe3' mangled-name='_ZN14__interception11real_getcwdE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1586' column='1'/>
      <!-- get_current_dir_name_f __interception::real_get_current_dir_name -->
      <var-decl name='real_get_current_dir_name' type-id='01d63b99' mangled-name='_ZN14__interception25real_get_current_dir_nameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1599' column='1'/>
      <!-- strtoimax_f __interception::real_strtoimax -->
      <var-decl name='real_strtoimax' type-id='71f7bad4' mangled-name='_ZN14__interception14real_strtoimaxE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1614' column='1'/>
      <!-- strtoumax_f __interception::real_strtoumax -->
      <var-decl name='real_strtoumax' type-id='ec065ba0' mangled-name='_ZN14__interception14real_strtoumaxE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- mbstowcs_f __interception::real_mbstowcs -->
      <var-decl name='real_mbstowcs' type-id='8c052f09' mangled-name='_ZN14__interception13real_mbstowcsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1'/>
      <!-- mbsrtowcs_f __interception::real_mbsrtowcs -->
      <var-decl name='real_mbsrtowcs' type-id='3741c6b3' mangled-name='_ZN14__interception14real_mbsrtowcsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1'/>
      <!-- mbsnrtowcs_f __interception::real_mbsnrtowcs -->
      <var-decl name='real_mbsnrtowcs' type-id='76c0d981' mangled-name='_ZN14__interception15real_mbsnrtowcsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- wcstombs_f __interception::real_wcstombs -->
      <var-decl name='real_wcstombs' type-id='d5b47093' mangled-name='_ZN14__interception13real_wcstombsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1'/>
      <!-- wcsrtombs_f __interception::real_wcsrtombs -->
      <var-decl name='real_wcsrtombs' type-id='a68eaf6b' mangled-name='_ZN14__interception14real_wcsrtombsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1'/>
      <!-- wcsnrtombs_f __interception::real_wcsnrtombs -->
      <var-decl name='real_wcsnrtombs' type-id='a9e931c7' mangled-name='_ZN14__interception15real_wcsnrtombsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- tcgetattr_f __interception::real_tcgetattr -->
      <var-decl name='real_tcgetattr' type-id='e1a86f2d' mangled-name='_ZN14__interception14real_tcgetattrE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1752' column='1'/>
      <!-- realpath_f __interception::real_realpath -->
      <var-decl name='real_realpath' type-id='240ca9e2' mangled-name='_ZN14__interception13real_realpathE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1767' column='1'/>
      <!-- canonicalize_file_name_f __interception::real_canonicalize_file_name -->
      <var-decl name='real_canonicalize_file_name' type-id='0e39e20a' mangled-name='_ZN14__interception27real_canonicalize_file_nameE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1791' column='1'/>
      <!-- confstr_f __interception::real_confstr -->
      <var-decl name='real_confstr' type-id='413d0fa0' mangled-name='_ZN14__interception12real_confstrE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1'/>
      <!-- sched_getaffinity_f __interception::real_sched_getaffinity -->
      <var-decl name='real_sched_getaffinity' type-id='e9240489' mangled-name='_ZN14__interception22real_sched_getaffinityE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1'/>
      <!-- strerror_f __interception::real_strerror -->
      <var-decl name='real_strerror' type-id='9d5729e6' mangled-name='_ZN14__interception13real_strerrorE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1833' column='1'/>
      <!-- strerror_r_f __interception::real_strerror_r -->
      <var-decl name='real_strerror_r' type-id='502ea9b3' mangled-name='_ZN14__interception15real_strerror_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1'/>
      <!-- __xpg_strerror_r_f __interception::real___xpg_strerror_r -->
      <var-decl name='real___xpg_strerror_r' type-id='5367e82f' mangled-name='_ZN14__interception21real___xpg_strerror_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1'/>
      <!-- scandir_f __interception::real_scandir -->
      <var-decl name='real_scandir' type-id='fde85e4d' mangled-name='_ZN14__interception12real_scandirE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1'/>
      <!-- scandir64_f __interception::real_scandir64 -->
      <var-decl name='real_scandir64' type-id='5bc933ef' mangled-name='_ZN14__interception14real_scandir64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1'/>
      <!-- getgroups_f __interception::real_getgroups -->
      <var-decl name='real_getgroups' type-id='d6d91359' mangled-name='_ZN14__interception14real_getgroupsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1996' column='1'/>
      <!-- poll_f __interception::real_poll -->
      <var-decl name='real_poll' type-id='d38898f4' mangled-name='_ZN14__interception9real_pollE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1'/>
      <!-- ppoll_f __interception::real_ppoll -->
      <var-decl name='real_ppoll' type-id='bb441c5c' mangled-name='_ZN14__interception10real_ppollE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1'/>
      <!-- wordexp_f __interception::real_wordexp -->
      <var-decl name='real_wordexp' type-id='3cede3e6' mangled-name='_ZN14__interception12real_wordexpE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1'/>
      <!-- sigwait_f __interception::real_sigwait -->
      <var-decl name='real_sigwait' type-id='1ce43acd' mangled-name='_ZN14__interception12real_sigwaitE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2081' column='1'/>
      <!-- sigwaitinfo_f __interception::real_sigwaitinfo -->
      <var-decl name='real_sigwaitinfo' type-id='25edeef1' mangled-name='_ZN14__interception16real_sigwaitinfoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2095' column='1'/>
      <!-- sigtimedwait_f __interception::real_sigtimedwait -->
      <var-decl name='real_sigtimedwait' type-id='f5d74b88' mangled-name='_ZN14__interception17real_sigtimedwaitE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1'/>
      <!-- sigemptyset_f __interception::real_sigemptyset -->
      <var-decl name='real_sigemptyset' type-id='43d99e9b' mangled-name='_ZN14__interception16real_sigemptysetE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2125' column='1'/>
      <!-- sigfillset_f __interception::real_sigfillset -->
      <var-decl name='real_sigfillset' type-id='9961c3e5' mangled-name='_ZN14__interception15real_sigfillsetE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2133' column='1'/>
      <!-- sigpending_f __interception::real_sigpending -->
      <var-decl name='real_sigpending' type-id='4b9b8989' mangled-name='_ZN14__interception15real_sigpendingE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1'/>
      <!-- sigprocmask_f __interception::real_sigprocmask -->
      <var-decl name='real_sigprocmask' type-id='276ae1fc' mangled-name='_ZN14__interception16real_sigprocmaskE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1'/>
      <!-- backtrace_f __interception::real_backtrace -->
      <var-decl name='real_backtrace' type-id='e4ca53d5' mangled-name='_ZN14__interception14real_backtraceE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2177' column='1'/>
      <!-- backtrace_symbols_f __interception::real_backtrace_symbols -->
      <var-decl name='real_backtrace_symbols' type-id='bfaf1873' mangled-name='_ZN14__interception22real_backtrace_symbolsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2186' column='1'/>
      <!-- _exit_f __interception::real__exit -->
      <var-decl name='real__exit' type-id='c43ad10c' mangled-name='_ZN14__interception10real__exitE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2207' column='1'/>
      <!-- pthread_mutex_lock_f __interception::real_pthread_mutex_lock -->
      <var-decl name='real_pthread_mutex_lock' type-id='ccaf2b4b' mangled-name='_ZN14__interception23real_pthread_mutex_lockE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2220' column='1'/>
      <!-- pthread_mutex_unlock_f __interception::real_pthread_mutex_unlock -->
      <var-decl name='real_pthread_mutex_unlock' type-id='fbb70f50' mangled-name='_ZN14__interception25real_pthread_mutex_unlockE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2231' column='1'/>
      <!-- pthread_cond_wait_f __interception::real_pthread_cond_wait -->
      <var-decl name='real_pthread_cond_wait' type-id='578ff17a' mangled-name='_ZN14__interception22real_pthread_cond_waitE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2247' column='1'/>
      <!-- pthread_cond_init_f __interception::real_pthread_cond_init -->
      <var-decl name='real_pthread_cond_init' type-id='ab8abcc9' mangled-name='_ZN14__interception22real_pthread_cond_initE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2257' column='1'/>
      <!-- pthread_cond_signal_f __interception::real_pthread_cond_signal -->
      <var-decl name='real_pthread_cond_signal' type-id='94c7a0a3' mangled-name='_ZN14__interception24real_pthread_cond_signalE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2264' column='1'/>
      <!-- pthread_cond_broadcast_f __interception::real_pthread_cond_broadcast -->
      <var-decl name='real_pthread_cond_broadcast' type-id='5956ba18' mangled-name='_ZN14__interception27real_pthread_cond_broadcastE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2271' column='1'/>
      <!-- getmntent_f __interception::real_getmntent -->
      <var-decl name='real_getmntent' type-id='580f6f5b' mangled-name='_ZN14__interception14real_getmntentE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2312' column='1'/>
      <!-- getmntent_r_f __interception::real_getmntent_r -->
      <var-decl name='real_getmntent_r' type-id='d2874eba' mangled-name='_ZN14__interception16real_getmntent_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1'/>
      <!-- statfs_f __interception::real_statfs -->
      <var-decl name='real_statfs' type-id='fd67a644' mangled-name='_ZN14__interception11real_statfsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2339' column='1'/>
      <!-- fstatfs_f __interception::real_fstatfs -->
      <var-decl name='real_fstatfs' type-id='36fd79d2' mangled-name='_ZN14__interception12real_fstatfsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2347' column='1'/>
      <!-- statfs64_f __interception::real_statfs64 -->
      <var-decl name='real_statfs64' type-id='0c695836' mangled-name='_ZN14__interception13real_statfs64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2362' column='1'/>
      <!-- fstatfs64_f __interception::real_fstatfs64 -->
      <var-decl name='real_fstatfs64' type-id='48a45f30' mangled-name='_ZN14__interception14real_fstatfs64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2370' column='1'/>
      <!-- statvfs_f __interception::real_statvfs -->
      <var-decl name='real_statvfs' type-id='664a517e' mangled-name='_ZN14__interception12real_statvfsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2385' column='1'/>
      <!-- fstatvfs_f __interception::real_fstatvfs -->
      <var-decl name='real_fstatvfs' type-id='0ec06fac' mangled-name='_ZN14__interception13real_fstatvfsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2393' column='1'/>
      <!-- statvfs64_f __interception::real_statvfs64 -->
      <var-decl name='real_statvfs64' type-id='77ee431c' mangled-name='_ZN14__interception14real_statvfs64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- fstatvfs64_f __interception::real_fstatvfs64 -->
      <var-decl name='real_fstatvfs64' type-id='4c4cbffe' mangled-name='_ZN14__interception15real_fstatvfs64E' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- initgroups_f __interception::real_initgroups -->
      <var-decl name='real_initgroups' type-id='58e32347' mangled-name='_ZN14__interception15real_initgroupsE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2431' column='1'/>
      <!-- ether_ntoa_f __interception::real_ether_ntoa -->
      <var-decl name='real_ether_ntoa' type-id='5e34948a' mangled-name='_ZN14__interception15real_ether_ntoaE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2444' column='1'/>
      <!-- ether_aton_f __interception::real_ether_aton -->
      <var-decl name='real_ether_aton' type-id='1d8e4388' mangled-name='_ZN14__interception15real_ether_atonE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2452' column='1'/>
      <!-- ether_ntohost_f __interception::real_ether_ntohost -->
      <var-decl name='real_ether_ntohost' type-id='ea4d129f' mangled-name='_ZN14__interception18real_ether_ntohostE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2460' column='1'/>
      <!-- ether_hostton_f __interception::real_ether_hostton -->
      <var-decl name='real_ether_hostton' type-id='95937d79' mangled-name='_ZN14__interception18real_ether_hosttonE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1'/>
      <!-- ether_line_f __interception::real_ether_line -->
      <var-decl name='real_ether_line' type-id='047c788e' mangled-name='_ZN14__interception15real_ether_lineE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1'/>
      <!-- ether_ntoa_r_f __interception::real_ether_ntoa_r -->
      <var-decl name='real_ether_ntoa_r' type-id='5da8229f' mangled-name='_ZN14__interception17real_ether_ntoa_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2502' column='1'/>
      <!-- ether_aton_r_f __interception::real_ether_aton_r -->
      <var-decl name='real_ether_aton_r' type-id='c09ff0c5' mangled-name='_ZN14__interception17real_ether_aton_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2510' column='1'/>
      <!-- shmctl_f __interception::real_shmctl -->
      <var-decl name='real_shmctl' type-id='c246eb7a' mangled-name='_ZN14__interception11real_shmctlE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- random_r_f __interception::real_random_r -->
      <var-decl name='real_random_r' type-id='a262f6c3' mangled-name='_ZN14__interception13real_random_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2549' column='1'/>
      <!-- pthread_attr_getdetachstate_f __interception::real_pthread_attr_getdetachstate -->
      <var-decl name='real_pthread_attr_getdetachstate' type-id='e447f24a' mangled-name='_ZN14__interception32real_pthread_attr_getdetachstateE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2575' column='1'/>
      <!-- pthread_attr_getguardsize_f __interception::real_pthread_attr_getguardsize -->
      <var-decl name='real_pthread_attr_getguardsize' type-id='766e0d52' mangled-name='_ZN14__interception30real_pthread_attr_getguardsizeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2576' column='1'/>
      <!-- pthread_attr_getschedparam_f __interception::real_pthread_attr_getschedparam -->
      <var-decl name='real_pthread_attr_getschedparam' type-id='07cb745c' mangled-name='_ZN14__interception31real_pthread_attr_getschedparamE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2577' column='1'/>
      <!-- pthread_attr_getschedpolicy_f __interception::real_pthread_attr_getschedpolicy -->
      <var-decl name='real_pthread_attr_getschedpolicy' type-id='3340ab03' mangled-name='_ZN14__interception32real_pthread_attr_getschedpolicyE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2578' column='1'/>
      <!-- pthread_attr_getscope_f __interception::real_pthread_attr_getscope -->
      <var-decl name='real_pthread_attr_getscope' type-id='a2a8279e' mangled-name='_ZN14__interception26real_pthread_attr_getscopeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2579' column='1'/>
      <!-- pthread_attr_getstacksize_f __interception::real_pthread_attr_getstacksize -->
      <var-decl name='real_pthread_attr_getstacksize' type-id='a4354107' mangled-name='_ZN14__interception30real_pthread_attr_getstacksizeE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2580' column='1'/>
      <!-- pthread_attr_getstack_f __interception::real_pthread_attr_getstack -->
      <var-decl name='real_pthread_attr_getstack' type-id='5a4a9dc2' mangled-name='_ZN14__interception26real_pthread_attr_getstackE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1'/>
      <!-- pthread_attr_getinheritsched_f __interception::real_pthread_attr_getinheritsched -->
      <var-decl name='real_pthread_attr_getinheritsched' type-id='2ac74b96' mangled-name='_ZN14__interception33real_pthread_attr_getinheritschedE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2612' column='1'/>
      <!-- pthread_attr_getaffinity_np_f __interception::real_pthread_attr_getaffinity_np -->
      <var-decl name='real_pthread_attr_getaffinity_np' type-id='601defcd' mangled-name='_ZN14__interception32real_pthread_attr_getaffinity_npE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1'/>
      <!-- tmpnam_f __interception::real_tmpnam -->
      <var-decl name='real_tmpnam' type-id='357320c2' mangled-name='_ZN14__interception11real_tmpnamE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2639' column='1'/>
      <!-- tmpnam_r_f __interception::real_tmpnam_r -->
      <var-decl name='real_tmpnam_r' type-id='20e32e07' mangled-name='_ZN14__interception13real_tmpnam_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2657' column='1'/>
      <!-- tempnam_f __interception::real_tempnam -->
      <var-decl name='real_tempnam' type-id='8227220f' mangled-name='_ZN14__interception12real_tempnamE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2670' column='1'/>
      <!-- pthread_setname_np_f __interception::real_pthread_setname_np -->
      <var-decl name='real_pthread_setname_np' type-id='30c855b2' mangled-name='_ZN14__interception23real_pthread_setname_npE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2685' column='1'/>
      <!-- sincos_f __interception::real_sincos -->
      <var-decl name='real_sincos' type-id='b920491c' mangled-name='_ZN14__interception11real_sincosE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1'/>
      <!-- sincosf_f __interception::real_sincosf -->
      <var-decl name='real_sincosf' type-id='dd3cdfd0' mangled-name='_ZN14__interception12real_sincosfE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1'/>
      <!-- sincosl_f __interception::real_sincosl -->
      <var-decl name='real_sincosl' type-id='9af26ee2' mangled-name='_ZN14__interception12real_sincoslE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1'/>
      <!-- remquo_f __interception::real_remquo -->
      <var-decl name='real_remquo' type-id='a871207a' mangled-name='_ZN14__interception11real_remquoE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1'/>
      <!-- remquof_f __interception::real_remquof -->
      <var-decl name='real_remquof' type-id='6dda31b6' mangled-name='_ZN14__interception12real_remquofE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1'/>
      <!-- remquol_f __interception::real_remquol -->
      <var-decl name='real_remquol' type-id='bdaa52d4' mangled-name='_ZN14__interception12real_remquolE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1'/>
      <!-- lgamma_f __interception::real_lgamma -->
      <var-decl name='real_lgamma' type-id='70ba9bb4' mangled-name='_ZN14__interception11real_lgammaE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2758' column='1'/>
      <!-- lgammaf_f __interception::real_lgammaf -->
      <var-decl name='real_lgammaf' type-id='d21288d8' mangled-name='_ZN14__interception12real_lgammafE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2765' column='1'/>
      <!-- lgammal_f __interception::real_lgammal -->
      <var-decl name='real_lgammal' type-id='7de39aba' mangled-name='_ZN14__interception12real_lgammalE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2772' column='1'/>
      <!-- lgamma_r_f __interception::real_lgamma_r -->
      <var-decl name='real_lgamma_r' type-id='48944b79' mangled-name='_ZN14__interception13real_lgamma_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1'/>
      <!-- lgammaf_r_f __interception::real_lgammaf_r -->
      <var-decl name='real_lgammaf_r' type-id='19d20195' mangled-name='_ZN14__interception14real_lgammaf_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1'/>
      <!-- lgammal_r_f __interception::real_lgammal_r -->
      <var-decl name='real_lgammal_r' type-id='55dc0a4f' mangled-name='_ZN14__interception14real_lgammal_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1'/>
      <!-- drand48_r_f __interception::real_drand48_r -->
      <var-decl name='real_drand48_r' type-id='fa250223' mangled-name='_ZN14__interception14real_drand48_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2818' column='1'/>
      <!-- lrand48_r_f __interception::real_lrand48_r -->
      <var-decl name='real_lrand48_r' type-id='b1941d6b' mangled-name='_ZN14__interception14real_lrand48_rE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2825' column='1'/>
      <!-- getline_f __interception::real_getline -->
      <var-decl name='real_getline' type-id='c99d2cd3' mangled-name='_ZN14__interception12real_getlineE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1'/>
      <!-- getdelim_f __interception::real_getdelim -->
      <var-decl name='real_getdelim' type-id='2bc9cb76' mangled-name='_ZN14__interception13real_getdelimE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1'/>
      <!-- iconv_f __interception::real_iconv -->
      <var-decl name='real_iconv' type-id='4fbfd564' mangled-name='_ZN14__interception10real_iconvE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- times_f __interception::real_times -->
      <var-decl name='real_times' type-id='6490a7db' mangled-name='_ZN14__interception10real_timesE' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2896' column='1'/>
      <!-- sleep_f __interception::real_sleep -->
      <var-decl name='real_sleep' type-id='b36b3be2' mangled-name='_ZN14__interception10real_sleepE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='238' column='1'/>
      <!-- usleep_f __interception::real_usleep -->
      <var-decl name='real_usleep' type-id='d98ad8cf' mangled-name='_ZN14__interception11real_usleepE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='245' column='1'/>
      <!-- nanosleep_f __interception::real_nanosleep -->
      <var-decl name='real_nanosleep' type-id='53f60640' mangled-name='_ZN14__interception14real_nanosleepE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='252' column='1'/>
      <!-- dlopen_f __interception::real_dlopen -->
      <var-decl name='real_dlopen' type-id='d0d4e4cd' mangled-name='_ZN14__interception11real_dlopenE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='259' column='1'/>
      <!-- dlclose_f __interception::real_dlclose -->
      <var-decl name='real_dlclose' type-id='aadc1231' mangled-name='_ZN14__interception12real_dlcloseE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='270' column='1'/>
      <!-- atexit_f __interception::real_atexit -->
      <var-decl name='real_atexit' type-id='1cd4975c' mangled-name='_ZN14__interception11real_atexitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='342' column='1'/>
      <!-- on_exit_f __interception::real_on_exit -->
      <var-decl name='real_on_exit' type-id='b4099c07' mangled-name='_ZN14__interception12real_on_exitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='349' column='1'/>
      <!-- __cxa_atexit_f __interception::real___cxa_atexit -->
      <var-decl name='real___cxa_atexit' type-id='276aaee1' mangled-name='_ZN14__interception17real___cxa_atexitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1'/>
      <!-- setjmp_f __interception::real_setjmp -->
      <var-decl name='real_setjmp' type-id='e54ae702' mangled-name='_ZN14__interception11real_setjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='454' column='1'/>
      <!-- _setjmp_f __interception::real__setjmp -->
      <var-decl name='real__setjmp' type-id='e48ae053' mangled-name='_ZN14__interception12real__setjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='455' column='1'/>
      <!-- sigsetjmp_f __interception::real_sigsetjmp -->
      <var-decl name='real_sigsetjmp' type-id='e9a6f28b' mangled-name='_ZN14__interception14real_sigsetjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='456' column='1'/>
      <!-- __sigsetjmp_f __interception::real___sigsetjmp -->
      <var-decl name='real___sigsetjmp' type-id='47a97dc5' mangled-name='_ZN14__interception16real___sigsetjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='457' column='1'/>
      <!-- longjmp_f __interception::real_longjmp -->
      <var-decl name='real_longjmp' type-id='491aa978' mangled-name='_ZN14__interception12real_longjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='459' column='1'/>
      <!-- siglongjmp_f __interception::real_siglongjmp -->
      <var-decl name='real_siglongjmp' type-id='4df57093' mangled-name='_ZN14__interception15real_siglongjmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1'/>
      <!-- malloc_f __interception::real_malloc -->
      <var-decl name='real_malloc' type-id='3bdd9e39' mangled-name='_ZN14__interception11real_mallocE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='475' column='1'/>
      <!-- __libc_memalign_f __interception::real___libc_memalign -->
      <var-decl name='real___libc_memalign' type-id='b149ffb8' mangled-name='_ZN14__interception20real___libc_memalignE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='487' column='1'/>
      <!-- calloc_f __interception::real_calloc -->
      <var-decl name='real_calloc' type-id='61c70a7f' mangled-name='_ZN14__interception11real_callocE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='492' column='1'/>
      <!-- realloc_f __interception::real_realloc -->
      <var-decl name='real_realloc' type-id='2d45b4af' mangled-name='_ZN14__interception12real_reallocE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1'/>
      <!-- free_f __interception::real_free -->
      <var-decl name='real_free' type-id='ac305533' mangled-name='_ZN14__interception9real_freeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='521' column='1'/>
      <!-- cfree_f __interception::real_cfree -->
      <var-decl name='real_cfree' type-id='0d44f4c6' mangled-name='_ZN14__interception10real_cfreeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='531' column='1'/>
      <!-- malloc_usable_size_f __interception::real_malloc_usable_size -->
      <var-decl name='real_malloc_usable_size' type-id='0cf8e96e' mangled-name='_ZN14__interception23real_malloc_usable_sizeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='541' column='1'/>
      <!-- strlen_f __interception::real_strlen -->
      <var-decl name='real_strlen' type-id='54bb88eb' mangled-name='_ZN14__interception11real_strlenE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='613' column='1'/>
      <!-- memset_f __interception::real_memset -->
      <var-decl name='real_memset' type-id='cf324e6e' mangled-name='_ZN14__interception11real_memsetE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='620' column='1'/>
      <!-- memcpy_f __interception::real_memcpy -->
      <var-decl name='real_memcpy' type-id='9b4546f8' mangled-name='_ZN14__interception11real_memcpyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='626' column='1'/>
      <!-- memcmp_f __interception::real_memcmp -->
      <var-decl name='real_memcmp' type-id='fa9030b2' mangled-name='_ZN14__interception11real_memcmpE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='633' column='1'/>
      <!-- memchr_f __interception::real_memchr -->
      <var-decl name='real_memchr' type-id='5558e99d' mangled-name='_ZN14__interception11real_memchrE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='646' column='1'/>
      <!-- memrchr_f __interception::real_memrchr -->
      <var-decl name='real_memrchr' type-id='dd2e187d' mangled-name='_ZN14__interception12real_memrchrE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1'/>
      <!-- memmove_f __interception::real_memmove -->
      <var-decl name='real_memmove' type-id='aaba677d' mangled-name='_ZN14__interception12real_memmoveE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='660' column='1'/>
      <!-- strchr_f __interception::real_strchr -->
      <var-decl name='real_strchr' type-id='46cc4fe7' mangled-name='_ZN14__interception11real_strchrE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='667' column='1'/>
      <!-- strchrnul_f __interception::real_strchrnul -->
      <var-decl name='real_strchrnul' type-id='0b1413f4' mangled-name='_ZN14__interception14real_strchrnulE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='675' column='1'/>
      <!-- strrchr_f __interception::real_strrchr -->
      <var-decl name='real_strrchr' type-id='3d1edcf7' mangled-name='_ZN14__interception12real_strrchrE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- strcpy_f __interception::real_strcpy -->
      <var-decl name='real_strcpy' type-id='a9f800c6' mangled-name='_ZN14__interception11real_strcpyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='689' column='1'/>
      <!-- strncpy_f __interception::real_strncpy -->
      <var-decl name='real_strncpy' type-id='4faffbe2' mangled-name='_ZN14__interception12real_strncpyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1'/>
      <!-- strstr_f __interception::real_strstr -->
      <var-decl name='real_strstr' type-id='ba4e17c3' mangled-name='_ZN14__interception11real_strstrE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='705' column='1'/>
      <!-- strdup_f __interception::real_strdup -->
      <var-decl name='real_strdup' type-id='03e375f9' mangled-name='_ZN14__interception11real_strdupE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='715' column='1'/>
      <!-- mmap_f __interception::real_mmap -->
      <var-decl name='real_mmap' type-id='f78b4d96' mangled-name='_ZN14__interception9real_mmapE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- mmap64_f __interception::real_mmap64 -->
      <var-decl name='real_mmap64' type-id='28c29ab4' mangled-name='_ZN14__interception11real_mmap64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- munmap_f __interception::real_munmap -->
      <var-decl name='real_munmap' type-id='95e830db' mangled-name='_ZN14__interception11real_munmapE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='763' column='1'/>
      <!-- memalign_f __interception::real_memalign -->
      <var-decl name='real_memalign' type-id='3e306737' mangled-name='_ZN14__interception13real_memalignE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='770' column='1'/>
      <!-- valloc_f __interception::real_valloc -->
      <var-decl name='real_valloc' type-id='0b939ac2' mangled-name='_ZN14__interception11real_vallocE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='775' column='1'/>
      <!-- pvalloc_f __interception::real_pvalloc -->
      <var-decl name='real_pvalloc' type-id='ecfa5f0a' mangled-name='_ZN14__interception12real_pvallocE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- posix_memalign_f __interception::real_posix_memalign -->
      <var-decl name='real_posix_memalign' type-id='43eba3cb' mangled-name='_ZN14__interception19real_posix_memalignE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1'/>
      <!-- pthread_create_f __interception::real_pthread_create -->
      <var-decl name='real_pthread_create' type-id='d84d3edc' mangled-name='_ZN14__interception19real_pthread_createE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1'/>
      <!-- pthread_join_f __interception::real_pthread_join -->
      <var-decl name='real_pthread_join' type-id='8f8b86f0' mangled-name='_ZN14__interception17real_pthread_joinE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='904' column='1'/>
      <!-- pthread_detach_f __interception::real_pthread_detach -->
      <var-decl name='real_pthread_detach' type-id='d44ce89f' mangled-name='_ZN14__interception19real_pthread_detachE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='914' column='1'/>
      <!-- pthread_mutex_init_f __interception::real_pthread_mutex_init -->
      <var-decl name='real_pthread_mutex_init' type-id='7b83b89e' mangled-name='_ZN14__interception23real_pthread_mutex_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='924' column='1'/>
      <!-- pthread_mutex_destroy_f __interception::real_pthread_mutex_destroy -->
      <var-decl name='real_pthread_mutex_destroy' type-id='8cf2bcf0' mangled-name='_ZN14__interception26real_pthread_mutex_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='940' column='1'/>
      <!-- pthread_mutex_trylock_f __interception::real_pthread_mutex_trylock -->
      <var-decl name='real_pthread_mutex_trylock' type-id='a7b7fb24' mangled-name='_ZN14__interception26real_pthread_mutex_trylockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='949' column='1'/>
      <!-- pthread_mutex_timedlock_f __interception::real_pthread_mutex_timedlock -->
      <var-decl name='real_pthread_mutex_timedlock' type-id='d9ebba72' mangled-name='_ZN14__interception28real_pthread_mutex_timedlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='959' column='1'/>
      <!-- pthread_spin_init_f __interception::real_pthread_spin_init -->
      <var-decl name='real_pthread_spin_init' type-id='76924835' mangled-name='_ZN14__interception22real_pthread_spin_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='968' column='1'/>
      <!-- pthread_spin_destroy_f __interception::real_pthread_spin_destroy -->
      <var-decl name='real_pthread_spin_destroy' type-id='64fa7201' mangled-name='_ZN14__interception25real_pthread_spin_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='977' column='1'/>
      <!-- pthread_spin_lock_f __interception::real_pthread_spin_lock -->
      <var-decl name='real_pthread_spin_lock' type-id='107b1d8c' mangled-name='_ZN14__interception22real_pthread_spin_lockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='986' column='1'/>
      <!-- pthread_spin_trylock_f __interception::real_pthread_spin_trylock -->
      <var-decl name='real_pthread_spin_trylock' type-id='151ca791' mangled-name='_ZN14__interception25real_pthread_spin_trylockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='995' column='1'/>
      <!-- pthread_spin_unlock_f __interception::real_pthread_spin_unlock -->
      <var-decl name='real_pthread_spin_unlock' type-id='ddd0e48b' mangled-name='_ZN14__interception24real_pthread_spin_unlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1004' column='1'/>
      <!-- pthread_rwlock_init_f __interception::real_pthread_rwlock_init -->
      <var-decl name='real_pthread_rwlock_init' type-id='28407a1d' mangled-name='_ZN14__interception24real_pthread_rwlock_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1011' column='1'/>
      <!-- pthread_rwlock_destroy_f __interception::real_pthread_rwlock_destroy -->
      <var-decl name='real_pthread_rwlock_destroy' type-id='aeb14969' mangled-name='_ZN14__interception27real_pthread_rwlock_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1020' column='1'/>
      <!-- pthread_rwlock_rdlock_f __interception::real_pthread_rwlock_rdlock -->
      <var-decl name='real_pthread_rwlock_rdlock' type-id='045b4f42' mangled-name='_ZN14__interception26real_pthread_rwlock_rdlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1029' column='1'/>
      <!-- pthread_rwlock_tryrdlock_f __interception::real_pthread_rwlock_tryrdlock -->
      <var-decl name='real_pthread_rwlock_tryrdlock' type-id='e04c6f47' mangled-name='_ZN14__interception29real_pthread_rwlock_tryrdlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1038' column='1'/>
      <!-- pthread_rwlock_timedrdlock_f __interception::real_pthread_rwlock_timedrdlock -->
      <var-decl name='real_pthread_rwlock_timedrdlock' type-id='4ad9e681' mangled-name='_ZN14__interception31real_pthread_rwlock_timedrdlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1047' column='1'/>
      <!-- pthread_rwlock_wrlock_f __interception::real_pthread_rwlock_wrlock -->
      <var-decl name='real_pthread_rwlock_wrlock' type-id='41e7978d' mangled-name='_ZN14__interception26real_pthread_rwlock_wrlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1056' column='1'/>
      <!-- pthread_rwlock_trywrlock_f __interception::real_pthread_rwlock_trywrlock -->
      <var-decl name='real_pthread_rwlock_trywrlock' type-id='4aa8c05c' mangled-name='_ZN14__interception29real_pthread_rwlock_trywrlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1065' column='1'/>
      <!-- pthread_rwlock_timedwrlock_f __interception::real_pthread_rwlock_timedwrlock -->
      <var-decl name='real_pthread_rwlock_timedwrlock' type-id='a573726a' mangled-name='_ZN14__interception31real_pthread_rwlock_timedwrlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1074' column='1'/>
      <!-- pthread_rwlock_unlock_f __interception::real_pthread_rwlock_unlock -->
      <var-decl name='real_pthread_rwlock_unlock' type-id='e46ade43' mangled-name='_ZN14__interception26real_pthread_rwlock_unlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1083' column='1'/>
      <!-- pthread_cond_destroy_f __interception::real_pthread_cond_destroy -->
      <var-decl name='real_pthread_cond_destroy' type-id='dd703ddd' mangled-name='_ZN14__interception25real_pthread_cond_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1090' column='1'/>
      <!-- pthread_cond_timedwait_f __interception::real_pthread_cond_timedwait -->
      <var-decl name='real_pthread_cond_timedwait' type-id='980809b1' mangled-name='_ZN14__interception27real_pthread_cond_timedwaitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1'/>
      <!-- pthread_barrier_init_f __interception::real_pthread_barrier_init -->
      <var-decl name='real_pthread_barrier_init' type-id='48211ad2' mangled-name='_ZN14__interception25real_pthread_barrier_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1'/>
      <!-- pthread_barrier_destroy_f __interception::real_pthread_barrier_destroy -->
      <var-decl name='real_pthread_barrier_destroy' type-id='86fa158c' mangled-name='_ZN14__interception28real_pthread_barrier_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1114' column='1'/>
      <!-- pthread_barrier_wait_f __interception::real_pthread_barrier_wait -->
      <var-decl name='real_pthread_barrier_wait' type-id='752aeddd' mangled-name='_ZN14__interception25real_pthread_barrier_waitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1121' column='1'/>
      <!-- pthread_once_f __interception::real_pthread_once -->
      <var-decl name='real_pthread_once' type-id='3768f4a1' mangled-name='_ZN14__interception17real_pthread_onceE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1133' column='1'/>
      <!-- sem_init_f __interception::real_sem_init -->
      <var-decl name='real_sem_init' type-id='8ac09a03' mangled-name='_ZN14__interception13real_sem_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1'/>
      <!-- sem_destroy_f __interception::real_sem_destroy -->
      <var-decl name='real_sem_destroy' type-id='b88db2ab' mangled-name='_ZN14__interception16real_sem_destroyE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1168' column='1'/>
      <!-- sem_wait_f __interception::real_sem_wait -->
      <var-decl name='real_sem_wait' type-id='90821004' mangled-name='_ZN14__interception13real_sem_waitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1174' column='1'/>
      <!-- sem_trywait_f __interception::real_sem_trywait -->
      <var-decl name='real_sem_trywait' type-id='10413675' mangled-name='_ZN14__interception16real_sem_trywaitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1183' column='1'/>
      <!-- sem_timedwait_f __interception::real_sem_timedwait -->
      <var-decl name='real_sem_timedwait' type-id='73986c9f' mangled-name='_ZN14__interception18real_sem_timedwaitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1192' column='1'/>
      <!-- sem_post_f __interception::real_sem_post -->
      <var-decl name='real_sem_post' type-id='de36a55b' mangled-name='_ZN14__interception13real_sem_postE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1201' column='1'/>
      <!-- sem_getvalue_f __interception::real_sem_getvalue -->
      <var-decl name='real_sem_getvalue' type-id='27ece798' mangled-name='_ZN14__interception17real_sem_getvalueE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1'/>
      <!-- __xstat_f __interception::real___xstat -->
      <var-decl name='real___xstat' type-id='b8997085' mangled-name='_ZN14__interception12real___xstatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1217' column='1'/>
      <!-- stat_f __interception::real_stat -->
      <var-decl name='real_stat' type-id='06298a7f' mangled-name='_ZN14__interception9real_statE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1222' column='1'/>
      <!-- __xstat64_f __interception::real___xstat64 -->
      <var-decl name='real___xstat64' type-id='6e4bed47' mangled-name='_ZN14__interception14real___xstat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1227' column='1'/>
      <!-- stat64_f __interception::real_stat64 -->
      <var-decl name='real_stat64' type-id='f71e0e55' mangled-name='_ZN14__interception11real_stat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1232' column='1'/>
      <!-- __lxstat_f __interception::real___lxstat -->
      <var-decl name='real___lxstat' type-id='e73f277d' mangled-name='_ZN14__interception13real___lxstatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1237' column='1'/>
      <!-- lstat_f __interception::real_lstat -->
      <var-decl name='real_lstat' type-id='4ba5a463' mangled-name='_ZN14__interception10real_lstatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1242' column='1'/>
      <!-- __lxstat64_f __interception::real___lxstat64 -->
      <var-decl name='real___lxstat64' type-id='92419e1f' mangled-name='_ZN14__interception15real___lxstat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1247' column='1'/>
      <!-- lstat64_f __interception::real_lstat64 -->
      <var-decl name='real_lstat64' type-id='d9faab09' mangled-name='_ZN14__interception12real_lstat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1252' column='1'/>
      <!-- __fxstat_f __interception::real___fxstat -->
      <var-decl name='real___fxstat' type-id='f1889c2f' mangled-name='_ZN14__interception13real___fxstatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1257' column='1'/>
      <!-- fstat_f __interception::real_fstat -->
      <var-decl name='real_fstat' type-id='d32fce15' mangled-name='_ZN14__interception10real_fstatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1264' column='1'/>
      <!-- __fxstat64_f __interception::real___fxstat64 -->
      <var-decl name='real___fxstat64' type-id='4b443905' mangled-name='_ZN14__interception15real___fxstat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1271' column='1'/>
      <!-- fstat64_f __interception::real_fstat64 -->
      <var-decl name='real_fstat64' type-id='865bc697' mangled-name='_ZN14__interception12real_fstat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1278' column='1'/>
      <!-- open_f __interception::real_open -->
      <var-decl name='real_open' type-id='c866701d' mangled-name='_ZN14__interception9real_openE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1285' column='1'/>
      <!-- open64_f __interception::real_open64 -->
      <var-decl name='real_open64' type-id='33a3acbf' mangled-name='_ZN14__interception11real_open64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- creat_f __interception::real_creat -->
      <var-decl name='real_creat' type-id='cfd91750' mangled-name='_ZN14__interception10real_creatE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1301' column='1'/>
      <!-- creat64_f __interception::real_creat64 -->
      <var-decl name='real_creat64' type-id='4b45b162' mangled-name='_ZN14__interception12real_creat64E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1'/>
      <!-- dup_f __interception::real_dup -->
      <var-decl name='real_dup' type-id='616fb758' mangled-name='_ZN14__interception8real_dupE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1317' column='1'/>
      <!-- dup2_f __interception::real_dup2 -->
      <var-decl name='real_dup2' type-id='bd9564c8' mangled-name='_ZN14__interception9real_dup2E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1325' column='1'/>
      <!-- dup3_f __interception::real_dup3 -->
      <var-decl name='real_dup3' type-id='230cdd13' mangled-name='_ZN14__interception9real_dup3E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1333' column='1'/>
      <!-- eventfd_f __interception::real_eventfd -->
      <var-decl name='real_eventfd' type-id='fd5452a7' mangled-name='_ZN14__interception12real_eventfdE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1341' column='1'/>
      <!-- signalfd_f __interception::real_signalfd -->
      <var-decl name='real_signalfd' type-id='597efc9b' mangled-name='_ZN14__interception13real_signalfdE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1'/>
      <!-- inotify_init_f __interception::real_inotify_init -->
      <var-decl name='real_inotify_init' type-id='ab7cd0dc' mangled-name='_ZN14__interception17real_inotify_initE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1359' column='1'/>
      <!-- inotify_init1_f __interception::real_inotify_init1 -->
      <var-decl name='real_inotify_init1' type-id='f7a2cb59' mangled-name='_ZN14__interception18real_inotify_init1E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1367' column='1'/>
      <!-- socket_f __interception::real_socket -->
      <var-decl name='real_socket' type-id='1c6a8ec0' mangled-name='_ZN14__interception11real_socketE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- socketpair_f __interception::real_socketpair -->
      <var-decl name='real_socketpair' type-id='aa8cca1c' mangled-name='_ZN14__interception15real_socketpairE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1'/>
      <!-- connect_f __interception::real_connect -->
      <var-decl name='real_connect' type-id='5acc9333' mangled-name='_ZN14__interception12real_connectE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1391' column='1'/>
      <!-- bind_f __interception::real_bind -->
      <var-decl name='real_bind' type-id='7ab177f6' mangled-name='_ZN14__interception9real_bindE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- listen_f __interception::real_listen -->
      <var-decl name='real_listen' type-id='551c8d1a' mangled-name='_ZN14__interception11real_listenE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1408' column='1'/>
      <!-- epoll_create_f __interception::real_epoll_create -->
      <var-decl name='real_epoll_create' type-id='3ea3d96a' mangled-name='_ZN14__interception17real_epoll_createE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1416' column='1'/>
      <!-- epoll_create1_f __interception::real_epoll_create1 -->
      <var-decl name='real_epoll_create1' type-id='9689fdd3' mangled-name='_ZN14__interception18real_epoll_create1E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1424' column='1'/>
      <!-- close_f __interception::real_close -->
      <var-decl name='real_close' type-id='b40c89a1' mangled-name='_ZN14__interception10real_closeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1432' column='1'/>
      <!-- __close_f __interception::real___close -->
      <var-decl name='real___close' type-id='0c2fd74f' mangled-name='_ZN14__interception12real___closeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1439' column='1'/>
      <!-- __res_iclose_f __interception::real___res_iclose -->
      <var-decl name='real___res_iclose' type-id='ca4300cd' mangled-name='_ZN14__interception17real___res_icloseE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1447' column='1'/>
      <!-- pipe_f __interception::real_pipe -->
      <var-decl name='real_pipe' type-id='fb0ba0c1' mangled-name='_ZN14__interception9real_pipeE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1458' column='1'/>
      <!-- pipe2_f __interception::real_pipe2 -->
      <var-decl name='real_pipe2' type-id='ac967ca7' mangled-name='_ZN14__interception10real_pipe2E' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1466' column='1'/>
      <!-- send_f __interception::real_send -->
      <var-decl name='real_send' type-id='7f782003' mangled-name='_ZN14__interception9real_sendE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1474' column='1'/>
      <!-- sendmsg_f __interception::real_sendmsg -->
      <var-decl name='real_sendmsg' type-id='82e1e5ca' mangled-name='_ZN14__interception12real_sendmsgE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1'/>
      <!-- recv_f __interception::real_recv -->
      <var-decl name='real_recv' type-id='39850d35' mangled-name='_ZN14__interception9real_recvE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- unlink_f __interception::real_unlink -->
      <var-decl name='real_unlink' type-id='165d2356' mangled-name='_ZN14__interception11real_unlinkE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1505' column='1'/>
      <!-- fopen_f __interception::real_fopen -->
      <var-decl name='real_fopen' type-id='4d4dba4f' mangled-name='_ZN14__interception10real_fopenE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1512' column='1'/>
      <!-- freopen_f __interception::real_freopen -->
      <var-decl name='real_freopen' type-id='25001612' mangled-name='_ZN14__interception12real_freopenE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1'/>
      <!-- fclose_f __interception::real_fclose -->
      <var-decl name='real_fclose' type-id='072efd4b' mangled-name='_ZN14__interception11real_fcloseE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1541' column='1'/>
      <!-- fread_f __interception::real_fread -->
      <var-decl name='real_fread' type-id='4b083b97' mangled-name='_ZN14__interception10real_freadE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1554' column='1'/>
      <!-- fwrite_f __interception::real_fwrite -->
      <var-decl name='real_fwrite' type-id='0c074bbc' mangled-name='_ZN14__interception11real_fwriteE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- fflush_f __interception::real_fflush -->
      <var-decl name='real_fflush' type-id='24d3b561' mangled-name='_ZN14__interception11real_fflushE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1572' column='1'/>
      <!-- abort_f __interception::real_abort -->
      <var-decl name='real_abort' type-id='1990bf27' mangled-name='_ZN14__interception10real_abortE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1580' column='1'/>
      <!-- puts_f __interception::real_puts -->
      <var-decl name='real_puts' type-id='c52e4133' mangled-name='_ZN14__interception9real_putsE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1586' column='1'/>
      <!-- rmdir_f __interception::real_rmdir -->
      <var-decl name='real_rmdir' type-id='10879e85' mangled-name='_ZN14__interception10real_rmdirE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1592' column='1'/>
      <!-- opendir_f __interception::real_opendir -->
      <var-decl name='real_opendir' type-id='b892f116' mangled-name='_ZN14__interception12real_opendirE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1599' column='1'/>
      <!-- epoll_ctl_f __interception::real_epoll_ctl -->
      <var-decl name='real_epoll_ctl' type-id='c6b78825' mangled-name='_ZN14__interception14real_epoll_ctlE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1'/>
      <!-- epoll_wait_f __interception::real_epoll_wait -->
      <var-decl name='real_epoll_wait' type-id='f1a50127' mangled-name='_ZN14__interception15real_epoll_waitE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1'/>
      <!-- sigaction_f __interception::real_sigaction -->
      <var-decl name='real_sigaction' type-id='d9be16f6' mangled-name='_ZN14__interception14real_sigactionE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1'/>
      <!-- signal_f __interception::real_signal -->
      <var-decl name='real_signal' type-id='d74239b9' mangled-name='_ZN14__interception11real_signalE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1698' column='1'/>
      <!-- sigsuspend_f __interception::real_sigsuspend -->
      <var-decl name='real_sigsuspend' type-id='2bcc6d6a' mangled-name='_ZN14__interception15real_sigsuspendE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1710' column='1'/>
      <!-- raise_f __interception::real_raise -->
      <var-decl name='real_raise' type-id='2369d32d' mangled-name='_ZN14__interception10real_raiseE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1715' column='1'/>
      <!-- kill_f __interception::real_kill -->
      <var-decl name='real_kill' type-id='462e314d' mangled-name='_ZN14__interception9real_killE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1727' column='1'/>
      <!-- pthread_kill_f __interception::real_pthread_kill -->
      <var-decl name='real_pthread_kill' type-id='7094c300' mangled-name='_ZN14__interception17real_pthread_killE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1'/>
      <!-- gettimeofday_f __interception::real_gettimeofday -->
      <var-decl name='real_gettimeofday' type-id='55d1f3df' mangled-name='_ZN14__interception17real_gettimeofdayE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1759' column='1'/>
      <!-- getaddrinfo_f __interception::real_getaddrinfo -->
      <var-decl name='real_getaddrinfo' type-id='af3e9a72' mangled-name='_ZN14__interception16real_getaddrinfoE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1'/>
      <!-- mlock_f __interception::real_mlock -->
      <var-decl name='real_mlock' type-id='9e5f99ed' mangled-name='_ZN14__interception10real_mlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1'/>
      <!-- munlock_f __interception::real_munlock -->
      <var-decl name='real_munlock' type-id='5ffdec7e' mangled-name='_ZN14__interception12real_munlockE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1796' column='1'/>
      <!-- mlockall_f __interception::real_mlockall -->
      <var-decl name='real_mlockall' type-id='111bdfea' mangled-name='_ZN14__interception13real_mlockallE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1801' column='1'/>
      <!-- munlockall_f __interception::real_munlockall -->
      <var-decl name='real_munlockall' type-id='5a1bc08f' mangled-name='_ZN14__interception15real_munlockallE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1806' column='1'/>
      <!-- fork_f __interception::real_fork -->
      <var-decl name='real_fork' type-id='bee80139' mangled-name='_ZN14__interception9real_forkE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1811' column='1'/>
    </namespace-decl>
    <!-- char* __interceptor_textdomain(const char*) -->
    <function-decl name='__interceptor_textdomain' mangled-name='__interceptor_textdomain' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='62' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_textdomain'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6039' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __interceptor_strcmp(const char*, const char*) -->
    <function-decl name='__interceptor_strcmp' mangled-name='__interceptor_strcmp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='82' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strcmp'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_strncmp(const char*, const char*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_strncmp' mangled-name='__interceptor_strncmp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='97' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strncmp'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_strcasecmp(const char*, const char*) -->
    <function-decl name='__interceptor_strcasecmp' mangled-name='__interceptor_strcasecmp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='126' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strcasecmp'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_strncasecmp(const char*, const char*, SIZE_T) -->
    <function-decl name='__interceptor_strncasecmp' mangled-name='__interceptor_strncasecmp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strncasecmp'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='n' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='141' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- double __interceptor_frexp(double, int*) -->
    <function-decl name='__interceptor_frexp' mangled-name='__interceptor_frexp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='164' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_frexp'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- float __interceptor_frexpf(float, int*) -->
    <function-decl name='__interceptor_frexpf' mangled-name='__interceptor_frexpf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='178' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_frexpf'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-decl>
    <!-- long double __interceptor_frexpl(long double, int*) -->
    <function-decl name='__interceptor_frexpl' mangled-name='__interceptor_frexpl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='186' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_frexpl'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_read(int, void*, SIZE_T) -->
    <function-decl name='__interceptor_read' mangled-name='__interceptor_read' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='223' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_read'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pread(int, void*, SIZE_T, OFF_T) -->
    <function-decl name='__interceptor_pread' mangled-name='__interceptor_pread' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='238' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pread'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pread64(int, void*, SIZE_T, OFF64_T) -->
    <function-decl name='__interceptor_pread64' mangled-name='__interceptor_pread64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pread64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='253' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_readv(int, __sanitizer::__sanitizer_iovec*, int) -->
    <function-decl name='__interceptor_readv' mangled-name='__interceptor_readv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='268' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_readv'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_preadv(int, __sanitizer::__sanitizer_iovec*, int, OFF_T) -->
    <function-decl name='__interceptor_preadv' mangled-name='__interceptor_preadv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_preadv'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_preadv64(int, __sanitizer::__sanitizer_iovec*, int, OFF64_T) -->
    <function-decl name='__interceptor_preadv64' mangled-name='__interceptor_preadv64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='300' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_preadv64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_write(int, void*, SIZE_T) -->
    <function-decl name='__interceptor_write' mangled-name='__interceptor_write' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_write'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='316' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pwrite(int, void*, SIZE_T, OFF_T) -->
    <function-decl name='__interceptor_pwrite' mangled-name='__interceptor_pwrite' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pwrite'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='332' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pwrite64(int, void*, OFF64_T, OFF64_T) -->
    <function-decl name='__interceptor_pwrite64' mangled-name='__interceptor_pwrite64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pwrite64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='347' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_writev(int, __sanitizer::__sanitizer_iovec*, int) -->
    <function-decl name='__interceptor_writev' mangled-name='__interceptor_writev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_writev'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='363' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pwritev(int, __sanitizer::__sanitizer_iovec*, int, OFF_T) -->
    <function-decl name='__interceptor_pwritev' mangled-name='__interceptor_pwritev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pwritev'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='379' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_pwritev64(int, __sanitizer::__sanitizer_iovec*, int, OFF64_T) -->
    <function-decl name='__interceptor_pwritev64' mangled-name='__interceptor_pwritev64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pwritev64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='395' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- int __interceptor_prctl(int, unsigned long int, unsigned long int, unsigned long int, unsigned long int) -->
    <function-decl name='__interceptor_prctl' mangled-name='__interceptor_prctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_prctl'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='option' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='411' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- unsigned long int __interceptor_time(unsigned long int*) -->
    <function-decl name='__interceptor_time' mangled-name='__interceptor_time' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='432' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_time'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='t' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='432' column='1'/>
      <!-- unsigned long int -->
      <return type-id='7359adad'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_tm* __interceptor_localtime(unsigned long int*) -->
    <function-decl name='__interceptor_localtime' mangled-name='__interceptor_localtime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='456' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_localtime'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='476' column='1'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_tm* __interceptor_localtime_r(unsigned long int*, void*) -->
    <function-decl name='__interceptor_localtime_r' mangled-name='__interceptor_localtime_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='466' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_localtime_r'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_tm* __interceptor_gmtime(unsigned long int*) -->
    <function-decl name='__interceptor_gmtime' mangled-name='__interceptor_gmtime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='476' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gmtime'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='476' column='1'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_tm* __interceptor_gmtime_r(unsigned long int*, void*) -->
    <function-decl name='__interceptor_gmtime_r' mangled-name='__interceptor_gmtime_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gmtime_r'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='486' column='1'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-decl>
    <!-- char* __interceptor_ctime(unsigned long int*) -->
    <function-decl name='__interceptor_ctime' mangled-name='__interceptor_ctime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='496' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ctime'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='496' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_ctime_r(unsigned long int*, char*) -->
    <function-decl name='__interceptor_ctime_r' mangled-name='__interceptor_ctime_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='506' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ctime_r'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='506' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='506' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_asctime(__sanitizer::__sanitizer_tm*) -->
    <function-decl name='__interceptor_asctime' mangled-name='__interceptor_asctime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='516' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_asctime'>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='516' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_asctime_r(__sanitizer::__sanitizer_tm*, char*) -->
    <function-decl name='__interceptor_asctime_r' mangled-name='__interceptor_asctime_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='526' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_asctime_r'>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='526' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='526' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strptime(char*, char*, __sanitizer::__sanitizer_tm*) -->
    <function-decl name='__interceptor_strptime' mangled-name='__interceptor_strptime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strptime'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='550' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __interceptor_vscanf(const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor_vscanf' mangled-name='__interceptor_vscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='587' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_vscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_vsscanf(const char*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor_vsscanf' mangled-name='__interceptor_vsscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='590' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_vsscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='str' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_vfscanf(void*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor_vfscanf' mangled-name='__interceptor_vfscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='593' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_vfscanf'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_vscanf(const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor___isoc99_vscanf' mangled-name='__interceptor___isoc99_vscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_vscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='597' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_vsscanf(const char*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor___isoc99_vsscanf' mangled-name='__interceptor___isoc99_vsscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_vsscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='str' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='600' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_vfscanf(void*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='__interceptor___isoc99_vfscanf' mangled-name='__interceptor___isoc99_vfscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_vfscanf'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='604' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_scanf(const char*, ...) -->
    <function-decl name='__interceptor_scanf' mangled-name='__interceptor_scanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='619' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_scanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='629' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fscanf(void*, const char*, ...) -->
    <function-decl name='__interceptor_fscanf' mangled-name='__interceptor_fscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='622' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fscanf'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sscanf(const char*, const char*, ...) -->
    <function-decl name='__interceptor_sscanf' mangled-name='__interceptor_sscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='625' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_scanf(const char*, ...) -->
    <function-decl name='__interceptor___isoc99_scanf' mangled-name='__interceptor___isoc99_scanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='629' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_scanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='629' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_fscanf(void*, const char*, ...) -->
    <function-decl name='__interceptor___isoc99_fscanf' mangled-name='__interceptor___isoc99_fscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_fscanf'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='632' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___isoc99_sscanf(const char*, const char*, ...) -->
    <function-decl name='__interceptor___isoc99_sscanf' mangled-name='__interceptor___isoc99_sscanf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='635' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___isoc99_sscanf'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_ioctl(int, unsigned int, void*) -->
    <function-decl name='__interceptor_ioctl' mangled-name='__interceptor_ioctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ioctl'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='d' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='request' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='667' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_clock_getres(__sanitizer::u32, void*) -->
    <function-decl name='__interceptor_clock_getres' mangled-name='__interceptor_clock_getres' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='790' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_clock_getres'>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='clk_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_clock_gettime(__sanitizer::u32, void*) -->
    <function-decl name='__interceptor_clock_gettime' mangled-name='__interceptor_clock_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='799' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_clock_gettime'>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='clk_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_clock_settime(__sanitizer::u32, void*) -->
    <function-decl name='__interceptor_clock_settime' mangled-name='__interceptor_clock_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_clock_settime'>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='clk_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='808' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_getitimer(int, void*) -->
    <function-decl name='__interceptor_getitimer' mangled-name='__interceptor_getitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='823' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getitimer'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_setitimer(int, void*, void*) -->
    <function-decl name='__interceptor_setitimer' mangled-name='__interceptor_setitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_setitimer'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='832' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_wait(int*) -->
    <function-decl name='__interceptor_wait' mangled-name='__interceptor_wait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='968' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wait'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_waitid(int, int, void*, int) -->
    <function-decl name='__interceptor_waitid' mangled-name='__interceptor_waitid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_waitid'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='idtype' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='infop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='976' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_waitpid(int, int*, int) -->
    <function-decl name='__interceptor_waitpid' mangled-name='__interceptor_waitpid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_waitpid'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='985' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_wait3(int*, int, void*) -->
    <function-decl name='__interceptor_wait3' mangled-name='__interceptor_wait3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wait3'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rusage' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='993' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_wait4(int, int*, int, void*) -->
    <function-decl name='__interceptor_wait4' mangled-name='__interceptor_wait4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wait4'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rusage' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1003' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_inet_ntop(int, void*, char*, __sanitizer::u32) -->
    <function-decl name='__interceptor_inet_ntop' mangled-name='__interceptor_inet_ntop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_inet_ntop'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1024' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __interceptor_inet_pton(int, const char*, void*) -->
    <function-decl name='__interceptor_inet_pton' mangled-name='__interceptor_inet_pton' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_inet_pton'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_inet_aton(const char*, void*) -->
    <function-decl name='__interceptor_inet_aton' mangled-name='__interceptor_inet_aton' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_inet_aton'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_getschedparam(__sanitizer::uptr, int*, int*) -->
    <function-decl name='__interceptor_pthread_getschedparam' mangled-name='__interceptor_pthread_getschedparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_getschedparam'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='thread' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1070' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_getsockname(int, void*, int*) -->
    <function-decl name='__interceptor_getsockname' mangled-name='__interceptor_getsockname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getsockname'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sock_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='addrlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1142' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_hostent* __interceptor_gethostbyname(char*) -->
    <function-decl name='__interceptor_gethostbyname' mangled-name='__interceptor_gethostbyname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1181' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyname'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1181' column='1'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_hostent* __interceptor_gethostbyaddr(void*, int, int) -->
    <function-decl name='__interceptor_gethostbyaddr' mangled-name='__interceptor_gethostbyaddr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyaddr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1189' column='1'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_hostent* __interceptor_gethostent(int) -->
    <function-decl name='__interceptor_gethostent' mangled-name='__interceptor_gethostent' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostent'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fake' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1199' column='1'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_hostent* __interceptor_gethostbyname2(char*, int) -->
    <function-decl name='__interceptor_gethostbyname2' mangled-name='__interceptor_gethostbyname2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1207' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyname2'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1207' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1207' column='1'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-decl>
    <!-- int __interceptor_gethostent_r(__sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-decl name='__interceptor_gethostent_r' mangled-name='__interceptor_gethostent_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostent_r'>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1224' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_gethostbyaddr_r(void*, int, int, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-decl name='__interceptor_gethostbyaddr_r' mangled-name='__interceptor_gethostbyaddr_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyaddr_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1241' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_gethostbyname_r(char*, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-decl name='__interceptor_gethostbyname_r' mangled-name='__interceptor_gethostbyname_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyname_r'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1261' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_gethostbyname2_r(char*, int, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-decl name='__interceptor_gethostbyname2_r' mangled-name='__interceptor_gethostbyname2_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gethostbyname2_r'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1279' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_getsockopt(int, int, int, void*, int*) -->
    <function-decl name='__interceptor_getsockopt' mangled-name='__interceptor_getsockopt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getsockopt'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sockfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='level' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='optname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='optval' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='optlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1307' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_accept(int, void*, unsigned int*) -->
    <function-decl name='__interceptor_accept' mangled-name='__interceptor_accept' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1324' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_accept'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sockfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='addrlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_accept4(int, void*, unsigned int*, int) -->
    <function-decl name='__interceptor_accept4' mangled-name='__interceptor_accept4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_accept4'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='addrlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='f' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1346' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- double __interceptor_modf(double, double*) -->
    <function-decl name='__interceptor_modf' mangled-name='__interceptor_modf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_modf'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1368' column='1'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='iptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1368' column='1'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- float __interceptor_modff(float, float*) -->
    <function-decl name='__interceptor_modff' mangled-name='__interceptor_modff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_modff'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1377' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='iptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1377' column='1'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-decl>
    <!-- long double __interceptor_modfl(long double, long double*) -->
    <function-decl name='__interceptor_modfl' mangled-name='__interceptor_modfl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1386' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_modfl'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1386' column='1'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='iptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1386' column='1'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_recvmsg(int, __sanitizer::__sanitizer_msghdr*, int) -->
    <function-decl name='__interceptor_recvmsg' mangled-name='__interceptor_recvmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_recvmsg'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_msghdr*' -->
      <parameter type-id='30239581' name='msg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1417' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- int __interceptor_getpeername(int, void*, unsigned int*) -->
    <function-decl name='__interceptor_getpeername' mangled-name='__interceptor_getpeername' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getpeername'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sockfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='addrlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1437' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sysinfo(void*) -->
    <function-decl name='__interceptor_sysinfo' mangled-name='__interceptor_sysinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1453' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sysinfo'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_dirent* __interceptor_readdir(void*) -->
    <function-decl name='__interceptor_readdir' mangled-name='__interceptor_readdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_readdir'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1467' column='1'/>
      <!-- __sanitizer::__sanitizer_dirent* -->
      <return type-id='a2bd35ce'/>
    </function-decl>
    <!-- int __interceptor_readdir_r(void*, __sanitizer::__sanitizer_dirent*, __sanitizer::__sanitizer_dirent**) -->
    <function-decl name='__interceptor_readdir_r' mangled-name='__interceptor_readdir_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_readdir_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent*' -->
      <parameter type-id='a2bd35ce' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent**' -->
      <parameter type-id='13dbd5ec' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1475' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_dirent64* __interceptor_readdir64(void*) -->
    <function-decl name='__interceptor_readdir64' mangled-name='__interceptor_readdir64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1496' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_readdir64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1496' column='1'/>
      <!-- __sanitizer::__sanitizer_dirent64* -->
      <return type-id='1f0707a8'/>
    </function-decl>
    <!-- int __interceptor_readdir64_r(void*, __sanitizer::__sanitizer_dirent64*, __sanitizer::__sanitizer_dirent64**) -->
    <function-decl name='__interceptor_readdir64_r' mangled-name='__interceptor_readdir64_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_readdir64_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64*' -->
      <parameter type-id='1f0707a8' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64**' -->
      <parameter type-id='5a10d1a6' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1504' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::uptr __interceptor_ptrace(int, int, void*, void*) -->
    <function-decl name='__interceptor_ptrace' mangled-name='__interceptor_ptrace' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1524' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ptrace'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-decl>
    <!-- char* __interceptor_setlocale(int, char*) -->
    <function-decl name='__interceptor_setlocale' mangled-name='__interceptor_setlocale' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1570' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_setlocale'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='category' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1570' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='locale' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1570' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_getcwd(char*, SIZE_T) -->
    <function-decl name='__interceptor_getcwd' mangled-name='__interceptor_getcwd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1586' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getcwd'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1586' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1586' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_get_current_dir_name(int) -->
    <function-decl name='__interceptor_get_current_dir_name' mangled-name='__interceptor_get_current_dir_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1599' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_get_current_dir_name'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1833' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- INTMAX_T __interceptor_strtoimax(const char*, char**, int) -->
    <function-decl name='__interceptor_strtoimax' mangled-name='__interceptor_strtoimax' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1614' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strtoimax'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='nptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='endptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='base' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- typedef INTMAX_T -->
      <return type-id='feaaa4a2'/>
    </function-decl>
    <!-- INTMAX_T __interceptor_strtoumax(const char*, char**, int) -->
    <function-decl name='__interceptor_strtoumax' mangled-name='__interceptor_strtoumax' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strtoumax'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='nptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='endptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='base' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1622' column='1'/>
      <!-- typedef INTMAX_T -->
      <return type-id='feaaa4a2'/>
    </function-decl>
    <!-- SIZE_T __interceptor_mbstowcs(wchar_t*, const char*, SIZE_T) -->
    <function-decl name='__interceptor_mbstowcs' mangled-name='__interceptor_mbstowcs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mbstowcs'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1638' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- SIZE_T __interceptor_mbsrtowcs(wchar_t*, const char**, SIZE_T, void*) -->
    <function-decl name='__interceptor_mbsrtowcs' mangled-name='__interceptor_mbsrtowcs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mbsrtowcs'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='7d3cd834' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1649' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- SIZE_T __interceptor_mbsnrtowcs(wchar_t*, const char**, SIZE_T, SIZE_T, void*) -->
    <function-decl name='__interceptor_mbsnrtowcs' mangled-name='__interceptor_mbsnrtowcs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mbsnrtowcs'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='7d3cd834' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='nms' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1673' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- SIZE_T __interceptor_wcstombs(char*, const wchar_t*, SIZE_T) -->
    <function-decl name='__interceptor_wcstombs' mangled-name='__interceptor_wcstombs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wcstombs'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='f077d3f8' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1696' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- SIZE_T __interceptor_wcsrtombs(char*, const wchar_t**, SIZE_T, void*) -->
    <function-decl name='__interceptor_wcsrtombs' mangled-name='__interceptor_wcsrtombs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wcsrtombs'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1'/>
      <!-- parameter of type 'const wchar_t**' -->
      <parameter type-id='5ea27396' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1707' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- SIZE_T __interceptor_wcsnrtombs(char*, const wchar_t**, SIZE_T, SIZE_T, void*) -->
    <function-decl name='__interceptor_wcsnrtombs' mangled-name='__interceptor_wcsnrtombs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wcsnrtombs'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- parameter of type 'const wchar_t**' -->
      <parameter type-id='5ea27396' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='nms' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1729' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- int __interceptor_tcgetattr(int, void*) -->
    <function-decl name='__interceptor_tcgetattr' mangled-name='__interceptor_tcgetattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1752' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_tcgetattr'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_realpath(const char*, char*) -->
    <function-decl name='__interceptor_realpath' mangled-name='__interceptor_realpath' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1767' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_realpath'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1767' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='resolved_path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1767' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_canonicalize_file_name(const char*) -->
    <function-decl name='__interceptor_canonicalize_file_name' mangled-name='__interceptor_canonicalize_file_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1791' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_canonicalize_file_name'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6039' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- SIZE_T __interceptor_confstr(int, char*, SIZE_T) -->
    <function-decl name='__interceptor_confstr' mangled-name='__interceptor_confstr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_confstr'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1806' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- int __interceptor_sched_getaffinity(int, SIZE_T, void*) -->
    <function-decl name='__interceptor_sched_getaffinity' mangled-name='__interceptor_sched_getaffinity' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sched_getaffinity'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='cpusetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='mask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1820' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_strerror(int) -->
    <function-decl name='__interceptor_strerror' mangled-name='__interceptor_strerror' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1833' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strerror'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1833' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strerror_r(int, char*, SIZE_T) -->
    <function-decl name='__interceptor_strerror_r' mangled-name='__interceptor_strerror_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strerror_r'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1846' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __interceptor___xpg_strerror_r(int, char*, SIZE_T) -->
    <function-decl name='__interceptor___xpg_strerror_r' mangled-name='__interceptor___xpg_strerror_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___xpg_strerror_r'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1874' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_scandir(char*, __sanitizer::__sanitizer_dirent***, scandir_filter_f, scandir_compar_f) -->
    <function-decl name='__interceptor_scandir' mangled-name='__interceptor_scandir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_scandir'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent***' -->
      <parameter type-id='091186b2' name='namelist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1'/>
      <!-- parameter of type 'typedef scandir_filter_f' -->
      <parameter type-id='9b85ec4e' name='filter' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1'/>
      <!-- parameter of type 'typedef scandir_compar_f' -->
      <parameter type-id='d381b210' name='compar' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1913' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_scandir64(char*, __sanitizer::__sanitizer_dirent64***, scandir64_filter_f, scandir64_compar_f) -->
    <function-decl name='__interceptor_scandir64' mangled-name='__interceptor_scandir64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_scandir64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dirp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64***' -->
      <parameter type-id='5479df64' name='namelist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1'/>
      <!-- parameter of type 'typedef scandir64_filter_f' -->
      <parameter type-id='f5b34980' name='filter' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1'/>
      <!-- parameter of type 'typedef scandir64_compar_f' -->
      <parameter type-id='1af10236' name='compar' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1966' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_getgroups(int, __sanitizer::u32*) -->
    <function-decl name='__interceptor_getgroups' mangled-name='__interceptor_getgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1996' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getgroups'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1996' column='1'/>
      <!-- parameter of type '__sanitizer::u32*' -->
      <parameter type-id='778c6eda' name='lst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1996' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_poll(__sanitizer::__sanitizer_pollfd*, __sanitizer::__sanitizer_nfds_t, int) -->
    <function-decl name='__interceptor_poll' mangled-name='__interceptor_poll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_poll'>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='fds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::__sanitizer_nfds_t' -->
      <parameter type-id='246ed63d' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2024' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_ppoll(__sanitizer::__sanitizer_pollfd*, __sanitizer::__sanitizer_nfds_t, void*, __sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_ppoll' mangled-name='__interceptor_ppoll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ppoll'>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='fds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::__sanitizer_nfds_t' -->
      <parameter type-id='246ed63d' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout_ts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='sigmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2039' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_wordexp(char*, __sanitizer::__sanitizer_wordexp_t*, int) -->
    <function-decl name='__interceptor_wordexp' mangled-name='__interceptor_wordexp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_wordexp'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_wordexp_t*' -->
      <parameter type-id='47896ade' name='p' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2058' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigwait(__sanitizer::__sanitizer_sigset_t*, int*) -->
    <function-decl name='__interceptor_sigwait' mangled-name='__interceptor_sigwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2081' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigwait'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2081' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='sig' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2081' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigwaitinfo(__sanitizer::__sanitizer_sigset_t*, void*) -->
    <function-decl name='__interceptor_sigwaitinfo' mangled-name='__interceptor_sigwaitinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2095' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigwaitinfo'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2095' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='info' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2095' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigtimedwait(__sanitizer::__sanitizer_sigset_t*, void*, void*) -->
    <function-decl name='__interceptor_sigtimedwait' mangled-name='__interceptor_sigtimedwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigtimedwait'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='info' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2109' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigemptyset(__sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_sigemptyset' mangled-name='__interceptor_sigemptyset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2125' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigemptyset'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigfillset(__sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_sigfillset' mangled-name='__interceptor_sigfillset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2133' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigfillset'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigpending(__sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_sigpending' mangled-name='__interceptor_sigpending' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigpending'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2148' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigprocmask(int, __sanitizer::__sanitizer_sigset_t*, __sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_sigprocmask' mangled-name='__interceptor_sigprocmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigprocmask'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='oldset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2161' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_backtrace(void**, int) -->
    <function-decl name='__interceptor_backtrace' mangled-name='__interceptor_backtrace' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2177' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_backtrace'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='buffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2177' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2177' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char** __interceptor_backtrace_symbols(void**, int) -->
    <function-decl name='__interceptor_backtrace_symbols' mangled-name='__interceptor_backtrace_symbols' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2186' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_backtrace_symbols'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='buffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2186' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2186' column='1'/>
      <!-- char** -->
      <return type-id='9b23c9ad'/>
    </function-decl>
    <!-- void __interceptor__exit(int) -->
    <function-decl name='__interceptor__exit' mangled-name='__interceptor__exit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2207' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor__exit'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_lock(void*) -->
    <function-decl name='__interceptor_pthread_mutex_lock' mangled-name='__interceptor_pthread_mutex_lock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2220' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_lock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_unlock(void*) -->
    <function-decl name='__interceptor_pthread_mutex_unlock' mangled-name='__interceptor_pthread_mutex_unlock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2231' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_unlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_wait(void*, void*) -->
    <function-decl name='__interceptor_pthread_cond_wait' mangled-name='__interceptor_pthread_cond_wait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2247' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_wait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_init(void*, void*) -->
    <function-decl name='__interceptor_pthread_cond_init' mangled-name='__interceptor_pthread_cond_init' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2257' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_signal(void*) -->
    <function-decl name='__interceptor_pthread_cond_signal' mangled-name='__interceptor_pthread_cond_signal' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_signal'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_broadcast(void*) -->
    <function-decl name='__interceptor_pthread_cond_broadcast' mangled-name='__interceptor_pthread_cond_broadcast' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2271' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_broadcast'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_mntent* __interceptor_getmntent(void*) -->
    <function-decl name='__interceptor_getmntent' mangled-name='__interceptor_getmntent' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2312' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getmntent'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='fp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2312' column='1'/>
      <!-- __sanitizer::__sanitizer_mntent* -->
      <return type-id='fd509f4c'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_mntent* __interceptor_getmntent_r(void*, __sanitizer::__sanitizer_mntent*, char*, int) -->
    <function-decl name='__interceptor_getmntent_r' mangled-name='__interceptor_getmntent_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getmntent_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='fp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_mntent*' -->
      <parameter type-id='fd509f4c' name='mntbuf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='buflen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2325' column='1'/>
      <!-- __sanitizer::__sanitizer_mntent* -->
      <return type-id='fd509f4c'/>
    </function-decl>
    <!-- int __interceptor_statfs(char*, void*) -->
    <function-decl name='__interceptor_statfs' mangled-name='__interceptor_statfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2339' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_statfs'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstatfs(int, void*) -->
    <function-decl name='__interceptor_fstatfs' mangled-name='__interceptor_fstatfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstatfs'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_statfs64(char*, void*) -->
    <function-decl name='__interceptor_statfs64' mangled-name='__interceptor_statfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2362' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_statfs64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstatfs64(int, void*) -->
    <function-decl name='__interceptor_fstatfs64' mangled-name='__interceptor_fstatfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2370' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstatfs64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_statvfs(char*, void*) -->
    <function-decl name='__interceptor_statvfs' mangled-name='__interceptor_statvfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2385' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_statvfs'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstatvfs(int, void*) -->
    <function-decl name='__interceptor_fstatvfs' mangled-name='__interceptor_fstatvfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2393' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstatvfs'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_statvfs64(char*, void*) -->
    <function-decl name='__interceptor_statvfs64' mangled-name='__interceptor_statvfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_statvfs64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2408' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstatvfs64(int, void*) -->
    <function-decl name='__interceptor_fstatvfs64' mangled-name='__interceptor_fstatvfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstatvfs64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_initgroups(char*, __sanitizer::u32) -->
    <function-decl name='__interceptor_initgroups' mangled-name='__interceptor_initgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_initgroups'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='user' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2431' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='group' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2431' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_ether_ntoa(__sanitizer::__sanitizer_ether_addr*) -->
    <function-decl name='__interceptor_ether_ntoa' mangled-name='__interceptor_ether_ntoa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2444' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_ntoa'>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2444' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_ether_addr* __interceptor_ether_aton(char*) -->
    <function-decl name='__interceptor_ether_aton' mangled-name='__interceptor_ether_aton' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2452' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_aton'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2452' column='1'/>
      <!-- __sanitizer::__sanitizer_ether_addr* -->
      <return type-id='23990d3c'/>
    </function-decl>
    <!-- int __interceptor_ether_ntohost(char*, __sanitizer::__sanitizer_ether_addr*) -->
    <function-decl name='__interceptor_ether_ntohost' mangled-name='__interceptor_ether_ntohost' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2460' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_ntohost'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='hostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_ether_hostton(char*, __sanitizer::__sanitizer_ether_addr*) -->
    <function-decl name='__interceptor_ether_hostton' mangled-name='__interceptor_ether_hostton' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_hostton'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='hostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2469' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_ether_line(char*, __sanitizer::__sanitizer_ether_addr*, char*) -->
    <function-decl name='__interceptor_ether_line' mangled-name='__interceptor_ether_line' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_line'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='line' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='hostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2478' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_ether_ntoa_r(__sanitizer::__sanitizer_ether_addr*, char*) -->
    <function-decl name='__interceptor_ether_ntoa_r' mangled-name='__interceptor_ether_ntoa_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2502' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_ntoa_r'>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2502' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2502' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_ether_addr* __interceptor_ether_aton_r(char*, __sanitizer::__sanitizer_ether_addr*) -->
    <function-decl name='__interceptor_ether_aton_r' mangled-name='__interceptor_ether_aton_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2510' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_ether_aton_r'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2510' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2510' column='1'/>
      <!-- __sanitizer::__sanitizer_ether_addr* -->
      <return type-id='23990d3c'/>
    </function-decl>
    <!-- int __interceptor_shmctl(int, int, void*) -->
    <function-decl name='__interceptor_shmctl' mangled-name='__interceptor_shmctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_shmctl'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='shmid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_random_r(void*, __sanitizer::u32*) -->
    <function-decl name='__interceptor_random_r' mangled-name='__interceptor_random_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2549' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_random_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2549' column='1'/>
      <!-- parameter of type '__sanitizer::u32*' -->
      <parameter type-id='778c6eda' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2549' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getdetachstate(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getdetachstate' mangled-name='__interceptor_pthread_attr_getdetachstate' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2575' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getdetachstate'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getguardsize(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getguardsize' mangled-name='__interceptor_pthread_attr_getguardsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2576' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getguardsize'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getschedparam(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getschedparam' mangled-name='__interceptor_pthread_attr_getschedparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2577' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getschedparam'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getschedpolicy(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getschedpolicy' mangled-name='__interceptor_pthread_attr_getschedpolicy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2578' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getschedpolicy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getscope(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getscope' mangled-name='__interceptor_pthread_attr_getscope' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2579' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getscope'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getstacksize(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getstacksize' mangled-name='__interceptor_pthread_attr_getstacksize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2580' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getstacksize'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getstack(void*, void**, SIZE_T*) -->
    <function-decl name='__interceptor_pthread_attr_getstack' mangled-name='__interceptor_pthread_attr_getstack' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getstack'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2581' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getinheritsched(void*, void*) -->
    <function-decl name='__interceptor_pthread_attr_getinheritsched' mangled-name='__interceptor_pthread_attr_getinheritsched' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2612' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getinheritsched'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_attr_getaffinity_np(void*, SIZE_T, void*) -->
    <function-decl name='__interceptor_pthread_attr_getaffinity_np' mangled-name='__interceptor_pthread_attr_getaffinity_np' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_attr_getaffinity_np'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='cpusetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='cpuset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2621' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- char* __interceptor_tmpnam(char*) -->
    <function-decl name='__interceptor_tmpnam' mangled-name='__interceptor_tmpnam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2639' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_tmpnam'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2657' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_tmpnam_r(char*) -->
    <function-decl name='__interceptor_tmpnam_r' mangled-name='__interceptor_tmpnam_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2657' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_tmpnam_r'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2657' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_tempnam(char*, char*) -->
    <function-decl name='__interceptor_tempnam' mangled-name='__interceptor_tempnam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2670' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_tempnam'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2670' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='pfx' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2670' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- int __interceptor_pthread_setname_np(__sanitizer::uptr, const char*) -->
    <function-decl name='__interceptor_pthread_setname_np' mangled-name='__interceptor_pthread_setname_np' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2685' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_setname_np'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='thread' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2685' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2685' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __interceptor_sincos(double, double*, double*) -->
    <function-decl name='__interceptor_sincos' mangled-name='__interceptor_sincos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sincos'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='sin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='cos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2697' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __interceptor_sincosf(float, float*, float*) -->
    <function-decl name='__interceptor_sincosf' mangled-name='__interceptor_sincosf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sincosf'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='sin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='cos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2704' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __interceptor_sincosl(long double, long double*, long double*) -->
    <function-decl name='__interceptor_sincosl' mangled-name='__interceptor_sincosl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sincosl'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='sin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='cos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2711' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- double __interceptor_remquo(double, double, int*) -->
    <function-decl name='__interceptor_remquo' mangled-name='__interceptor_remquo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_remquo'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='y' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2727' column='1'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- float __interceptor_remquof(float, float, int*) -->
    <function-decl name='__interceptor_remquof' mangled-name='__interceptor_remquof' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_remquof'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='y' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2734' column='1'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-decl>
    <!-- long double __interceptor_remquol(long double, long double, int*) -->
    <function-decl name='__interceptor_remquol' mangled-name='__interceptor_remquol' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_remquol'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='y' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2741' column='1'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-decl>
    <!-- double __interceptor_lgamma(double) -->
    <function-decl name='__interceptor_lgamma' mangled-name='__interceptor_lgamma' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2758' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgamma'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2758' column='1'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- float __interceptor_lgammaf(float) -->
    <function-decl name='__interceptor_lgammaf' mangled-name='__interceptor_lgammaf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2765' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgammaf'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2765' column='1'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-decl>
    <!-- long double __interceptor_lgammal(long double) -->
    <function-decl name='__interceptor_lgammal' mangled-name='__interceptor_lgammal' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2772' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgammal'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2772' column='1'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-decl>
    <!-- double __interceptor_lgamma_r(double, int*) -->
    <function-decl name='__interceptor_lgamma_r' mangled-name='__interceptor_lgamma_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgamma_r'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2788' column='1'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- float __interceptor_lgammaf_r(float, int*) -->
    <function-decl name='__interceptor_lgammaf_r' mangled-name='__interceptor_lgammaf_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgammaf_r'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2795' column='1'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-decl>
    <!-- long double __interceptor_lgammal_r(long double, int*) -->
    <function-decl name='__interceptor_lgammal_r' mangled-name='__interceptor_lgammal_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lgammal_r'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2802' column='1'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-decl>
    <!-- int __interceptor_drand48_r(void*, double*) -->
    <function-decl name='__interceptor_drand48_r' mangled-name='__interceptor_drand48_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2818' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_drand48_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2818' column='1'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2818' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_lrand48_r(void*, long int*) -->
    <function-decl name='__interceptor_lrand48_r' mangled-name='__interceptor_lrand48_r' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2825' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lrand48_r'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2825' column='1'/>
      <!-- parameter of type 'long int*' -->
      <parameter type-id='3ccc2590' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2825' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_getline(char**, SIZE_T*, void*) -->
    <function-decl name='__interceptor_getline' mangled-name='__interceptor_getline' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getline'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='lineptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='n' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2840' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SSIZE_T __interceptor_getdelim(char**, SIZE_T*, int, void*) -->
    <function-decl name='__interceptor_getdelim' mangled-name='__interceptor_getdelim' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getdelim'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='lineptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='n' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='delim' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2851' column='1'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-decl>
    <!-- SIZE_T __interceptor_iconv(void*, char**, SIZE_T*, char**, SIZE_T*) -->
    <function-decl name='__interceptor_iconv' mangled-name='__interceptor_iconv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_iconv'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='cd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='inbuf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='inbytesleft' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='outbuf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='outbytesleft' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2871' column='1'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-decl>
    <!-- __sanitizer::__sanitizer_clock_t __interceptor_times(void*) -->
    <function-decl name='__interceptor_times' mangled-name='__interceptor_times' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2896' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_times'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tms' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2896' column='1'/>
      <!-- typedef __sanitizer::__sanitizer_clock_t -->
      <return type-id='5c8c9d58'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_recvmsg(long int, sanitizer_kernel_msghdr*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_recvmsg' mangled-name='__sanitizer_syscall_pre_impl_recvmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='153' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_recvmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sockfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='153' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_msghdr*' -->
      <parameter type-id='1c343372' name='msg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='153' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='153' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_recvmsg(long int, long int, sanitizer_kernel_msghdr*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_recvmsg' mangled-name='__sanitizer_syscall_post_impl_recvmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='157' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_recvmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='157' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sockfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='157' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_msghdr*' -->
      <parameter type-id='1c343372' name='msg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='157' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='158' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_recvmmsg(long int, sanitizer_kernel_mmsghdr*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_recvmmsg' mangled-name='__sanitizer_syscall_pre_impl_recvmmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='169' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_recvmmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='169' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_mmsghdr*' -->
      <parameter type-id='33f66375' name='msg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='169' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='169' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='170' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='170' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_recvmmsg(long int, long int, sanitizer_kernel_mmsghdr*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_recvmmsg' mangled-name='__sanitizer_syscall_post_impl_recvmmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='174' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_recvmmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='174' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_mmsghdr*' -->
      <parameter type-id='33f66375' name='msg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='175' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='175' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='175' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_read(long int, void*, __sanitizer::uptr) -->
    <function-decl name='__sanitizer_syscall_pre_impl_read' mangled-name='__sanitizer_syscall_pre_impl_read' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='189' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_read'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='189' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='189' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='189' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_read(long int, long int, void*, __sanitizer::uptr) -->
    <function-decl name='__sanitizer_syscall_post_impl_read' mangled-name='__sanitizer_syscall_post_impl_read' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='195' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_read'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='195' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='195' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='195' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='195' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_time(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_time' mangled-name='__sanitizer_syscall_pre_impl_time' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_time'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_time(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_time' mangled-name='__sanitizer_syscall_post_impl_time' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_time'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_stime(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_stime' mangled-name='__sanitizer_syscall_pre_impl_stime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='209' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_stime'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_stime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_stime' mangled-name='__sanitizer_syscall_post_impl_stime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='211' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_stime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_gettimeofday(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_gettimeofday' mangled-name='__sanitizer_syscall_pre_impl_gettimeofday' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_gettimeofday'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_gettimeofday(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_gettimeofday' mangled-name='__sanitizer_syscall_post_impl_gettimeofday' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_gettimeofday'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_settimeofday(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_settimeofday' mangled-name='__sanitizer_syscall_pre_impl_settimeofday' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='226' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_settimeofday'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_settimeofday(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_settimeofday' mangled-name='__sanitizer_syscall_post_impl_settimeofday' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='228' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_settimeofday'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_adjtimex(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_adjtimex' mangled-name='__sanitizer_syscall_pre_impl_adjtimex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='235' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_adjtimex'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_adjtimex(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_adjtimex' mangled-name='__sanitizer_syscall_post_impl_adjtimex' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='237' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_adjtimex'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_times(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_times' mangled-name='__sanitizer_syscall_pre_impl_times' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='243' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_times'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_times(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_times' mangled-name='__sanitizer_syscall_post_impl_times' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='245' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_times'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_gettid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_gettid' mangled-name='__sanitizer_syscall_pre_impl_gettid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='251' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_gettid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_gettid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_gettid' mangled-name='__sanitizer_syscall_post_impl_gettid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_gettid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_nanosleep(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_nanosleep' mangled-name='__sanitizer_syscall_pre_impl_nanosleep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='255' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_nanosleep'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_nanosleep(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_nanosleep' mangled-name='__sanitizer_syscall_post_impl_nanosleep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='257' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_nanosleep'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_alarm(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_alarm' mangled-name='__sanitizer_syscall_pre_impl_alarm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_alarm'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_alarm(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_alarm' mangled-name='__sanitizer_syscall_post_impl_alarm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_alarm'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getpid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getpid' mangled-name='__sanitizer_syscall_pre_impl_getpid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='268' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getpid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getpid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getpid' mangled-name='__sanitizer_syscall_post_impl_getpid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='270' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getpid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getppid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getppid' mangled-name='__sanitizer_syscall_pre_impl_getppid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='272' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getppid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getppid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getppid' mangled-name='__sanitizer_syscall_post_impl_getppid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='274' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getppid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getuid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getuid' mangled-name='__sanitizer_syscall_pre_impl_getuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='276' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getuid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getuid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getuid' mangled-name='__sanitizer_syscall_post_impl_getuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='278' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_geteuid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_geteuid' mangled-name='__sanitizer_syscall_pre_impl_geteuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_geteuid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_geteuid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_geteuid' mangled-name='__sanitizer_syscall_post_impl_geteuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='282' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_geteuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getgid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getgid' mangled-name='__sanitizer_syscall_pre_impl_getgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getgid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getgid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getgid' mangled-name='__sanitizer_syscall_post_impl_getgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='286' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getegid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getegid' mangled-name='__sanitizer_syscall_pre_impl_getegid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getegid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getegid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getegid' mangled-name='__sanitizer_syscall_post_impl_getegid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='290' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getegid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getresuid(void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getresuid' mangled-name='__sanitizer_syscall_pre_impl_getresuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getresuid'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getresuid(long int, void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getresuid' mangled-name='__sanitizer_syscall_post_impl_getresuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getresuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getresgid(void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getresgid' mangled-name='__sanitizer_syscall_pre_impl_getresgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='302' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getresgid'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getresgid(long int, void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getresgid' mangled-name='__sanitizer_syscall_post_impl_getresgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='304' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getresgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getpgid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getpgid' mangled-name='__sanitizer_syscall_pre_impl_getpgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='312' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getpgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getpgid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getpgid' mangled-name='__sanitizer_syscall_post_impl_getpgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='314' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getpgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getpgrp() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getpgrp' mangled-name='__sanitizer_syscall_pre_impl_getpgrp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='316' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getpgrp'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getpgrp(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getpgrp' mangled-name='__sanitizer_syscall_post_impl_getpgrp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='318' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getpgrp'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getsid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getsid' mangled-name='__sanitizer_syscall_pre_impl_getsid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='320' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getsid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getsid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getsid' mangled-name='__sanitizer_syscall_post_impl_getsid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='322' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getsid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getgroups(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getgroups' mangled-name='__sanitizer_syscall_pre_impl_getgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='324' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getgroups'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getgroups(long int, long int, __sanitizer::__sanitizer___kernel_gid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getgroups' mangled-name='__sanitizer_syscall_post_impl_getgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='326' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getgroups'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='326' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='326' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_gid_t*' -->
      <parameter type-id='19723dcf' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='327' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setregid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setregid' mangled-name='__sanitizer_syscall_pre_impl_setregid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setregid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setregid(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setregid' mangled-name='__sanitizer_syscall_post_impl_setregid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setregid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setgid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setgid' mangled-name='__sanitizer_syscall_pre_impl_setgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='337' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setgid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setgid' mangled-name='__sanitizer_syscall_post_impl_setgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='339' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setreuid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setreuid' mangled-name='__sanitizer_syscall_pre_impl_setreuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='341' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setreuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setreuid(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setreuid' mangled-name='__sanitizer_syscall_post_impl_setreuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='343' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setreuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setuid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setuid' mangled-name='__sanitizer_syscall_pre_impl_setuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='345' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setuid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setuid' mangled-name='__sanitizer_syscall_post_impl_setuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setresuid(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setresuid' mangled-name='__sanitizer_syscall_pre_impl_setresuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='349' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setresuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setresuid(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setresuid' mangled-name='__sanitizer_syscall_post_impl_setresuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setresuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setresgid(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setresgid' mangled-name='__sanitizer_syscall_pre_impl_setresgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='353' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setresgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setresgid(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setresgid' mangled-name='__sanitizer_syscall_post_impl_setresgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='355' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setresgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setfsuid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setfsuid' mangled-name='__sanitizer_syscall_pre_impl_setfsuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='357' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setfsuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setfsuid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setfsuid' mangled-name='__sanitizer_syscall_post_impl_setfsuid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='359' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setfsuid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setfsgid(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setfsgid' mangled-name='__sanitizer_syscall_pre_impl_setfsgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='361' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setfsgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setfsgid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setfsgid' mangled-name='__sanitizer_syscall_post_impl_setfsgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='363' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setfsgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setpgid(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setpgid' mangled-name='__sanitizer_syscall_pre_impl_setpgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='365' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setpgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setpgid(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setpgid' mangled-name='__sanitizer_syscall_post_impl_setpgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='367' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setpgid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setsid() -->
    <function-decl name='__sanitizer_syscall_pre_impl_setsid' mangled-name='__sanitizer_syscall_pre_impl_setsid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='369' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setsid'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setsid(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setsid' mangled-name='__sanitizer_syscall_post_impl_setsid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='371' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setsid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setgroups(long int, __sanitizer::__sanitizer___kernel_gid_t*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setgroups' mangled-name='__sanitizer_syscall_pre_impl_setgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='373' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setgroups'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='373' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_gid_t*' -->
      <parameter type-id='19723dcf' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='373' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setgroups(long int, long int, __sanitizer::__sanitizer___kernel_gid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_setgroups' mangled-name='__sanitizer_syscall_post_impl_setgroups' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='377' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setgroups'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='326' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='326' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_gid_t*' -->
      <parameter type-id='19723dcf' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='327' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_acct(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_acct' mangled-name='__sanitizer_syscall_pre_impl_acct' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='380' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_acct'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_acct(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_acct' mangled-name='__sanitizer_syscall_post_impl_acct' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='385' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_acct'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_capget(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_capget' mangled-name='__sanitizer_syscall_pre_impl_capget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='387' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_capget'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_capget(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_capget' mangled-name='__sanitizer_syscall_post_impl_capget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='389' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_capget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_capset(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_capset' mangled-name='__sanitizer_syscall_pre_impl_capset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='396' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_capset'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_capset(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_capset' mangled-name='__sanitizer_syscall_post_impl_capset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='400' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_capset'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_personality(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_personality' mangled-name='__sanitizer_syscall_pre_impl_personality' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='406' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_personality'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_personality(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_personality' mangled-name='__sanitizer_syscall_post_impl_personality' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='408' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_personality'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sigpending(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sigpending' mangled-name='__sanitizer_syscall_pre_impl_sigpending' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='410' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sigpending'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sigpending(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sigpending' mangled-name='__sanitizer_syscall_post_impl_sigpending' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='412' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sigpending'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sigprocmask(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sigprocmask' mangled-name='__sanitizer_syscall_pre_impl_sigprocmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='418' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sigprocmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sigprocmask(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sigprocmask' mangled-name='__sanitizer_syscall_post_impl_sigprocmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sigprocmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getitimer(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getitimer' mangled-name='__sanitizer_syscall_pre_impl_getitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='427' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getitimer'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getitimer(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getitimer' mangled-name='__sanitizer_syscall_post_impl_getitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getitimer'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setitimer(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setitimer' mangled-name='__sanitizer_syscall_pre_impl_setitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='435' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setitimer'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setitimer(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_setitimer' mangled-name='__sanitizer_syscall_post_impl_setitimer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setitimer'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timer_create(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timer_create' mangled-name='__sanitizer_syscall_pre_impl_timer_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='444' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timer_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timer_create(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_timer_create' mangled-name='__sanitizer_syscall_post_impl_timer_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timer_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timer_gettime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timer_gettime' mangled-name='__sanitizer_syscall_pre_impl_timer_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='455' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timer_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timer_gettime(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_timer_gettime' mangled-name='__sanitizer_syscall_post_impl_timer_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='457' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timer_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timer_getoverrun(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timer_getoverrun' mangled-name='__sanitizer_syscall_pre_impl_timer_getoverrun' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='463' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timer_getoverrun'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timer_getoverrun(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_timer_getoverrun' mangled-name='__sanitizer_syscall_post_impl_timer_getoverrun' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='465' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timer_getoverrun'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timer_settime(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timer_settime' mangled-name='__sanitizer_syscall_pre_impl_timer_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timer_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timer_settime(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_timer_settime' mangled-name='__sanitizer_syscall_post_impl_timer_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timer_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timer_delete(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timer_delete' mangled-name='__sanitizer_syscall_pre_impl_timer_delete' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='479' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timer_delete'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timer_delete(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_timer_delete' mangled-name='__sanitizer_syscall_post_impl_timer_delete' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='481' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timer_delete'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_clock_settime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_clock_settime' mangled-name='__sanitizer_syscall_pre_impl_clock_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='483' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_clock_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_clock_settime(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_clock_settime' mangled-name='__sanitizer_syscall_post_impl_clock_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='487' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_clock_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_clock_gettime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_clock_gettime' mangled-name='__sanitizer_syscall_pre_impl_clock_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='489' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_clock_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_clock_gettime(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_clock_gettime' mangled-name='__sanitizer_syscall_post_impl_clock_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='491' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_clock_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_clock_adjtime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_clock_adjtime' mangled-name='__sanitizer_syscall_pre_impl_clock_adjtime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='497' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_clock_adjtime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_clock_adjtime(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_clock_adjtime' mangled-name='__sanitizer_syscall_post_impl_clock_adjtime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='499' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_clock_adjtime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_clock_getres(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_clock_getres' mangled-name='__sanitizer_syscall_pre_impl_clock_getres' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='505' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_clock_getres'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_clock_getres(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_clock_getres' mangled-name='__sanitizer_syscall_post_impl_clock_getres' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='507' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_clock_getres'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_clock_nanosleep(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_clock_nanosleep' mangled-name='__sanitizer_syscall_pre_impl_clock_nanosleep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='513' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_clock_nanosleep'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_clock_nanosleep(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_clock_nanosleep' mangled-name='__sanitizer_syscall_post_impl_clock_nanosleep' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='518' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_clock_nanosleep'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_nice(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_nice' mangled-name='__sanitizer_syscall_pre_impl_nice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='525' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_nice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_nice(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_nice' mangled-name='__sanitizer_syscall_post_impl_nice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='527' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_nice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_setscheduler(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_setscheduler' mangled-name='__sanitizer_syscall_pre_impl_sched_setscheduler' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='529' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_setscheduler'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_setscheduler(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_setscheduler' mangled-name='__sanitizer_syscall_post_impl_sched_setscheduler' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_setscheduler'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_setparam(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_setparam' mangled-name='__sanitizer_syscall_pre_impl_sched_setparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='537' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_setparam'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_setparam(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_setparam' mangled-name='__sanitizer_syscall_post_impl_sched_setparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='541' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_setparam'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_getscheduler(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_getscheduler' mangled-name='__sanitizer_syscall_pre_impl_sched_getscheduler' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='543' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_getscheduler'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_getscheduler(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_getscheduler' mangled-name='__sanitizer_syscall_post_impl_sched_getscheduler' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='545' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_getscheduler'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_getparam(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_getparam' mangled-name='__sanitizer_syscall_pre_impl_sched_getparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='547' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_getparam'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_getparam(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_getparam' mangled-name='__sanitizer_syscall_post_impl_sched_getparam' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='549' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_getparam'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_setaffinity(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_setaffinity' mangled-name='__sanitizer_syscall_pre_impl_sched_setaffinity' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='555' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_setaffinity'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_setaffinity(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_setaffinity' mangled-name='__sanitizer_syscall_post_impl_sched_setaffinity' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='559' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_setaffinity'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_getaffinity(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_getaffinity' mangled-name='__sanitizer_syscall_pre_impl_sched_getaffinity' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='562' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_getaffinity'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_getaffinity(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_getaffinity' mangled-name='__sanitizer_syscall_post_impl_sched_getaffinity' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='564' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_getaffinity'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_yield() -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_yield' mangled-name='__sanitizer_syscall_pre_impl_sched_yield' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='571' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_yield'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_yield(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_yield' mangled-name='__sanitizer_syscall_post_impl_sched_yield' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='573' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_yield'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_get_priority_max(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_get_priority_max' mangled-name='__sanitizer_syscall_pre_impl_sched_get_priority_max' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='575' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_get_priority_max'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_get_priority_max(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_get_priority_max' mangled-name='__sanitizer_syscall_post_impl_sched_get_priority_max' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='577' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_get_priority_max'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_get_priority_min(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_get_priority_min' mangled-name='__sanitizer_syscall_pre_impl_sched_get_priority_min' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='579' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_get_priority_min'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_get_priority_min(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_get_priority_min' mangled-name='__sanitizer_syscall_post_impl_sched_get_priority_min' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='581' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_get_priority_min'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sched_rr_get_interval(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sched_rr_get_interval' mangled-name='__sanitizer_syscall_pre_impl_sched_rr_get_interval' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='583' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sched_rr_get_interval'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sched_rr_get_interval(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sched_rr_get_interval' mangled-name='__sanitizer_syscall_post_impl_sched_rr_get_interval' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='585' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sched_rr_get_interval'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setpriority(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setpriority' mangled-name='__sanitizer_syscall_pre_impl_setpriority' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='591' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setpriority'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setpriority(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setpriority' mangled-name='__sanitizer_syscall_post_impl_setpriority' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='593' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setpriority'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getpriority(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getpriority' mangled-name='__sanitizer_syscall_pre_impl_getpriority' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='595' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getpriority'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getpriority(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getpriority' mangled-name='__sanitizer_syscall_post_impl_getpriority' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='597' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getpriority'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_shutdown(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_shutdown' mangled-name='__sanitizer_syscall_pre_impl_shutdown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='599' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_shutdown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_shutdown(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_shutdown' mangled-name='__sanitizer_syscall_post_impl_shutdown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='601' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_shutdown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_reboot(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_reboot' mangled-name='__sanitizer_syscall_pre_impl_reboot' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='603' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_reboot'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_reboot(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_reboot' mangled-name='__sanitizer_syscall_post_impl_reboot' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_reboot'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_restart_syscall() -->
    <function-decl name='__sanitizer_syscall_pre_impl_restart_syscall' mangled-name='__sanitizer_syscall_pre_impl_restart_syscall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='607' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_restart_syscall'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_restart_syscall(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_restart_syscall' mangled-name='__sanitizer_syscall_post_impl_restart_syscall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='609' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_restart_syscall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_kexec_load(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_kexec_load' mangled-name='__sanitizer_syscall_pre_impl_kexec_load' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_kexec_load'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_kexec_load(long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_kexec_load' mangled-name='__sanitizer_syscall_post_impl_kexec_load' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_kexec_load'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='615' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_exit(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_exit' mangled-name='__sanitizer_syscall_pre_impl_exit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='621' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_exit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_exit(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_exit' mangled-name='__sanitizer_syscall_post_impl_exit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='623' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_exit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_exit_group(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_exit_group' mangled-name='__sanitizer_syscall_pre_impl_exit_group' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='625' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_exit_group'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_exit_group(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_exit_group' mangled-name='__sanitizer_syscall_post_impl_exit_group' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='627' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_exit_group'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_wait4(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_wait4' mangled-name='__sanitizer_syscall_pre_impl_wait4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_wait4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_wait4(long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_wait4' mangled-name='__sanitizer_syscall_post_impl_wait4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_wait4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='632' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_waitid(long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_waitid' mangled-name='__sanitizer_syscall_pre_impl_waitid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='639' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_waitid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='632' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_waitid(long int, long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_waitid' mangled-name='__sanitizer_syscall_post_impl_waitid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_waitid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='infop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='642' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='643' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_waitpid(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_waitpid' mangled-name='__sanitizer_syscall_pre_impl_waitpid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_waitpid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_waitpid(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_waitpid' mangled-name='__sanitizer_syscall_post_impl_waitpid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='652' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_waitpid'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_set_tid_address(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_set_tid_address' mangled-name='__sanitizer_syscall_pre_impl_set_tid_address' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='658' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_set_tid_address'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_set_tid_address(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_set_tid_address' mangled-name='__sanitizer_syscall_post_impl_set_tid_address' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='660' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_set_tid_address'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_init_module(void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_init_module' mangled-name='__sanitizer_syscall_pre_impl_init_module' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_init_module'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='umod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uargs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_init_module(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_init_module' mangled-name='__sanitizer_syscall_post_impl_init_module' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='671' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_init_module'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_delete_module(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_delete_module' mangled-name='__sanitizer_syscall_pre_impl_delete_module' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='673' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_delete_module'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_delete_module(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_delete_module' mangled-name='__sanitizer_syscall_post_impl_delete_module' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='679' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_delete_module'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rt_sigprocmask(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rt_sigprocmask' mangled-name='__sanitizer_syscall_pre_impl_rt_sigprocmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rt_sigprocmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rt_sigprocmask(long int, long int, kernel_sigset_t*, kernel_sigset_t*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_rt_sigprocmask' mangled-name='__sanitizer_syscall_post_impl_rt_sigprocmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='683' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rt_sigprocmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='683' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='683' column='1'/>
      <!-- parameter of type 'kernel_sigset_t*' -->
      <parameter type-id='c0d5d369' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='683' column='1'/>
      <!-- parameter of type 'kernel_sigset_t*' -->
      <parameter type-id='c0d5d369' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='684' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='684' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rt_sigpending(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rt_sigpending' mangled-name='__sanitizer_syscall_pre_impl_rt_sigpending' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rt_sigpending'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rt_sigpending(long int, kernel_sigset_t*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_rt_sigpending' mangled-name='__sanitizer_syscall_post_impl_rt_sigpending' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='693' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rt_sigpending'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='693' column='1'/>
      <!-- parameter of type 'kernel_sigset_t*' -->
      <parameter type-id='c0d5d369' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='693' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='693' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rt_sigtimedwait(const kernel_sigset_t*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rt_sigtimedwait' mangled-name='__sanitizer_syscall_pre_impl_rt_sigtimedwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='699' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rt_sigtimedwait'>
      <!-- parameter of type 'const kernel_sigset_t*' -->
      <parameter type-id='b81b7280' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='699' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='699' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='700' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='700' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rt_sigtimedwait(long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_rt_sigtimedwait' mangled-name='__sanitizer_syscall_post_impl_rt_sigtimedwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rt_sigtimedwait'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rt_tgsigqueueinfo(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rt_tgsigqueueinfo' mangled-name='__sanitizer_syscall_pre_impl_rt_tgsigqueueinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='712' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rt_tgsigqueueinfo'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rt_tgsigqueueinfo(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_rt_tgsigqueueinfo' mangled-name='__sanitizer_syscall_post_impl_rt_tgsigqueueinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='714' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rt_tgsigqueueinfo'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_kill(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_kill' mangled-name='__sanitizer_syscall_pre_impl_kill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='721' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_kill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_kill(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_kill' mangled-name='__sanitizer_syscall_post_impl_kill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='723' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_kill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_tgkill(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_tgkill' mangled-name='__sanitizer_syscall_pre_impl_tgkill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='725' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_tgkill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_tgkill(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_tgkill' mangled-name='__sanitizer_syscall_post_impl_tgkill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='727' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_tgkill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_tkill(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_tkill' mangled-name='__sanitizer_syscall_pre_impl_tkill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='729' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_tkill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_tkill(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_tkill' mangled-name='__sanitizer_syscall_post_impl_tkill' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='731' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_tkill'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rt_sigqueueinfo(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rt_sigqueueinfo' mangled-name='__sanitizer_syscall_pre_impl_rt_sigqueueinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='733' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rt_sigqueueinfo'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rt_sigqueueinfo(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_rt_sigqueueinfo' mangled-name='__sanitizer_syscall_post_impl_rt_sigqueueinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='735' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rt_sigqueueinfo'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sgetmask() -->
    <function-decl name='__sanitizer_syscall_pre_impl_sgetmask' mangled-name='__sanitizer_syscall_pre_impl_sgetmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sgetmask'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sgetmask(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sgetmask' mangled-name='__sanitizer_syscall_post_impl_sgetmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='743' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sgetmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ssetmask(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ssetmask' mangled-name='__sanitizer_syscall_pre_impl_ssetmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='745' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ssetmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ssetmask(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ssetmask' mangled-name='__sanitizer_syscall_post_impl_ssetmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='747' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ssetmask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_signal(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_signal' mangled-name='__sanitizer_syscall_pre_impl_signal' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='749' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_signal'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_signal(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_signal' mangled-name='__sanitizer_syscall_post_impl_signal' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='751' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_signal'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pause() -->
    <function-decl name='__sanitizer_syscall_pre_impl_pause' mangled-name='__sanitizer_syscall_pre_impl_pause' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='753' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pause'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pause(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pause' mangled-name='__sanitizer_syscall_post_impl_pause' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='755' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pause'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sync() -->
    <function-decl name='__sanitizer_syscall_pre_impl_sync' mangled-name='__sanitizer_syscall_pre_impl_sync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='757' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sync'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sync(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sync' mangled-name='__sanitizer_syscall_post_impl_sync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='759' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fsync(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fsync' mangled-name='__sanitizer_syscall_pre_impl_fsync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='761' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fsync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fsync(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fsync' mangled-name='__sanitizer_syscall_post_impl_fsync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='763' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fsync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fdatasync(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fdatasync' mangled-name='__sanitizer_syscall_pre_impl_fdatasync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='765' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fdatasync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fdatasync(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fdatasync' mangled-name='__sanitizer_syscall_post_impl_fdatasync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='767' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fdatasync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_bdflush(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_bdflush' mangled-name='__sanitizer_syscall_pre_impl_bdflush' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='769' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_bdflush'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_bdflush(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_bdflush' mangled-name='__sanitizer_syscall_post_impl_bdflush' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='771' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_bdflush'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mount(void*, void*, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mount' mangled-name='__sanitizer_syscall_pre_impl_mount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='773' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mount'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dev_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='773' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dir_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='773' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='type' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='773' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='773' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='774' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mount(long int, void*, void*, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mount' mangled-name='__sanitizer_syscall_post_impl_mount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='776' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mount'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dev_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dir_name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='type' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='776' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='777' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='data' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='777' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_umount(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_umount' mangled-name='__sanitizer_syscall_pre_impl_umount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='790' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_umount'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_umount(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_umount' mangled-name='__sanitizer_syscall_post_impl_umount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='792' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_umount'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_oldumount(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_oldumount' mangled-name='__sanitizer_syscall_pre_impl_oldumount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='799' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_oldumount'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_oldumount(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_oldumount' mangled-name='__sanitizer_syscall_post_impl_oldumount' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='801' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_oldumount'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_truncate(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_truncate' mangled-name='__sanitizer_syscall_pre_impl_truncate' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='808' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_truncate'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_truncate(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_truncate' mangled-name='__sanitizer_syscall_post_impl_truncate' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='813' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_truncate'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ftruncate(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ftruncate' mangled-name='__sanitizer_syscall_pre_impl_ftruncate' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='815' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ftruncate'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ftruncate(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ftruncate' mangled-name='__sanitizer_syscall_post_impl_ftruncate' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='817' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ftruncate'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_stat(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_stat' mangled-name='__sanitizer_syscall_pre_impl_stat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='819' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_stat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_stat(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_stat' mangled-name='__sanitizer_syscall_post_impl_stat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='825' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_stat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_statfs(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_statfs' mangled-name='__sanitizer_syscall_pre_impl_statfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='831' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_statfs'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_statfs(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_statfs' mangled-name='__sanitizer_syscall_post_impl_statfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='836' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_statfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_statfs64(void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_statfs64' mangled-name='__sanitizer_syscall_pre_impl_statfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='842' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_statfs64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='umod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uargs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_statfs64(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_statfs64' mangled-name='__sanitizer_syscall_post_impl_statfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='847' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_statfs64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fstatfs(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fstatfs' mangled-name='__sanitizer_syscall_pre_impl_fstatfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='853' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fstatfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fstatfs(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_fstatfs' mangled-name='__sanitizer_syscall_post_impl_fstatfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='855' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fstatfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fstatfs64(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fstatfs64' mangled-name='__sanitizer_syscall_pre_impl_fstatfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='861' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fstatfs64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fstatfs64(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_fstatfs64' mangled-name='__sanitizer_syscall_post_impl_fstatfs64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='863' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fstatfs64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lstat(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lstat' mangled-name='__sanitizer_syscall_pre_impl_lstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='869' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lstat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lstat(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_lstat' mangled-name='__sanitizer_syscall_post_impl_lstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='875' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fstat(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fstat' mangled-name='__sanitizer_syscall_pre_impl_fstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='881' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fstat(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_fstat' mangled-name='__sanitizer_syscall_post_impl_fstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='883' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_newstat(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_newstat' mangled-name='__sanitizer_syscall_pre_impl_newstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='889' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_newstat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_newstat(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_newstat' mangled-name='__sanitizer_syscall_post_impl_newstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='895' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_newstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_newlstat(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_newlstat' mangled-name='__sanitizer_syscall_pre_impl_newlstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='901' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_newlstat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_newlstat(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_newlstat' mangled-name='__sanitizer_syscall_post_impl_newlstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='907' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_newlstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_newfstat(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_newfstat' mangled-name='__sanitizer_syscall_pre_impl_newfstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='913' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_newfstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_newfstat(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_newfstat' mangled-name='__sanitizer_syscall_post_impl_newfstat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='915' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_newfstat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ustat(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ustat' mangled-name='__sanitizer_syscall_pre_impl_ustat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='921' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ustat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ustat(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_ustat' mangled-name='__sanitizer_syscall_post_impl_ustat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='923' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ustat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_stat64(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_stat64' mangled-name='__sanitizer_syscall_pre_impl_stat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='929' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_stat64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_stat64(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_stat64' mangled-name='__sanitizer_syscall_post_impl_stat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='935' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_stat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fstat64(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fstat64' mangled-name='__sanitizer_syscall_pre_impl_fstat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='941' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fstat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fstat64(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_fstat64' mangled-name='__sanitizer_syscall_post_impl_fstat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='943' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fstat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lstat64(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lstat64' mangled-name='__sanitizer_syscall_pre_impl_lstat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='949' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lstat64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lstat64(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_lstat64' mangled-name='__sanitizer_syscall_post_impl_lstat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='955' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lstat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setxattr(void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setxattr' mangled-name='__sanitizer_syscall_pre_impl_setxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setxattr(long int, void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setxattr' mangled-name='__sanitizer_syscall_post_impl_setxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lsetxattr(void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lsetxattr' mangled-name='__sanitizer_syscall_pre_impl_lsetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='973' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lsetxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lsetxattr(long int, void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lsetxattr' mangled-name='__sanitizer_syscall_post_impl_lsetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='982' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lsetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fsetxattr(long int, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fsetxattr' mangled-name='__sanitizer_syscall_pre_impl_fsetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='985' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fsetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='985' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='985' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='985' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='985' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='986' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fsetxattr(long int, long int, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fsetxattr' mangled-name='__sanitizer_syscall_post_impl_fsetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='992' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fsetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='992' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='992' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='992' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='992' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='993' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='993' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getxattr(void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getxattr' mangled-name='__sanitizer_syscall_pre_impl_getxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='996' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getxattr(long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getxattr' mangled-name='__sanitizer_syscall_post_impl_getxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1003' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lgetxattr(void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lgetxattr' mangled-name='__sanitizer_syscall_pre_impl_lgetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1010' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lgetxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='996' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lgetxattr(long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lgetxattr' mangled-name='__sanitizer_syscall_post_impl_lgetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1018' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lgetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fgetxattr(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fgetxattr' mangled-name='__sanitizer_syscall_pre_impl_fgetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1025' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fgetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fgetxattr(long int, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fgetxattr' mangled-name='__sanitizer_syscall_post_impl_fgetxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fgetxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1031' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_listxattr(void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_listxattr' mangled-name='__sanitizer_syscall_pre_impl_listxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_listxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_listxattr(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_listxattr' mangled-name='__sanitizer_syscall_post_impl_listxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1042' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_listxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_llistxattr(void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_llistxattr' mangled-name='__sanitizer_syscall_pre_impl_llistxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1048' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_llistxattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_llistxattr(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_llistxattr' mangled-name='__sanitizer_syscall_post_impl_llistxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1053' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_llistxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_flistxattr(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_flistxattr' mangled-name='__sanitizer_syscall_pre_impl_flistxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1059' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_flistxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_flistxattr(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_flistxattr' mangled-name='__sanitizer_syscall_post_impl_flistxattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1061' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_flistxattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_removexattr(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_removexattr' mangled-name='__sanitizer_syscall_pre_impl_removexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1067' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_removexattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_removexattr(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_removexattr' mangled-name='__sanitizer_syscall_post_impl_removexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1074' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_removexattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lremovexattr(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lremovexattr' mangled-name='__sanitizer_syscall_pre_impl_lremovexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1076' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lremovexattr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lremovexattr(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_lremovexattr' mangled-name='__sanitizer_syscall_post_impl_lremovexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1083' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lremovexattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fremovexattr(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fremovexattr' mangled-name='__sanitizer_syscall_pre_impl_fremovexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1085' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fremovexattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fremovexattr(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_fremovexattr' mangled-name='__sanitizer_syscall_post_impl_fremovexattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1090' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fremovexattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_brk(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_brk' mangled-name='__sanitizer_syscall_pre_impl_brk' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1092' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_brk'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_brk(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_brk' mangled-name='__sanitizer_syscall_post_impl_brk' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1094' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_brk'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mprotect(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mprotect' mangled-name='__sanitizer_syscall_pre_impl_mprotect' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1096' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mprotect'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mprotect(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mprotect' mangled-name='__sanitizer_syscall_post_impl_mprotect' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1098' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mprotect'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mremap(long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mremap' mangled-name='__sanitizer_syscall_pre_impl_mremap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mremap'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1101' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mremap(long int, long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mremap' mangled-name='__sanitizer_syscall_post_impl_mremap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mremap'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_remap_file_pages(long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_remap_file_pages' mangled-name='__sanitizer_syscall_pre_impl_remap_file_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1106' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_remap_file_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1101' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_remap_file_pages(long int, long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_remap_file_pages' mangled-name='__sanitizer_syscall_post_impl_remap_file_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1109' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_remap_file_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_msync(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_msync' mangled-name='__sanitizer_syscall_pre_impl_msync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1112' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_msync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_msync(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_msync' mangled-name='__sanitizer_syscall_post_impl_msync' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_msync'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_munmap(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_munmap' mangled-name='__sanitizer_syscall_pre_impl_munmap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1116' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_munmap'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_munmap(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_munmap' mangled-name='__sanitizer_syscall_post_impl_munmap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1118' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_munmap'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mlock(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mlock' mangled-name='__sanitizer_syscall_pre_impl_mlock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1120' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mlock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mlock(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mlock' mangled-name='__sanitizer_syscall_post_impl_mlock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1122' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mlock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_munlock(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_munlock' mangled-name='__sanitizer_syscall_pre_impl_munlock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1124' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_munlock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_munlock(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_munlock' mangled-name='__sanitizer_syscall_post_impl_munlock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1126' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_munlock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mlockall(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mlockall' mangled-name='__sanitizer_syscall_pre_impl_mlockall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1128' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mlockall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mlockall(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mlockall' mangled-name='__sanitizer_syscall_post_impl_mlockall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1130' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mlockall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_munlockall() -->
    <function-decl name='__sanitizer_syscall_pre_impl_munlockall' mangled-name='__sanitizer_syscall_pre_impl_munlockall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1132' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_munlockall'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_munlockall(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_munlockall' mangled-name='__sanitizer_syscall_post_impl_munlockall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1134' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_munlockall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_madvise(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_madvise' mangled-name='__sanitizer_syscall_pre_impl_madvise' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1136' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_madvise'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_madvise(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_madvise' mangled-name='__sanitizer_syscall_post_impl_madvise' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1138' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_madvise'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mincore(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mincore' mangled-name='__sanitizer_syscall_pre_impl_mincore' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1140' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mincore'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mincore(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mincore' mangled-name='__sanitizer_syscall_post_impl_mincore' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1142' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mincore'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pivot_root(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pivot_root' mangled-name='__sanitizer_syscall_pre_impl_pivot_root' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pivot_root'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pivot_root(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_pivot_root' mangled-name='__sanitizer_syscall_post_impl_pivot_root' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1158' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pivot_root'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_chroot(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_chroot' mangled-name='__sanitizer_syscall_pre_impl_chroot' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1160' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_chroot'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_chroot(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_chroot' mangled-name='__sanitizer_syscall_post_impl_chroot' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1166' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_chroot'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mknod(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mknod' mangled-name='__sanitizer_syscall_pre_impl_mknod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1168' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mknod'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mknod(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mknod' mangled-name='__sanitizer_syscall_post_impl_mknod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mknod'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_link(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_link' mangled-name='__sanitizer_syscall_pre_impl_link' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1176' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_link'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_link(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_link' mangled-name='__sanitizer_syscall_post_impl_link' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1183' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_link'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_symlink(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_symlink' mangled-name='__sanitizer_syscall_pre_impl_symlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1185' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_symlink'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_symlink(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_symlink' mangled-name='__sanitizer_syscall_post_impl_symlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1191' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_symlink'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_unlink(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_unlink' mangled-name='__sanitizer_syscall_pre_impl_unlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1193' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_unlink'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_unlink(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_unlink' mangled-name='__sanitizer_syscall_post_impl_unlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_unlink'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rename(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rename' mangled-name='__sanitizer_syscall_pre_impl_rename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rename'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rename(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_rename' mangled-name='__sanitizer_syscall_post_impl_rename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1208' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rename'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_chmod(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_chmod' mangled-name='__sanitizer_syscall_pre_impl_chmod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1210' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_chmod'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_chmod(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_chmod' mangled-name='__sanitizer_syscall_post_impl_chmod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1216' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_chmod'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchmod(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchmod' mangled-name='__sanitizer_syscall_pre_impl_fchmod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1218' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchmod'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchmod(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchmod' mangled-name='__sanitizer_syscall_post_impl_fchmod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1220' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchmod'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fcntl(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fcntl' mangled-name='__sanitizer_syscall_pre_impl_fcntl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1222' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fcntl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fcntl(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fcntl' mangled-name='__sanitizer_syscall_post_impl_fcntl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1224' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fcntl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fcntl64(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fcntl64' mangled-name='__sanitizer_syscall_pre_impl_fcntl64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1226' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fcntl64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fcntl64(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fcntl64' mangled-name='__sanitizer_syscall_post_impl_fcntl64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1228' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fcntl64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pipe(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pipe' mangled-name='__sanitizer_syscall_pre_impl_pipe' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1230' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pipe'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pipe(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_pipe' mangled-name='__sanitizer_syscall_post_impl_pipe' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1232' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pipe'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pipe2(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pipe2' mangled-name='__sanitizer_syscall_pre_impl_pipe2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1238' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pipe2'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pipe2(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pipe2' mangled-name='__sanitizer_syscall_post_impl_pipe2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1240' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pipe2'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_dup(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_dup' mangled-name='__sanitizer_syscall_pre_impl_dup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1246' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_dup'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_dup(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_dup' mangled-name='__sanitizer_syscall_post_impl_dup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1248' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_dup'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_dup2(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_dup2' mangled-name='__sanitizer_syscall_pre_impl_dup2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1250' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_dup2'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_dup2(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_dup2' mangled-name='__sanitizer_syscall_post_impl_dup2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1252' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_dup2'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_dup3(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_dup3' mangled-name='__sanitizer_syscall_pre_impl_dup3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1254' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_dup3'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_dup3(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_dup3' mangled-name='__sanitizer_syscall_post_impl_dup3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1256' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_dup3'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ioperm(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ioperm' mangled-name='__sanitizer_syscall_pre_impl_ioperm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1258' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ioperm'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ioperm(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ioperm' mangled-name='__sanitizer_syscall_post_impl_ioperm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1260' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ioperm'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ioctl(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ioctl' mangled-name='__sanitizer_syscall_pre_impl_ioctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1262' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ioctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ioctl(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ioctl' mangled-name='__sanitizer_syscall_post_impl_ioctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ioctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_flock(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_flock' mangled-name='__sanitizer_syscall_pre_impl_flock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1266' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_flock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_flock(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_flock' mangled-name='__sanitizer_syscall_post_impl_flock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1268' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_flock'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_io_setup(long int, void**) -->
    <function-decl name='__sanitizer_syscall_pre_impl_io_setup' mangled-name='__sanitizer_syscall_pre_impl_io_setup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1270' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_io_setup'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_reqs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1270' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='ctx' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1270' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_io_setup(long int, long int, void**) -->
    <function-decl name='__sanitizer_syscall_post_impl_io_setup' mangled-name='__sanitizer_syscall_post_impl_io_setup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1274' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_io_setup'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1274' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_reqs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1274' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='ctx' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1274' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_io_destroy(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_io_destroy' mangled-name='__sanitizer_syscall_pre_impl_io_destroy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_io_destroy'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_io_destroy(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_io_destroy' mangled-name='__sanitizer_syscall_post_impl_io_destroy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1286' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_io_destroy'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_io_getevents(long int, long int, long int, __sanitizer::__sanitizer_io_event*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_io_getevents' mangled-name='__sanitizer_syscall_pre_impl_io_getevents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_io_getevents'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1288' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='min_nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1288' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1288' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_io_event*' -->
      <parameter type-id='45c8bbd7' name='ioevpp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1289' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1289' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_io_getevents(long int, long int, long int, long int, __sanitizer::__sanitizer_io_event*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_io_getevents' mangled-name='__sanitizer_syscall_post_impl_io_getevents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1293' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_io_getevents'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1293' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1293' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='min_nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1293' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1293' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_io_event*' -->
      <parameter type-id='45c8bbd7' name='ioevpp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1294' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_io_submit(long int, long int, __sanitizer::__sanitizer_iocb**) -->
    <function-decl name='__sanitizer_syscall_pre_impl_io_submit' mangled-name='__sanitizer_syscall_pre_impl_io_submit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1311' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_io_submit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1311' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1311' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iocb**' -->
      <parameter type-id='203c2781' name='iocbpp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1311' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_io_submit(long int, long int, long int, __sanitizer::__sanitizer_iocb**) -->
    <function-decl name='__sanitizer_syscall_post_impl_io_submit' mangled-name='__sanitizer_syscall_post_impl_io_submit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1335' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_io_submit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1335' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iocb**' -->
      <parameter type-id='203c2781' name='iocbpp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1336' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_io_cancel(long int, __sanitizer::__sanitizer_iocb*, __sanitizer::__sanitizer_io_event*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_io_cancel' mangled-name='__sanitizer_syscall_pre_impl_io_cancel' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1338' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_io_cancel'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1338' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iocb*' -->
      <parameter type-id='46862f31' name='iocb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1338' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_io_event*' -->
      <parameter type-id='45c8bbd7' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1339' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_io_cancel(long int, long int, __sanitizer::__sanitizer_iocb*, __sanitizer::__sanitizer_io_event*) -->
    <function-decl name='__sanitizer_syscall_post_impl_io_cancel' mangled-name='__sanitizer_syscall_post_impl_io_cancel' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1342' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_io_cancel'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1342' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ctx_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1342' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iocb*' -->
      <parameter type-id='46862f31' name='iocb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1342' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_io_event*' -->
      <parameter type-id='45c8bbd7' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1343' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sendfile(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sendfile' mangled-name='__sanitizer_syscall_pre_impl_sendfile' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1355' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sendfile'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sendfile(long int, long int, long int, __sanitizer::__sanitizer___kernel_off_t*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sendfile' mangled-name='__sanitizer_syscall_post_impl_sendfile' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1357' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sendfile'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1357' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='out_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1357' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='in_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1357' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_off_t*' -->
      <parameter type-id='a6d86880' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1358' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1358' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sendfile64(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sendfile64' mangled-name='__sanitizer_syscall_pre_impl_sendfile64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1364' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sendfile64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sendfile64(long int, long int, long int, __sanitizer::__sanitizer___kernel_loff_t*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sendfile64' mangled-name='__sanitizer_syscall_post_impl_sendfile64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1366' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sendfile64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1366' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='out_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1366' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='in_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1366' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_loff_t*' -->
      <parameter type-id='a42f551c' name='offset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1367' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1367' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_readlink(void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_readlink' mangled-name='__sanitizer_syscall_pre_impl_readlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1373' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_readlink'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1037' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_readlink(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_readlink' mangled-name='__sanitizer_syscall_post_impl_readlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1378' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_readlink'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_creat(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_creat' mangled-name='__sanitizer_syscall_pre_impl_creat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1385' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_creat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_creat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_creat' mangled-name='__sanitizer_syscall_post_impl_creat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1391' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_creat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_open(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_open' mangled-name='__sanitizer_syscall_pre_impl_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1393' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_open'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_open(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_open' mangled-name='__sanitizer_syscall_post_impl_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1399' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_open'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_close(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_close' mangled-name='__sanitizer_syscall_pre_impl_close' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1401' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_close'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_close(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_close' mangled-name='__sanitizer_syscall_post_impl_close' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1405' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_close'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_access(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_access' mangled-name='__sanitizer_syscall_pre_impl_access' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1407' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_access'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_access(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_access' mangled-name='__sanitizer_syscall_post_impl_access' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1413' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_access'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_vhangup() -->
    <function-decl name='__sanitizer_syscall_pre_impl_vhangup' mangled-name='__sanitizer_syscall_pre_impl_vhangup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1415' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_vhangup'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_vhangup(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_vhangup' mangled-name='__sanitizer_syscall_post_impl_vhangup' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1417' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_vhangup'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_chown(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_chown' mangled-name='__sanitizer_syscall_pre_impl_chown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1419' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_chown'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_chown(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_chown' mangled-name='__sanitizer_syscall_post_impl_chown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1425' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_chown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lchown(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lchown' mangled-name='__sanitizer_syscall_pre_impl_lchown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1427' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lchown'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lchown(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lchown' mangled-name='__sanitizer_syscall_post_impl_lchown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1433' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lchown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchown(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchown' mangled-name='__sanitizer_syscall_pre_impl_fchown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1435' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchown(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchown' mangled-name='__sanitizer_syscall_post_impl_fchown' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchown'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_chown16(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_chown16' mangled-name='__sanitizer_syscall_pre_impl_chown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1439' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_chown16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_chown16(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_chown16' mangled-name='__sanitizer_syscall_post_impl_chown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_chown16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lchown16(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lchown16' mangled-name='__sanitizer_syscall_pre_impl_lchown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lchown16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lchown16(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lchown16' mangled-name='__sanitizer_syscall_post_impl_lchown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1453' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lchown16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchown16(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchown16' mangled-name='__sanitizer_syscall_pre_impl_fchown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1455' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchown16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchown16(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchown16' mangled-name='__sanitizer_syscall_post_impl_fchown16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1457' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchown16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setregid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setregid16' mangled-name='__sanitizer_syscall_pre_impl_setregid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setregid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setregid16(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setregid16' mangled-name='__sanitizer_syscall_post_impl_setregid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1461' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setregid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setgid16(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setgid16' mangled-name='__sanitizer_syscall_pre_impl_setgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1463' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setgid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setgid16' mangled-name='__sanitizer_syscall_post_impl_setgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1465' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setreuid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setreuid16' mangled-name='__sanitizer_syscall_pre_impl_setreuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setreuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setreuid16(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setreuid16' mangled-name='__sanitizer_syscall_post_impl_setreuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1469' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setreuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setuid16(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setuid16' mangled-name='__sanitizer_syscall_pre_impl_setuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1471' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setuid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setuid16' mangled-name='__sanitizer_syscall_post_impl_setuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1473' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setresuid16(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setresuid16' mangled-name='__sanitizer_syscall_pre_impl_setresuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1475' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setresuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setresuid16(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setresuid16' mangled-name='__sanitizer_syscall_post_impl_setresuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1477' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setresuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getresuid16(void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getresuid16' mangled-name='__sanitizer_syscall_pre_impl_getresuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1479' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getresuid16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getresuid16(long int, __sanitizer::__sanitizer___kernel_old_uid_t*, __sanitizer::__sanitizer___kernel_old_uid_t*, __sanitizer::__sanitizer___kernel_old_uid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getresuid16' mangled-name='__sanitizer_syscall_post_impl_getresuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1481' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getresuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1481' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_uid_t*' -->
      <parameter type-id='20b68dfb' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1481' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_uid_t*' -->
      <parameter type-id='20b68dfb' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1482' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_uid_t*' -->
      <parameter type-id='20b68dfb' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1483' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setresgid16(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setresgid16' mangled-name='__sanitizer_syscall_pre_impl_setresgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1491' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setresgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setresgid16(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setresgid16' mangled-name='__sanitizer_syscall_post_impl_setresgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1493' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setresgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getresgid16(void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getresgid16' mangled-name='__sanitizer_syscall_pre_impl_getresgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1495' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getresgid16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getresgid16(long int, __sanitizer::__sanitizer___kernel_old_gid_t*, __sanitizer::__sanitizer___kernel_old_gid_t*, __sanitizer::__sanitizer___kernel_old_gid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getresgid16' mangled-name='__sanitizer_syscall_post_impl_getresgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1497' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getresgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1497' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1497' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1498' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='sgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1499' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setfsuid16(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setfsuid16' mangled-name='__sanitizer_syscall_pre_impl_setfsuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1507' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setfsuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setfsuid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setfsuid16' mangled-name='__sanitizer_syscall_post_impl_setfsuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1509' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setfsuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setfsgid16(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setfsgid16' mangled-name='__sanitizer_syscall_pre_impl_setfsgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1511' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setfsgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setfsgid16(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setfsgid16' mangled-name='__sanitizer_syscall_post_impl_setfsgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1513' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setfsgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getgroups16(long int, __sanitizer::__sanitizer___kernel_old_gid_t*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getgroups16' mangled-name='__sanitizer_syscall_pre_impl_getgroups16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1515' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getgroups16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1515' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1516' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getgroups16(long int, long int, __sanitizer::__sanitizer___kernel_old_gid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getgroups16' mangled-name='__sanitizer_syscall_post_impl_getgroups16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1518' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getgroups16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1518' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1518' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1519' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setgroups16(long int, __sanitizer::__sanitizer___kernel_old_gid_t*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setgroups16' mangled-name='__sanitizer_syscall_pre_impl_setgroups16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1525' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setgroups16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1515' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1516' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setgroups16(long int, long int, __sanitizer::__sanitizer___kernel_old_gid_t*) -->
    <function-decl name='__sanitizer_syscall_post_impl_setgroups16' mangled-name='__sanitizer_syscall_post_impl_setgroups16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1530' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setgroups16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1518' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='gidsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1518' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_old_gid_t*' -->
      <parameter type-id='f628a8d1' name='grouplist' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1519' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getuid16() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getuid16' mangled-name='__sanitizer_syscall_pre_impl_getuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1533' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getuid16'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getuid16(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getuid16' mangled-name='__sanitizer_syscall_post_impl_getuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1535' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_geteuid16() -->
    <function-decl name='__sanitizer_syscall_pre_impl_geteuid16' mangled-name='__sanitizer_syscall_pre_impl_geteuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1537' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_geteuid16'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_geteuid16(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_geteuid16' mangled-name='__sanitizer_syscall_post_impl_geteuid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1539' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_geteuid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getgid16() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getgid16' mangled-name='__sanitizer_syscall_pre_impl_getgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1541' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getgid16'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getgid16(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getgid16' mangled-name='__sanitizer_syscall_post_impl_getgid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1543' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getgid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getegid16() -->
    <function-decl name='__sanitizer_syscall_pre_impl_getegid16' mangled-name='__sanitizer_syscall_pre_impl_getegid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1545' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getegid16'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getegid16(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getegid16' mangled-name='__sanitizer_syscall_post_impl_getegid16' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1547' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getegid16'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_utime(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_utime' mangled-name='__sanitizer_syscall_pre_impl_utime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1549' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_utime'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_utime(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_utime' mangled-name='__sanitizer_syscall_post_impl_utime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1551' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_utime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_utimes(void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_utimes' mangled-name='__sanitizer_syscall_pre_impl_utimes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1560' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_utimes'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='217' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_utimes(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_utimes' mangled-name='__sanitizer_syscall_post_impl_utimes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1562' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_utimes'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lseek(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lseek' mangled-name='__sanitizer_syscall_pre_impl_lseek' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1571' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lseek'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lseek(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lseek' mangled-name='__sanitizer_syscall_post_impl_lseek' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1573' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lseek'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_llseek(long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_llseek' mangled-name='__sanitizer_syscall_pre_impl_llseek' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1575' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_llseek'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='615' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_llseek(long int, long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_llseek' mangled-name='__sanitizer_syscall_post_impl_llseek' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_llseek'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_high' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_low' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='origin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_readv(long int, const __sanitizer::__sanitizer_iovec*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_readv' mangled-name='__sanitizer_syscall_pre_impl_readv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_readv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_readv(long int, long int, const __sanitizer::__sanitizer_iovec*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_readv' mangled-name='__sanitizer_syscall_post_impl_readv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_readv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1588' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_write(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_write' mangled-name='__sanitizer_syscall_pre_impl_write' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1594' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_write'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_write(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_write' mangled-name='__sanitizer_syscall_post_impl_write' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1598' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_write'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_writev(long int, const __sanitizer::__sanitizer_iovec*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_writev' mangled-name='__sanitizer_syscall_pre_impl_writev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1600' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_writev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1585' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_writev(long int, long int, const __sanitizer::__sanitizer_iovec*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_writev' mangled-name='__sanitizer_syscall_post_impl_writev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1602' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_writev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1587' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1588' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pread64(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pread64' mangled-name='__sanitizer_syscall_pre_impl_pread64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1610' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pread64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pread64(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pread64' mangled-name='__sanitizer_syscall_post_impl_pread64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pread64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pwrite64(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pwrite64' mangled-name='__sanitizer_syscall_pre_impl_pwrite64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1618' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pwrite64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pwrite64(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pwrite64' mangled-name='__sanitizer_syscall_post_impl_pwrite64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1622' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pwrite64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_preadv(long int, const __sanitizer::__sanitizer_iovec*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_preadv' mangled-name='__sanitizer_syscall_pre_impl_preadv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_preadv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_l' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1644' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_h' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1644' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_preadv(long int, long int, const __sanitizer::__sanitizer_iovec*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_preadv' mangled-name='__sanitizer_syscall_post_impl_preadv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_preadv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_l' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1647' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_h' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1647' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pwritev(long int, const __sanitizer::__sanitizer_iovec*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pwritev' mangled-name='__sanitizer_syscall_pre_impl_pwritev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1653' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pwritev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1643' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_l' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1644' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_h' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1644' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pwritev(long int, long int, const __sanitizer::__sanitizer_iovec*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pwritev' mangled-name='__sanitizer_syscall_post_impl_pwritev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1656' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pwritev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='vec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='vlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1646' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_l' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1647' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos_h' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1647' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getcwd(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getcwd' mangled-name='__sanitizer_syscall_pre_impl_getcwd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1663' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getcwd'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getcwd(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getcwd' mangled-name='__sanitizer_syscall_post_impl_getcwd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1665' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getcwd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mkdir(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mkdir' mangled-name='__sanitizer_syscall_pre_impl_mkdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1672' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mkdir'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mkdir(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mkdir' mangled-name='__sanitizer_syscall_post_impl_mkdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1678' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mkdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_chdir(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_chdir' mangled-name='__sanitizer_syscall_pre_impl_chdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1680' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_chdir'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_chdir(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_chdir' mangled-name='__sanitizer_syscall_post_impl_chdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1686' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_chdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchdir(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchdir' mangled-name='__sanitizer_syscall_pre_impl_fchdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1688' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchdir(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchdir' mangled-name='__sanitizer_syscall_post_impl_fchdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1690' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_rmdir(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_rmdir' mangled-name='__sanitizer_syscall_pre_impl_rmdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1692' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_rmdir'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_rmdir(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_rmdir' mangled-name='__sanitizer_syscall_post_impl_rmdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1698' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_rmdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_lookup_dcookie(__sanitizer::u64, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_lookup_dcookie' mangled-name='__sanitizer_syscall_pre_impl_lookup_dcookie' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1700' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_lookup_dcookie'>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa' name='cookie64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1700' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1700' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1700' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_lookup_dcookie(long int, __sanitizer::u64, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_lookup_dcookie' mangled-name='__sanitizer_syscall_post_impl_lookup_dcookie' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1702' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_lookup_dcookie'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1702' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa' name='cookie64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1702' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1702' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1702' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_quotactl(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_quotactl' mangled-name='__sanitizer_syscall_pre_impl_quotactl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1709' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_quotactl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_quotactl(long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_quotactl' mangled-name='__sanitizer_syscall_post_impl_quotactl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1714' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_quotactl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='632' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getdents(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getdents' mangled-name='__sanitizer_syscall_pre_impl_getdents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1717' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getdents'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getdents(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getdents' mangled-name='__sanitizer_syscall_post_impl_getdents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1719' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getdents'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getdents64(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getdents64' mangled-name='__sanitizer_syscall_pre_impl_getdents64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1725' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getdents64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getdents64(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_getdents64' mangled-name='__sanitizer_syscall_post_impl_getdents64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1727' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getdents64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setsockopt(long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setsockopt' mangled-name='__sanitizer_syscall_pre_impl_setsockopt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1733' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setsockopt'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='614' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='615' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setsockopt(long int, long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setsockopt' mangled-name='__sanitizer_syscall_post_impl_setsockopt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1736' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setsockopt'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_high' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_low' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='origin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getsockopt(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getsockopt' mangled-name='__sanitizer_syscall_pre_impl_getsockopt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1745' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getsockopt'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getsockopt(long int, long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getsockopt' mangled-name='__sanitizer_syscall_post_impl_getsockopt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1748' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getsockopt'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1748' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1748' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='level' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1748' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='optname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1748' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='optval' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1749' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='optlen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1749' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_bind(long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_bind' mangled-name='__sanitizer_syscall_pre_impl_bind' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_bind'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_bind(long int, long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_bind' mangled-name='__sanitizer_syscall_post_impl_bind' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_bind'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1761' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_connect(long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_connect' mangled-name='__sanitizer_syscall_pre_impl_connect' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1767' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_connect'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1758' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_connect(long int, long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_connect' mangled-name='__sanitizer_syscall_post_impl_connect' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1769' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_connect'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1761' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_accept(long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_accept' mangled-name='__sanitizer_syscall_pre_impl_accept' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_accept'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_accept(long int, long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_accept' mangled-name='__sanitizer_syscall_post_impl_accept' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_accept'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1779' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_accept4(long int, sanitizer_kernel_sockaddr*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_accept4' mangled-name='__sanitizer_syscall_pre_impl_accept4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1786' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_accept4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1786' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1786' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1786' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1787' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_accept4(long int, long int, sanitizer_kernel_sockaddr*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_accept4' mangled-name='__sanitizer_syscall_post_impl_accept4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1789' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_accept4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1789' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1789' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1789' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1790' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1790' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getsockname(long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getsockname' mangled-name='__sanitizer_syscall_pre_impl_getsockname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1797' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getsockname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getsockname(long int, long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getsockname' mangled-name='__sanitizer_syscall_post_impl_getsockname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1800' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getsockname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1779' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getpeername(long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getpeername' mangled-name='__sanitizer_syscall_pre_impl_getpeername' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1808' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getpeername'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1776' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getpeername(long int, long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getpeername' mangled-name='__sanitizer_syscall_post_impl_getpeername' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1811' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getpeername'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1778' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1779' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_send(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_send' mangled-name='__sanitizer_syscall_pre_impl_send' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1819' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_send'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_send(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_send' mangled-name='__sanitizer_syscall_post_impl_send' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1821' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_send'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sendto(long int, void*, long int, long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sendto' mangled-name='__sanitizer_syscall_pre_impl_sendto' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1827' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sendto'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1827' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1827' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1827' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1827' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1828' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1828' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sendto(long int, long int, void*, long int, long int, sanitizer_kernel_sockaddr*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sendto' mangled-name='__sanitizer_syscall_post_impl_sendto' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sendto'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1830' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1831' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1831' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sendmsg(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sendmsg' mangled-name='__sanitizer_syscall_pre_impl_sendmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1838' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sendmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sendmsg(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sendmsg' mangled-name='__sanitizer_syscall_post_impl_sendmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1840' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sendmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sendmmsg(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sendmmsg' mangled-name='__sanitizer_syscall_pre_impl_sendmmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1844' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sendmmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sendmmsg(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sendmmsg' mangled-name='__sanitizer_syscall_post_impl_sendmmsg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1846' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sendmmsg'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_recv(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_recv' mangled-name='__sanitizer_syscall_pre_impl_recv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1850' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_recv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_recv(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_recv' mangled-name='__sanitizer_syscall_post_impl_recv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1852' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_recv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_recvfrom(long int, void*, long int, long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_recvfrom' mangled-name='__sanitizer_syscall_pre_impl_recvfrom' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1858' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_recvfrom'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1858' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1858' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1858' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1858' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1859' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1859' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_recvfrom(long int, long int, void*, long int, long int, sanitizer_kernel_sockaddr*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_recvfrom' mangled-name='__sanitizer_syscall_post_impl_recvfrom' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_recvfrom'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1861' column='1'/>
      <!-- parameter of type 'sanitizer_kernel_sockaddr*' -->
      <parameter type-id='d8e6eb10' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1862' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1862' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_socket(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_socket' mangled-name='__sanitizer_syscall_pre_impl_socket' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1870' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_socket'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_socket(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_socket' mangled-name='__sanitizer_syscall_post_impl_socket' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1872' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_socket'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_socketpair(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_socketpair' mangled-name='__sanitizer_syscall_pre_impl_socketpair' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1874' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_socketpair'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_socketpair(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_socketpair' mangled-name='__sanitizer_syscall_post_impl_socketpair' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1876' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_socketpair'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_socketcall(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_socketcall' mangled-name='__sanitizer_syscall_pre_impl_socketcall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1883' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_socketcall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_socketcall(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_socketcall' mangled-name='__sanitizer_syscall_post_impl_socketcall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1885' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_socketcall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_listen(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_listen' mangled-name='__sanitizer_syscall_pre_impl_listen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1891' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_listen'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_listen(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_listen' mangled-name='__sanitizer_syscall_post_impl_listen' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1893' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_listen'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_poll(void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_poll' mangled-name='__sanitizer_syscall_pre_impl_poll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_poll'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1895' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_poll(long int, __sanitizer::__sanitizer_pollfd*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_poll' mangled-name='__sanitizer_syscall_post_impl_poll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1897' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_poll'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1897' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='ufds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1897' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nfds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1897' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1898' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_select(long int, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_select' mangled-name='__sanitizer_syscall_pre_impl_select' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1904' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_select'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='n' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1904' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='inp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1904' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='outp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1905' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='exp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1906' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tvp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1906' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_select(long int, long int, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_select' mangled-name='__sanitizer_syscall_post_impl_select' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1908' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_select'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1908' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='n' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1908' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='inp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1908' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='outp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1909' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='exp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1910' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tvp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1910' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_old_select(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_old_select' mangled-name='__sanitizer_syscall_pre_impl_old_select' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1919' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_old_select'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_old_select(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_old_select' mangled-name='__sanitizer_syscall_post_impl_old_select' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1921' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_old_select'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_epoll_create(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_epoll_create' mangled-name='__sanitizer_syscall_pre_impl_epoll_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1923' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_epoll_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_epoll_create(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_epoll_create' mangled-name='__sanitizer_syscall_post_impl_epoll_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1925' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_epoll_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_epoll_create1(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_epoll_create1' mangled-name='__sanitizer_syscall_pre_impl_epoll_create1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1927' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_epoll_create1'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_epoll_create1(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_epoll_create1' mangled-name='__sanitizer_syscall_post_impl_epoll_create1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1929' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_epoll_create1'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_epoll_ctl(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_epoll_ctl' mangled-name='__sanitizer_syscall_pre_impl_epoll_ctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1931' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_epoll_ctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_epoll_ctl(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_epoll_ctl' mangled-name='__sanitizer_syscall_post_impl_epoll_ctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1933' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_epoll_ctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_epoll_wait(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_epoll_wait' mangled-name='__sanitizer_syscall_pre_impl_epoll_wait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1939' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_epoll_wait'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_epoll_wait(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_epoll_wait' mangled-name='__sanitizer_syscall_post_impl_epoll_wait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1942' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_epoll_wait'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_epoll_pwait(long int, void*, long int, long int, const kernel_sigset_t*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_epoll_pwait' mangled-name='__sanitizer_syscall_pre_impl_epoll_pwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1949' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_epoll_pwait'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='epfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1949' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='events' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1949' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxevents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1949' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1949' column='1'/>
      <!-- parameter of type 'const kernel_sigset_t*' -->
      <parameter type-id='b81b7280' name='sigmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1950' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1950' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_epoll_pwait(long int, long int, void*, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_epoll_pwait' mangled-name='__sanitizer_syscall_post_impl_epoll_pwait' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1954' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_epoll_pwait'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1954' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='epfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1954' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='events' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1954' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxevents' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1954' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1955' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='sigmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1955' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1955' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_gethostname(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_gethostname' mangled-name='__sanitizer_syscall_pre_impl_gethostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1961' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_gethostname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_gethostname(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_gethostname' mangled-name='__sanitizer_syscall_post_impl_gethostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1963' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_gethostname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sethostname(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sethostname' mangled-name='__sanitizer_syscall_pre_impl_sethostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1970' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sethostname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sethostname(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sethostname' mangled-name='__sanitizer_syscall_post_impl_sethostname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1972' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sethostname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setdomainname(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setdomainname' mangled-name='__sanitizer_syscall_pre_impl_setdomainname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1979' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setdomainname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setdomainname(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setdomainname' mangled-name='__sanitizer_syscall_post_impl_setdomainname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1981' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setdomainname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_newuname(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_newuname' mangled-name='__sanitizer_syscall_pre_impl_newuname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1988' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_newuname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_newuname(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_newuname' mangled-name='__sanitizer_syscall_post_impl_newuname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1990' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_newuname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_uname(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_uname' mangled-name='__sanitizer_syscall_pre_impl_uname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1996' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_uname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_uname(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_uname' mangled-name='__sanitizer_syscall_post_impl_uname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1998' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_uname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_olduname(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_olduname' mangled-name='__sanitizer_syscall_pre_impl_olduname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2004' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_olduname'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_olduname(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_olduname' mangled-name='__sanitizer_syscall_post_impl_olduname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2006' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_olduname'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getrlimit(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getrlimit' mangled-name='__sanitizer_syscall_pre_impl_getrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2012' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getrlimit(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getrlimit' mangled-name='__sanitizer_syscall_post_impl_getrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2014' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_old_getrlimit(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_old_getrlimit' mangled-name='__sanitizer_syscall_pre_impl_old_getrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2020' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_old_getrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_old_getrlimit(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_old_getrlimit' mangled-name='__sanitizer_syscall_post_impl_old_getrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2022' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_old_getrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setrlimit(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setrlimit' mangled-name='__sanitizer_syscall_pre_impl_setrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2028' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setrlimit(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_setrlimit' mangled-name='__sanitizer_syscall_post_impl_setrlimit' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2030' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setrlimit'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_prlimit64(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_prlimit64' mangled-name='__sanitizer_syscall_pre_impl_prlimit64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2037' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_prlimit64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_prlimit64(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_prlimit64' mangled-name='__sanitizer_syscall_post_impl_prlimit64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2042' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_prlimit64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getrusage(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getrusage' mangled-name='__sanitizer_syscall_pre_impl_getrusage' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2050' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getrusage'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getrusage(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getrusage' mangled-name='__sanitizer_syscall_post_impl_getrusage' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2052' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getrusage'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_umask(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_umask' mangled-name='__sanitizer_syscall_pre_impl_umask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2058' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_umask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_umask(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_umask' mangled-name='__sanitizer_syscall_post_impl_umask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2060' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_umask'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_msgget(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_msgget' mangled-name='__sanitizer_syscall_pre_impl_msgget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2062' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_msgget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_msgget(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_msgget' mangled-name='__sanitizer_syscall_post_impl_msgget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2064' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_msgget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_msgsnd(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_msgsnd' mangled-name='__sanitizer_syscall_pre_impl_msgsnd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2066' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_msgsnd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_msgsnd(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_msgsnd' mangled-name='__sanitizer_syscall_post_impl_msgsnd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2070' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_msgsnd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_msgrcv(long int, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_msgrcv' mangled-name='__sanitizer_syscall_pre_impl_msgrcv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_msgrcv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msqid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msgp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgsz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgtyp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgflg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2074' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_msgrcv(long int, long int, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_msgrcv' mangled-name='__sanitizer_syscall_post_impl_msgrcv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_msgrcv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msqid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msgp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgsz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgtyp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgflg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2077' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_msgctl(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_msgctl' mangled-name='__sanitizer_syscall_pre_impl_msgctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2083' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_msgctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_msgctl(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_msgctl' mangled-name='__sanitizer_syscall_post_impl_msgctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2085' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_msgctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_semget(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_semget' mangled-name='__sanitizer_syscall_pre_impl_semget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2091' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_semget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_semget(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_semget' mangled-name='__sanitizer_syscall_post_impl_semget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2093' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_semget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_semop(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_semop' mangled-name='__sanitizer_syscall_pre_impl_semop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2095' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_semop'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_semop(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_semop' mangled-name='__sanitizer_syscall_post_impl_semop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2097' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_semop'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_semctl(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_semctl' mangled-name='__sanitizer_syscall_pre_impl_semctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2099' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_semctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_semctl(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_semctl' mangled-name='__sanitizer_syscall_post_impl_semctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2101' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_semctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_semtimedop(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_semtimedop' mangled-name='__sanitizer_syscall_pre_impl_semtimedop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2103' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_semtimedop'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_semtimedop(long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_semtimedop' mangled-name='__sanitizer_syscall_post_impl_semtimedop' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_semtimedop'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='632' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_shmat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_shmat' mangled-name='__sanitizer_syscall_pre_impl_shmat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2111' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_shmat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_shmat(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_shmat' mangled-name='__sanitizer_syscall_post_impl_shmat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2113' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_shmat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_shmget(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_shmget' mangled-name='__sanitizer_syscall_pre_impl_shmget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2121' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_shmget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_shmget(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_shmget' mangled-name='__sanitizer_syscall_post_impl_shmget' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2123' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_shmget'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_shmdt(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_shmdt' mangled-name='__sanitizer_syscall_pre_impl_shmdt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2125' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_shmdt'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_shmdt(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_shmdt' mangled-name='__sanitizer_syscall_post_impl_shmdt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2127' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_shmdt'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ipc(long int, long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ipc' mangled-name='__sanitizer_syscall_pre_impl_ipc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2135' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ipc'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_high' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='offset_low' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1578' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='origin' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1579' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ipc(long int, long int, long int, long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ipc' mangled-name='__sanitizer_syscall_post_impl_ipc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ipc'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='call' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='first' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='second' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='third' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2138' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2139' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fifth' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2139' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_shmctl(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_shmctl' mangled-name='__sanitizer_syscall_pre_impl_shmctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2142' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_shmctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_shmctl(long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_shmctl' mangled-name='__sanitizer_syscall_post_impl_shmctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2144' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_shmctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='531' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_open(void*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_open' mangled-name='__sanitizer_syscall_pre_impl_mq_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_open'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2150' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='oflag' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2150' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2150' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2150' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_open(long int, void*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_open' mangled-name='__sanitizer_syscall_post_impl_mq_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_open'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='oflag' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2156' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_unlink(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_unlink' mangled-name='__sanitizer_syscall_pre_impl_mq_unlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2162' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_unlink'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_unlink(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_unlink' mangled-name='__sanitizer_syscall_post_impl_mq_unlink' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2167' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_unlink'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_timedsend(long int, void*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_timedsend' mangled-name='__sanitizer_syscall_pre_impl_mq_timedsend' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2169' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_timedsend'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='oflag' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2155' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2156' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_timedsend(long int, long int, void*, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_timedsend' mangled-name='__sanitizer_syscall_post_impl_mq_timedsend' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2175' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_timedsend'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2175' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mqdes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2175' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg_ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2175' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msg_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2176' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msg_prio' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2176' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='abs_timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2177' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_timedreceive(long int, void*, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_timedreceive' mangled-name='__sanitizer_syscall_pre_impl_mq_timedreceive' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2179' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_timedreceive'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mqdes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2179' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg_ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2179' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msg_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2179' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg_prio' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2180' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='abs_timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2180' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_timedreceive(long int, long int, void*, long int, int*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_timedreceive' mangled-name='__sanitizer_syscall_post_impl_mq_timedreceive' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2184' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_timedreceive'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2184' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mqdes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2184' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg_ptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2184' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msg_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2184' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='msg_prio' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2185' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='abs_timeout' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2185' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_notify(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_notify' mangled-name='__sanitizer_syscall_pre_impl_mq_notify' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2192' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_notify'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_notify(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_notify' mangled-name='__sanitizer_syscall_post_impl_mq_notify' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2196' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_notify'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mq_getsetattr(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mq_getsetattr' mangled-name='__sanitizer_syscall_pre_impl_mq_getsetattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2198' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mq_getsetattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mq_getsetattr(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_mq_getsetattr' mangled-name='__sanitizer_syscall_post_impl_mq_getsetattr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2202' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mq_getsetattr'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pciconfig_iobase(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pciconfig_iobase' mangled-name='__sanitizer_syscall_pre_impl_pciconfig_iobase' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2210' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pciconfig_iobase'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pciconfig_iobase(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_pciconfig_iobase' mangled-name='__sanitizer_syscall_post_impl_pciconfig_iobase' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2212' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pciconfig_iobase'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pciconfig_read(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pciconfig_read' mangled-name='__sanitizer_syscall_pre_impl_pciconfig_read' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2214' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pciconfig_read'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pciconfig_read(long int, long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_pciconfig_read' mangled-name='__sanitizer_syscall_post_impl_pciconfig_read' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pciconfig_read'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='bus' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dfn' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='off' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2218' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pciconfig_write(long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pciconfig_write' mangled-name='__sanitizer_syscall_pre_impl_pciconfig_write' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2220' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pciconfig_write'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='magic2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='605' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pciconfig_write(long int, long int, long int, long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_pciconfig_write' mangled-name='__sanitizer_syscall_post_impl_pciconfig_write' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2223' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pciconfig_write'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='bus' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dfn' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='off' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2217' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2218' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_swapon(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_swapon' mangled-name='__sanitizer_syscall_pre_impl_swapon' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2226' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_swapon'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_swapon(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_swapon' mangled-name='__sanitizer_syscall_post_impl_swapon' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2232' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_swapon'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_swapoff(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_swapoff' mangled-name='__sanitizer_syscall_pre_impl_swapoff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2234' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_swapoff'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_swapoff(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_swapoff' mangled-name='__sanitizer_syscall_post_impl_swapoff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2240' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_swapoff'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sysctl(__sanitizer::__sanitizer___sysctl_args*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sysctl' mangled-name='__sanitizer_syscall_pre_impl_sysctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2242' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sysctl'>
      <!-- parameter of type '__sanitizer::__sanitizer___sysctl_args*' -->
      <parameter type-id='3b9d21c6' name='args' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2242' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sysctl(long int, __sanitizer::__sanitizer___sysctl_args*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sysctl' mangled-name='__sanitizer_syscall_post_impl_sysctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2249' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sysctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2249' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___sysctl_args*' -->
      <parameter type-id='3b9d21c6' name='args' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2249' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sysinfo(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sysinfo' mangled-name='__sanitizer_syscall_pre_impl_sysinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2258' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sysinfo'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sysinfo(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_sysinfo' mangled-name='__sanitizer_syscall_post_impl_sysinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2260' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sysinfo'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_sysfs(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_sysfs' mangled-name='__sanitizer_syscall_pre_impl_sysfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2266' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_sysfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_sysfs(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_sysfs' mangled-name='__sanitizer_syscall_post_impl_sysfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2268' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_sysfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_syslog(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_syslog' mangled-name='__sanitizer_syscall_pre_impl_syslog' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2270' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_syslog'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_syslog(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_syslog' mangled-name='__sanitizer_syscall_post_impl_syslog' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2272' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_syslog'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_uselib(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_uselib' mangled-name='__sanitizer_syscall_pre_impl_uselib' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2279' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_uselib'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_uselib(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_uselib' mangled-name='__sanitizer_syscall_post_impl_uselib' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_uselib'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ni_syscall() -->
    <function-decl name='__sanitizer_syscall_pre_impl_ni_syscall' mangled-name='__sanitizer_syscall_pre_impl_ni_syscall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2286' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ni_syscall'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ni_syscall(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ni_syscall' mangled-name='__sanitizer_syscall_post_impl_ni_syscall' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ni_syscall'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ptrace(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ptrace' mangled-name='__sanitizer_syscall_pre_impl_ptrace' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2290' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ptrace'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ptrace(long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ptrace' mangled-name='__sanitizer_syscall_post_impl_ptrace' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2309' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ptrace'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1101' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_add_key(void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_add_key' mangled-name='__sanitizer_syscall_pre_impl_add_key' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2334' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_add_key'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='961' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='962' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_add_key(long int, void*, void*, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_add_key' mangled-name='__sanitizer_syscall_post_impl_add_key' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2343' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_add_key'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='970' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='971' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_request_key(void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_request_key' mangled-name='__sanitizer_syscall_pre_impl_request_key' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2346' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_request_key'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='path' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='995' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='996' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_request_key(long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_request_key' mangled-name='__sanitizer_syscall_post_impl_request_key' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2358' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_request_key'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_keyctl(long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_keyctl' mangled-name='__sanitizer_syscall_pre_impl_keyctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2361' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_keyctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1101' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_keyctl(long int, long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_keyctl' mangled-name='__sanitizer_syscall_post_impl_keyctl' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2363' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_keyctl'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ioprio_set(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ioprio_set' mangled-name='__sanitizer_syscall_pre_impl_ioprio_set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2366' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ioprio_set'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ioprio_set(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ioprio_set' mangled-name='__sanitizer_syscall_post_impl_ioprio_set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ioprio_set'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ioprio_get(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ioprio_get' mangled-name='__sanitizer_syscall_pre_impl_ioprio_get' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2370' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ioprio_get'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ioprio_get(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ioprio_get' mangled-name='__sanitizer_syscall_post_impl_ioprio_get' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2372' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ioprio_get'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_set_mempolicy(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_set_mempolicy' mangled-name='__sanitizer_syscall_pre_impl_set_mempolicy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2374' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_set_mempolicy'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_set_mempolicy(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_set_mempolicy' mangled-name='__sanitizer_syscall_post_impl_set_mempolicy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2376' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_set_mempolicy'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_migrate_pages(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_migrate_pages' mangled-name='__sanitizer_syscall_pre_impl_migrate_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2382' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_migrate_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_migrate_pages(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_migrate_pages' mangled-name='__sanitizer_syscall_post_impl_migrate_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2388' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_migrate_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_move_pages(long int, long int, void**, const int*, int*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_move_pages' mangled-name='__sanitizer_syscall_pre_impl_move_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2391' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_move_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2391' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2391' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2391' column='1'/>
      <!-- parameter of type 'const int*' -->
      <parameter type-id='6d60f45d' name='nodes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2392' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2392' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2392' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_move_pages(long int, long int, long int, void**, const int*, int*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_move_pages' mangled-name='__sanitizer_syscall_post_impl_move_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_move_pages'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2397' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2397' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2397' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='pages' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2397' column='1'/>
      <!-- parameter of type 'const int*' -->
      <parameter type-id='6d60f45d' name='nodes' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2398' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2398' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2398' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mbind(long int, long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mbind' mangled-name='__sanitizer_syscall_pre_impl_mbind' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mbind'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='start' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='nmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxnode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2404' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2405' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mbind(long int, long int, long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mbind' mangled-name='__sanitizer_syscall_post_impl_mbind' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mbind'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='start' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='nmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2407' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxnode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2408' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2408' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_get_mempolicy(void*, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_get_mempolicy' mangled-name='__sanitizer_syscall_pre_impl_get_mempolicy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2414' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_get_mempolicy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2414' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='nmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2414' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxnode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2414' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2414' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2415' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_get_mempolicy(long int, void*, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_get_mempolicy' mangled-name='__sanitizer_syscall_post_impl_get_mempolicy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2417' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_get_mempolicy'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2417' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='policy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2417' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='nmask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2417' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='maxnode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2417' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2418' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2418' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_inotify_init() -->
    <function-decl name='__sanitizer_syscall_pre_impl_inotify_init' mangled-name='__sanitizer_syscall_pre_impl_inotify_init' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2425' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_inotify_init'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_inotify_init(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_inotify_init' mangled-name='__sanitizer_syscall_post_impl_inotify_init' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2427' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_inotify_init'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_inotify_init1(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_inotify_init1' mangled-name='__sanitizer_syscall_pre_impl_inotify_init1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_inotify_init1'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_inotify_init1(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_inotify_init1' mangled-name='__sanitizer_syscall_post_impl_inotify_init1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_inotify_init1'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_inotify_add_watch(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_inotify_add_watch' mangled-name='__sanitizer_syscall_pre_impl_inotify_add_watch' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2433' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_inotify_add_watch'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_inotify_add_watch(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_inotify_add_watch' mangled-name='__sanitizer_syscall_post_impl_inotify_add_watch' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2438' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_inotify_add_watch'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_inotify_rm_watch(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_inotify_rm_watch' mangled-name='__sanitizer_syscall_pre_impl_inotify_rm_watch' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2441' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_inotify_rm_watch'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_inotify_rm_watch(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_inotify_rm_watch' mangled-name='__sanitizer_syscall_post_impl_inotify_rm_watch' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2443' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_inotify_rm_watch'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_spu_run(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_spu_run' mangled-name='__sanitizer_syscall_pre_impl_spu_run' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_spu_run'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_spu_run(long int, long int, unsigned int*, unsigned int*) -->
    <function-decl name='__sanitizer_syscall_post_impl_spu_run' mangled-name='__sanitizer_syscall_post_impl_spu_run' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_spu_run'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2447' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2447' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='unpc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2447' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='ustatus' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2447' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_spu_create(void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_spu_create' mangled-name='__sanitizer_syscall_pre_impl_spu_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2454' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_spu_create'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2454' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2454' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2454' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2454' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_spu_create(long int, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_spu_create' mangled-name='__sanitizer_syscall_post_impl_spu_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_spu_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msqid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msgp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgsz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgtyp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgflg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2074' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mknodat(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mknodat' mangled-name='__sanitizer_syscall_pre_impl_mknodat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2462' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mknodat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mknodat(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mknodat' mangled-name='__sanitizer_syscall_post_impl_mknodat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2468' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mknodat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mkdirat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mkdirat' mangled-name='__sanitizer_syscall_pre_impl_mkdirat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2471' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mkdirat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mkdirat(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mkdirat' mangled-name='__sanitizer_syscall_post_impl_mkdirat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2477' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mkdirat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_unlinkat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_unlinkat' mangled-name='__sanitizer_syscall_pre_impl_unlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2479' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_unlinkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_unlinkat(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_unlinkat' mangled-name='__sanitizer_syscall_post_impl_unlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2485' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_unlinkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_symlinkat(void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_symlinkat' mangled-name='__sanitizer_syscall_pre_impl_symlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2487' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_symlinkat'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='umod' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uargs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='666' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_symlinkat(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_symlinkat' mangled-name='__sanitizer_syscall_post_impl_symlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2494' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_symlinkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_linkat(long int, void*, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_linkat' mangled-name='__sanitizer_syscall_pre_impl_linkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2497' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_linkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='olddfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2497' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oldname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2497' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='newdfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2497' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='newname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2498' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2498' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_linkat(long int, long int, void*, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_linkat' mangled-name='__sanitizer_syscall_post_impl_linkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2505' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_linkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2505' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='olddfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2505' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oldname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2505' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='newdfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2505' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='newname' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2506' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2506' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_renameat(long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_renameat' mangled-name='__sanitizer_syscall_pre_impl_renameat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2508' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_renameat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='629' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_renameat(long int, long int, void*, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_renameat' mangled-name='__sanitizer_syscall_post_impl_renameat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2516' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_renameat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='631' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ru' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='632' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_futimesat(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_futimesat' mangled-name='__sanitizer_syscall_pre_impl_futimesat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2519' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_futimesat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_futimesat(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_futimesat' mangled-name='__sanitizer_syscall_post_impl_futimesat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2525' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_futimesat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_faccessat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_faccessat' mangled-name='__sanitizer_syscall_pre_impl_faccessat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2532' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_faccessat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_faccessat(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_faccessat' mangled-name='__sanitizer_syscall_post_impl_faccessat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2538' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_faccessat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchmodat(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchmodat' mangled-name='__sanitizer_syscall_pre_impl_fchmodat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2540' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchmodat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchmodat(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchmodat' mangled-name='__sanitizer_syscall_post_impl_fchmodat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2546' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchmodat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fchownat(long int, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fchownat' mangled-name='__sanitizer_syscall_pre_impl_fchownat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2548' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fchownat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msqid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msgp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgsz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgtyp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2073' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgflg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2074' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fchownat(long int, long int, void*, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fchownat' mangled-name='__sanitizer_syscall_post_impl_fchownat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2555' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fchownat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msqid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msgp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgsz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgtyp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2076' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='msgflg' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2077' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_openat(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_openat' mangled-name='__sanitizer_syscall_pre_impl_openat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2558' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_openat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_openat(long int, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_openat' mangled-name='__sanitizer_syscall_post_impl_openat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2564' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_openat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='count' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pos' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_newfstatat(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_newfstatat' mangled-name='__sanitizer_syscall_pre_impl_newfstatat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2567' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_newfstatat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_newfstatat(long int, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_newfstatat' mangled-name='__sanitizer_syscall_post_impl_newfstatat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2574' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_newfstatat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1031' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fstatat64(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_fstatat64' mangled-name='__sanitizer_syscall_pre_impl_fstatat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2581' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fstatat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fstatat64(long int, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fstatat64' mangled-name='__sanitizer_syscall_post_impl_fstatat64' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2588' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fstatat64'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1031' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_readlinkat(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_readlinkat' mangled-name='__sanitizer_syscall_pre_impl_readlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2595' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_readlinkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_readlinkat(long int, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_readlinkat' mangled-name='__sanitizer_syscall_post_impl_readlinkat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2600' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_readlinkat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1031' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_utimensat(long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_utimensat' mangled-name='__sanitizer_syscall_pre_impl_utimensat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2608' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_utimensat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='681' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_utimensat(long int, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_utimensat' mangled-name='__sanitizer_syscall_post_impl_utimensat' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2615' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_utimensat'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1030' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='size' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1031' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_unshare(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_unshare' mangled-name='__sanitizer_syscall_pre_impl_unshare' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2622' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_unshare'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_unshare(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_unshare' mangled-name='__sanitizer_syscall_post_impl_unshare' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2624' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_unshare'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_splice(long int, void*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_splice' mangled-name='__sanitizer_syscall_pre_impl_splice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2626' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_splice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd_in' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2626' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='off_in' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2626' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd_out' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2626' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='off_out' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2626' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2627' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2627' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_splice(long int, long int, void*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_splice' mangled-name='__sanitizer_syscall_post_impl_splice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2629' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_splice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd_in' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='off_in' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2629' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd_out' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2629' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='off_out' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2630' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2630' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2630' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_vmsplice(long int, const __sanitizer::__sanitizer_iovec*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_vmsplice' mangled-name='__sanitizer_syscall_pre_impl_vmsplice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2637' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_vmsplice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2637' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2637' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2637' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2638' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_vmsplice(long int, long int, const __sanitizer::__sanitizer_iovec*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_vmsplice' mangled-name='__sanitizer_syscall_post_impl_vmsplice' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2640' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_vmsplice'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2640' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2640' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='iov' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2640' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2641' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2641' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_tee(long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_tee' mangled-name='__sanitizer_syscall_pre_impl_tee' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2647' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_tee'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='351' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_tee(long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_tee' mangled-name='__sanitizer_syscall_post_impl_tee' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_tee'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1100' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1101' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_get_robust_list(long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_get_robust_list' mangled-name='__sanitizer_syscall_pre_impl_get_robust_list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2651' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_get_robust_list'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tz' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_get_robust_list(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_get_robust_list' mangled-name='__sanitizer_syscall_post_impl_get_robust_list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2653' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_get_robust_list'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_set_robust_list(void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_set_robust_list' mangled-name='__sanitizer_syscall_pre_impl_set_robust_list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2656' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_set_robust_list'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='691' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_set_robust_list(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_set_robust_list' mangled-name='__sanitizer_syscall_post_impl_set_robust_list' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2658' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_set_robust_list'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_getcpu(void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_getcpu' mangled-name='__sanitizer_syscall_pre_impl_getcpu' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2660' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_getcpu'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='292' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_getcpu(long int, void*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_getcpu' mangled-name='__sanitizer_syscall_post_impl_getcpu' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2662' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_getcpu'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ruid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='euid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='suid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='294' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_signalfd(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_signalfd' mangled-name='__sanitizer_syscall_pre_impl_signalfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2670' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_signalfd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_signalfd(long int, long int, kernel_sigset_t*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_signalfd' mangled-name='__sanitizer_syscall_post_impl_signalfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2672' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_signalfd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2672' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ufd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2672' column='1'/>
      <!-- parameter of type 'kernel_sigset_t*' -->
      <parameter type-id='c0d5d369' name='user_mask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2672' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sizemask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2673' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_signalfd4(long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_signalfd4' mangled-name='__sanitizer_syscall_pre_impl_signalfd4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2679' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_signalfd4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='filename' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='mode' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1174' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_signalfd4(long int, long int, kernel_sigset_t*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_signalfd4' mangled-name='__sanitizer_syscall_post_impl_signalfd4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2681' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_signalfd4'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='ufd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2681' column='1'/>
      <!-- parameter of type 'kernel_sigset_t*' -->
      <parameter type-id='c0d5d369' name='user_mask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2681' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sizemask' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2682' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2682' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timerfd_create(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timerfd_create' mangled-name='__sanitizer_syscall_pre_impl_timerfd_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2688' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timerfd_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timerfd_create(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_timerfd_create' mangled-name='__sanitizer_syscall_post_impl_timerfd_create' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2690' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timerfd_create'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timerfd_settime(long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timerfd_settime' mangled-name='__sanitizer_syscall_pre_impl_timerfd_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2692' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timerfd_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='how' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='set' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='oset' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='420' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timerfd_settime(long int, long int, long int, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_timerfd_settime' mangled-name='__sanitizer_syscall_post_impl_timerfd_settime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2697' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timerfd_settime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='timer_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='472' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_setting' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='473' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_timerfd_gettime(long int, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_timerfd_gettime' mangled-name='__sanitizer_syscall_pre_impl_timerfd_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2704' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_timerfd_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_timerfd_gettime(long int, long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_timerfd_gettime' mangled-name='__sanitizer_syscall_post_impl_timerfd_gettime' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2706' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_timerfd_gettime'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='which' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='value' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='429' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_eventfd(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_eventfd' mangled-name='__sanitizer_syscall_pre_impl_eventfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2712' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_eventfd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_eventfd(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_eventfd' mangled-name='__sanitizer_syscall_post_impl_eventfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2714' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_eventfd'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_eventfd2(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_eventfd2' mangled-name='__sanitizer_syscall_pre_impl_eventfd2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2716' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_eventfd2'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_eventfd2(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_eventfd2' mangled-name='__sanitizer_syscall_post_impl_eventfd2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2718' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_eventfd2'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_old_readdir(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_old_readdir' mangled-name='__sanitizer_syscall_pre_impl_old_readdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2720' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_old_readdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_old_readdir(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_old_readdir' mangled-name='__sanitizer_syscall_post_impl_old_readdir' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2722' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_old_readdir'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_pselect6(long int, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_pselect6' mangled-name='__sanitizer_syscall_pre_impl_pselect6' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2726' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_pselect6'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2726' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2726' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2727' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2728' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2728' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2729' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_pselect6(long int, long int, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, __sanitizer::__sanitizer___kernel_fd_set*, void*, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_pselect6' mangled-name='__sanitizer_syscall_post_impl_pselect6' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2731' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_pselect6'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2731' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2731' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2731' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2732' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer___kernel_fd_set*' -->
      <parameter type-id='bddfe521' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2733' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2733' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2734' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_ppoll(__sanitizer::__sanitizer_pollfd*, long int, void*, const kernel_sigset_t*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_ppoll' mangled-name='__sanitizer_syscall_pre_impl_ppoll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2743' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_ppoll'>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2743' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2743' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2743' column='1'/>
      <!-- parameter of type 'const kernel_sigset_t*' -->
      <parameter type-id='b81b7280' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2744' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2744' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_ppoll(long int, __sanitizer::__sanitizer_pollfd*, long int, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_ppoll' mangled-name='__sanitizer_syscall_post_impl_ppoll' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2748' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_ppoll'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2748' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='arg0' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2748' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg1' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2748' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg2' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2748' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg3' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2749' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='arg4' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2749' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_syncfs(long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_syncfs' mangled-name='__sanitizer_syscall_pre_impl_syncfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2756' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_syncfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_syncfs(long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_syncfs' mangled-name='__sanitizer_syscall_post_impl_syncfs' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2758' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_syncfs'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_perf_event_open(__sanitizer::__sanitizer_perf_event_attr*, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_perf_event_open' mangled-name='__sanitizer_syscall_pre_impl_perf_event_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2760' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_perf_event_open'>
      <!-- parameter of type '__sanitizer::__sanitizer_perf_event_attr*' -->
      <parameter type-id='b90aae48' name='attr_uptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2760' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cpu' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2761' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='group_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2761' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2761' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_perf_event_open(long int, __sanitizer::__sanitizer_perf_event_attr*, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_perf_event_open' mangled-name='__sanitizer_syscall_post_impl_perf_event_open' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2765' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_perf_event_open'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2765' column='1'/>
      <!-- parameter of type '__sanitizer::__sanitizer_perf_event_attr*' -->
      <parameter type-id='b90aae48' name='attr_uptr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2765' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2766' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='cpu' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2766' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='group_fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2766' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2766' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_mmap_pgoff(long int, long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_mmap_pgoff' mangled-name='__sanitizer_syscall_pre_impl_mmap_pgoff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2768' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_mmap_pgoff'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='old_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1103' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='new_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='1104' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_mmap_pgoff(long int, long int, long int, long int, long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_mmap_pgoff' mangled-name='__sanitizer_syscall_post_impl_mmap_pgoff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_mmap_pgoff'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='len' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='prot' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2771' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2772' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pgoff' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2772' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_old_mmap(void*) -->
    <function-decl name='__sanitizer_syscall_pre_impl_old_mmap' mangled-name='__sanitizer_syscall_pre_impl_old_mmap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2774' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_old_mmap'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_old_mmap(long int, void*) -->
    <function-decl name='__sanitizer_syscall_post_impl_old_mmap' mangled-name='__sanitizer_syscall_post_impl_old_mmap' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2776' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_old_mmap'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tloc' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='203' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_name_to_handle_at(long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_name_to_handle_at' mangled-name='__sanitizer_syscall_pre_impl_name_to_handle_at' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2778' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_name_to_handle_at'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uthese' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uinfo' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='705' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='uts' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='sigsetsize' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='706' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_name_to_handle_at(long int, long int, void*, void*, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_name_to_handle_at' mangled-name='__sanitizer_syscall_post_impl_name_to_handle_at' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2781' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_name_to_handle_at'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2781' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='dfd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2781' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='name' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2781' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='handle' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2782' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='mnt_id' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2782' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flag' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2782' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_open_by_handle_at(long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_open_by_handle_at' mangled-name='__sanitizer_syscall_pre_impl_open_by_handle_at' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2784' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_open_by_handle_at'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stat_addr' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='options' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='650' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_open_by_handle_at(long int, long int, void*, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_open_by_handle_at' mangled-name='__sanitizer_syscall_post_impl_open_by_handle_at' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2786' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_open_by_handle_at'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='entry' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='nr_segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='segments' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='611' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='612' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_setns(long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_setns' mangled-name='__sanitizer_syscall_pre_impl_setns' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2789' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_setns'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='seconds' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='266' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_setns(long int, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_setns' mangled-name='__sanitizer_syscall_post_impl_setns' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2791' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_setns'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='rgid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='egid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='335' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_process_vm_readv(long int, const __sanitizer::__sanitizer_iovec*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_process_vm_readv' mangled-name='__sanitizer_syscall_pre_impl_process_vm_readv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2793' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_process_vm_readv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2793' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='lvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2793' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='liovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='riovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2795' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_process_vm_readv(long int, long int, const __sanitizer::__sanitizer_iovec*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_process_vm_readv' mangled-name='__sanitizer_syscall_post_impl_process_vm_readv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2797' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_process_vm_readv'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2797' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2797' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='lvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2798' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='liovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2798' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='riovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_process_vm_writev(long int, const __sanitizer::__sanitizer_iovec*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_pre_impl_process_vm_writev' mangled-name='__sanitizer_syscall_pre_impl_process_vm_writev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2805' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_process_vm_writev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2793' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='lvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2793' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='liovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='riovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2794' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2795' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_process_vm_writev(long int, long int, const __sanitizer::__sanitizer_iovec*, long int, void*, long int, long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_process_vm_writev' mangled-name='__sanitizer_syscall_post_impl_process_vm_writev' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2809' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_process_vm_writev'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2797' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='pid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2797' column='1'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='c8966f9b' name='lvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2798' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='liovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2798' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rvec' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='riovcnt' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='flags' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2799' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_fork() -->
    <function-decl name='__sanitizer_syscall_pre_impl_fork' mangled-name='__sanitizer_syscall_pre_impl_fork' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2817' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_fork'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_fork(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_fork' mangled-name='__sanitizer_syscall_post_impl_fork' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2821' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_fork'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_pre_impl_vfork() -->
    <function-decl name='__sanitizer_syscall_pre_impl_vfork' mangled-name='__sanitizer_syscall_pre_impl_vfork' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2825' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_pre_impl_vfork'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __sanitizer_syscall_post_impl_vfork(long int) -->
    <function-decl name='__sanitizer_syscall_post_impl_vfork' mangled-name='__sanitizer_syscall_post_impl_vfork' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='2829' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__sanitizer_syscall_post_impl_vfork'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='bd54fe1a' name='res' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc' line='253' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- typedef long int __sanitizer::sptr -->
      <typedef-decl name='sptr' type-id='bd54fe1a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='57' column='1' id='d1291724'/>
      <!-- typedef unsigned short int __sanitizer::u16 -->
      <typedef-decl name='u16' type-id='8efea9e5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='67' column='1' id='cee094b7'/>
      <!-- typedef short int __sanitizer::s16 -->
      <typedef-decl name='s16' type-id='a2185560' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='71' column='1' id='4b5b4c25'/>
      <!-- typedef __sanitizer::u64 __sanitizer::OFF64_T -->
      <typedef-decl name='OFF64_T' type-id='ceed60aa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='85' column='1' id='29f1a393'/>
      <!-- class __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry> -->
      <class-decl name='GenericScopedLock&lt;__sanitizer::ThreadRegistry&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='85' column='1' id='dd65c438'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::ThreadRegistry* __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>::mu_ -->
          <var-decl name='mu_' type-id='08beeda9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='97' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>::GenericScopedLock(__sanitizer::ThreadRegistry*) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>*' -->
            <parameter type-id='a0d5050e' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::ThreadRegistry*' -->
            <parameter type-id='08beeda9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>::~GenericScopedLock(int) -->
          <function-decl name='~GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>*' -->
            <parameter type-id='a0d5050e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>::GenericScopedLock(const __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>&) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>*' -->
            <parameter type-id='a0d5050e' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedLock<__sanitizer::ThreadRegistry>&' -->
            <parameter type-id='e48565f3'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::GenericScopedLock<__tsan::Mutex> -->
      <class-decl name='GenericScopedLock&lt;__tsan::Mutex&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='85' column='1' id='b6676417'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::Mutex* __sanitizer::GenericScopedLock<__tsan::Mutex>::mu_ -->
          <var-decl name='mu_' type-id='ef6ac0da' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='97' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedLock<__tsan::Mutex>::GenericScopedLock(__tsan::Mutex*) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::Mutex>*' -->
            <parameter type-id='b22dff1f' is-artificial='yes'/>
            <!-- parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedLock<__tsan::Mutex>::~GenericScopedLock(int) -->
          <function-decl name='~GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::Mutex>*' -->
            <parameter type-id='b22dff1f' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedLock<__tsan::Mutex>::GenericScopedLock(const __sanitizer::GenericScopedLock<__tsan::Mutex>&) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::Mutex>*' -->
            <parameter type-id='b22dff1f' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedLock<__tsan::Mutex>&' -->
            <parameter type-id='a214b656'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_perf_event_attr -->
      <class-decl name='__sanitizer_perf_event_attr' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='79' column='1' id='65f60ffa'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned int __sanitizer::__sanitizer_perf_event_attr::type -->
          <var-decl name='type' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='80' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- unsigned int __sanitizer::__sanitizer_perf_event_attr::size -->
          <var-decl name='size' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='81' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_iocb -->
      <class-decl name='__sanitizer_iocb' size-in-bits='512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='103' column='1' id='e4aa4949'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_iocb::aio_data -->
          <var-decl name='aio_data' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='104' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::u32 __sanitizer::__sanitizer_iocb::aio_key_or_aio_reserved1 -->
          <var-decl name='aio_key_or_aio_reserved1' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='105' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- __sanitizer::u32 __sanitizer::__sanitizer_iocb::aio_reserved1_or_aio_key -->
          <var-decl name='aio_reserved1_or_aio_key' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='106' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::u16 __sanitizer::__sanitizer_iocb::aio_lio_opcode -->
          <var-decl name='aio_lio_opcode' type-id='cee094b7' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='107' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='144'>
          <!-- __sanitizer::s16 __sanitizer::__sanitizer_iocb::aio_reqprio -->
          <var-decl name='aio_reqprio' type-id='4b5b4c25' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='108' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- __sanitizer::u32 __sanitizer::__sanitizer_iocb::aio_fildes -->
          <var-decl name='aio_fildes' type-id='3ae5bbe9' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='109' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_iocb::aio_buf -->
          <var-decl name='aio_buf' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='110' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_iocb::aio_nbytes -->
          <var-decl name='aio_nbytes' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='111' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __sanitizer::s64 __sanitizer::__sanitizer_iocb::aio_offset -->
          <var-decl name='aio_offset' type-id='475d8470' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='112' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_iocb::aio_reserved2 -->
          <var-decl name='aio_reserved2' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='113' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_iocb::aio_reserved3 -->
          <var-decl name='aio_reserved3' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='114' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_io_event -->
      <class-decl name='__sanitizer_io_event' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='117' column='1' id='d32134cf'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_io_event::data -->
          <var-decl name='data' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='118' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_io_event::obj -->
          <var-decl name='obj' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='119' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_io_event::res -->
          <var-decl name='res' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='120' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::u64 __sanitizer::__sanitizer_io_event::res2 -->
          <var-decl name='res2' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='121' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer___sysctl_args -->
      <class-decl name='__sanitizer___sysctl_args' size-in-bits='640' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='129' column='1' id='c8641710'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int* __sanitizer::__sanitizer___sysctl_args::name -->
          <var-decl name='name' type-id='7292109c' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='130' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- int __sanitizer::__sanitizer___sysctl_args::nlen -->
          <var-decl name='nlen' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='131' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- void* __sanitizer::__sanitizer___sysctl_args::oldval -->
          <var-decl name='oldval' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='132' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr* __sanitizer::__sanitizer___sysctl_args::oldlenp -->
          <var-decl name='oldlenp' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='133' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- void* __sanitizer::__sanitizer___sysctl_args::newval -->
          <var-decl name='newval' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='134' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer___sysctl_args::newlen -->
          <var-decl name='newlen' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='135' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- unsigned long int __sanitizer::__sanitizer___sysctl_args::___unused[4] -->
          <var-decl name='___unused' type-id='f46d9f4d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='136' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_iovec -->
      <class-decl name='__sanitizer_iovec' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='246' column='1' id='3fd74eaa'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- void* __sanitizer::__sanitizer_iovec::iov_base -->
          <var-decl name='iov_base' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='247' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer_iovec::iov_len -->
          <var-decl name='iov_len' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='248' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_ether_addr -->
      <class-decl name='__sanitizer_ether_addr' size-in-bits='48' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='257' column='1' id='ed7ea166'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned char __sanitizer::__sanitizer_ether_addr::octet[6] -->
          <var-decl name='octet' type-id='4cfa781a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='258' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_tm -->
      <class-decl name='__sanitizer_tm' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='261' column='1' id='b4997f07'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int __sanitizer::__sanitizer_tm::tm_sec -->
          <var-decl name='tm_sec' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='262' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- int __sanitizer::__sanitizer_tm::tm_min -->
          <var-decl name='tm_min' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='263' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- int __sanitizer::__sanitizer_tm::tm_hour -->
          <var-decl name='tm_hour' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='264' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- int __sanitizer::__sanitizer_tm::tm_mday -->
          <var-decl name='tm_mday' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='265' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- int __sanitizer::__sanitizer_tm::tm_mon -->
          <var-decl name='tm_mon' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='266' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- int __sanitizer::__sanitizer_tm::tm_year -->
          <var-decl name='tm_year' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='267' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- int __sanitizer::__sanitizer_tm::tm_wday -->
          <var-decl name='tm_wday' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='268' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='224'>
          <!-- int __sanitizer::__sanitizer_tm::tm_yday -->
          <var-decl name='tm_yday' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='269' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- int __sanitizer::__sanitizer_tm::tm_isdst -->
          <var-decl name='tm_isdst' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='270' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- long int __sanitizer::__sanitizer_tm::tm_gmtoff -->
          <var-decl name='tm_gmtoff' type-id='bd54fe1a' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='271' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- const char* __sanitizer::__sanitizer_tm::tm_zone -->
          <var-decl name='tm_zone' type-id='80f4b756' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='272' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_mntent -->
      <class-decl name='__sanitizer_mntent' size-in-bits='320' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='276' column='1' id='0b02c0a6'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::__sanitizer_mntent::mnt_fsname -->
          <var-decl name='mnt_fsname' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='277' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* __sanitizer::__sanitizer_mntent::mnt_dir -->
          <var-decl name='mnt_dir' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='278' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- char* __sanitizer::__sanitizer_mntent::mnt_type -->
          <var-decl name='mnt_type' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='279' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* __sanitizer::__sanitizer_mntent::mnt_opts -->
          <var-decl name='mnt_opts' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='280' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- int __sanitizer::__sanitizer_mntent::mnt_freq -->
          <var-decl name='mnt_freq' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='281' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='288'>
          <!-- int __sanitizer::__sanitizer_mntent::mnt_passno -->
          <var-decl name='mnt_passno' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='282' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_msghdr -->
      <class-decl name='__sanitizer_msghdr' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='302' column='1' id='3f07df19'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- void* __sanitizer::__sanitizer_msghdr::msg_name -->
          <var-decl name='msg_name' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='303' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- unsigned int __sanitizer::__sanitizer_msghdr::msg_namelen -->
          <var-decl name='msg_namelen' type-id='f0981eeb' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='304' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::__sanitizer_iovec* __sanitizer::__sanitizer_msghdr::msg_iov -->
          <var-decl name='msg_iov' type-id='36c19aa8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='305' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer_msghdr::msg_iovlen -->
          <var-decl name='msg_iovlen' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='306' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- void* __sanitizer::__sanitizer_msghdr::msg_control -->
          <var-decl name='msg_control' type-id='eaa32e2f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='307' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer_msghdr::msg_controllen -->
          <var-decl name='msg_controllen' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='308' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- int __sanitizer::__sanitizer_msghdr::msg_flags -->
          <var-decl name='msg_flags' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='309' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_dirent -->
      <class-decl name='__sanitizer_dirent' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='326' column='1' id='6e0e7838'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- long long unsigned int __sanitizer::__sanitizer_dirent::d_ino -->
          <var-decl name='d_ino' type-id='3a47d82b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='327' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- long long unsigned int __sanitizer::__sanitizer_dirent::d_off -->
          <var-decl name='d_off' type-id='3a47d82b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='328' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned short int __sanitizer::__sanitizer_dirent::d_reclen -->
          <var-decl name='d_reclen' type-id='8efea9e5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='329' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_dirent64 -->
      <class-decl name='__sanitizer_dirent64' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='342' column='1' id='41423b9a'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- long long unsigned int __sanitizer::__sanitizer_dirent64::d_ino -->
          <var-decl name='d_ino' type-id='3a47d82b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='343' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- long long unsigned int __sanitizer::__sanitizer_dirent64::d_off -->
          <var-decl name='d_off' type-id='3a47d82b' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='344' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- unsigned short int __sanitizer::__sanitizer_dirent64::d_reclen -->
          <var-decl name='d_reclen' type-id='8efea9e5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='345' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef long int __sanitizer::__sanitizer_clock_t -->
      <typedef-decl name='__sanitizer_clock_t' type-id='bd54fe1a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='353' column='1' id='5c8c9d58'/>
      <!-- typedef unsigned int __sanitizer::__sanitizer___kernel_gid_t -->
      <typedef-decl name='__sanitizer___kernel_gid_t' type-id='f0981eeb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='359' column='1' id='87d14f40'/>
      <!-- typedef long int __sanitizer::__sanitizer___kernel_off_t -->
      <typedef-decl name='__sanitizer___kernel_off_t' type-id='bd54fe1a' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='367' column='1' id='9d293059'/>
      <!-- typedef unsigned short int __sanitizer::__sanitizer___kernel_old_uid_t -->
      <typedef-decl name='__sanitizer___kernel_old_uid_t' type-id='8efea9e5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='374' column='1' id='e0789dcc'/>
      <!-- typedef unsigned short int __sanitizer::__sanitizer___kernel_old_gid_t -->
      <typedef-decl name='__sanitizer___kernel_old_gid_t' type-id='8efea9e5' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='375' column='1' id='78f882ea'/>
      <!-- typedef long long int __sanitizer::__sanitizer___kernel_loff_t -->
      <typedef-decl name='__sanitizer___kernel_loff_t' type-id='1eb56b1e' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='378' column='1' id='034f6b6b'/>
      <!-- struct __sanitizer::__sanitizer___kernel_fd_set -->
      <class-decl name='__sanitizer___kernel_fd_set' size-in-bits='1024' is-struct='yes' naming-typedef-id='777073a0' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='379' column='1' id='7d7e1959'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned long int __sanitizer::__sanitizer___kernel_fd_set::fds_bits[16] -->
          <var-decl name='fds_bits' type-id='d2baa450' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='380' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef __sanitizer::__sanitizer___kernel_fd_set __sanitizer::__sanitizer___kernel_fd_set -->
      <typedef-decl name='__sanitizer___kernel_fd_set' type-id='7d7e1959' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='381' column='1' id='777073a0'/>
      <!-- struct __sanitizer::__sanitizer_sigset_t -->
      <class-decl name='__sanitizer_sigset_t' size-in-bits='1024' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='397' column='1' id='0735853c'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- unsigned long int __sanitizer::__sanitizer_sigset_t::val[16] -->
          <var-decl name='val' type-id='d2baa450' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='399' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_hostent -->
      <class-decl name='__sanitizer_hostent' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='471' column='1' id='7a257f83'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- char* __sanitizer::__sanitizer_hostent::h_name -->
          <var-decl name='h_name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='472' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char** __sanitizer::__sanitizer_hostent::h_aliases -->
          <var-decl name='h_aliases' type-id='9b23c9ad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='473' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- int __sanitizer::__sanitizer_hostent::h_addrtype -->
          <var-decl name='h_addrtype' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='474' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- int __sanitizer::__sanitizer_hostent::h_length -->
          <var-decl name='h_length' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='475' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char** __sanitizer::__sanitizer_hostent::h_addr_list -->
          <var-decl name='h_addr_list' type-id='9b23c9ad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='476' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __sanitizer::__sanitizer_pollfd -->
      <class-decl name='__sanitizer_pollfd' size-in-bits='64' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='479' column='1' id='41f84d7b'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int __sanitizer::__sanitizer_pollfd::fd -->
          <var-decl name='fd' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='480' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- short int __sanitizer::__sanitizer_pollfd::events -->
          <var-decl name='events' type-id='a2185560' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='481' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='48'>
          <!-- short int __sanitizer::__sanitizer_pollfd::revents -->
          <var-decl name='revents' type-id='a2185560' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='482' column='1'/>
        </data-member>
      </class-decl>
      <!-- typedef unsigned long int __sanitizer::__sanitizer_nfds_t -->
      <typedef-decl name='__sanitizer_nfds_t' type-id='7359adad' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='488' column='1' id='246ed63d'/>
      <!-- struct __sanitizer::__sanitizer_wordexp_t -->
      <class-decl name='__sanitizer_wordexp_t' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='511' column='1' id='7c9f2ec8'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer_wordexp_t::we_wordc -->
          <var-decl name='we_wordc' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='512' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char** __sanitizer::__sanitizer_wordexp_t::we_wordv -->
          <var-decl name='we_wordv' type-id='9b23c9ad' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='513' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __sanitizer::__sanitizer_wordexp_t::we_offs -->
          <var-decl name='we_offs' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h' line='514' column='1'/>
        </data-member>
      </class-decl>
      <!-- void __sanitizer::atomic_store<__sanitizer::atomic_uint32_t>(volatile __sanitizer::atomic_uint32_t*, __sanitizer::atomic_uint32_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_store&lt;__sanitizer::atomic_uint32_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint32_t*' -->
        <parameter type-id='e647f8e6'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint32_t::Type' -->
        <parameter type-id='9c64597f'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint32_t>(volatile __sanitizer::atomic_uint32_t*, __sanitizer::atomic_uint32_t::Type*, __sanitizer::atomic_uint32_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_compare_exchange_strong&lt;__sanitizer::atomic_uint32_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint32_t*' -->
        <parameter type-id='e647f8e6'/>
        <!-- parameter of type '__sanitizer::atomic_uint32_t::Type*' -->
        <parameter type-id='7ac9e8fc'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint32_t::Type' -->
        <parameter type-id='9c64597f'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- int __sanitizer::Min<int>(int, int) -->
      <function-decl name='Min&lt;int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- int -->
        <return type-id='95e97e5e'/>
      </function-decl>
      <!-- unsigned int __sanitizer::Min<unsigned int>(unsigned int, unsigned int) -->
      <function-decl name='Min&lt;unsigned int&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned int' -->
        <parameter type-id='f0981eeb'/>
        <!-- parameter of type 'unsigned int' -->
        <parameter type-id='f0981eeb'/>
        <!-- unsigned int -->
        <return type-id='f0981eeb'/>
      </function-decl>
      <!-- void __sanitizer::Swap<ioctl_desc>(ioctl_desc&, ioctl_desc&) -->
      <function-decl name='Swap&lt;ioctl_desc&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'ioctl_desc&' -->
        <parameter type-id='79101378'/>
        <!-- parameter of type 'ioctl_desc&' -->
        <parameter type-id='79101378'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- int __sanitizer::ToLower(int) -->
      <function-decl name='ToLower' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='306' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- int -->
        <return type-id='95e97e5e'/>
      </function-decl>
    </namespace-decl>
    <!-- int pthread_attr_init(void*) -->
    <function-decl name='pthread_attr_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_attr_destroy(void*) -->
    <function-decl name='pthread_attr_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_key_create(unsigned int*, void (void*)*) -->
    <function-decl name='pthread_key_create' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3'/>
      <!-- parameter of type 'void (void*)*' -->
      <parameter type-id='b7f9d8e6'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_setspecific(unsigned int, void*) -->
    <function-decl name='pthread_setspecific' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_mutexattr_gettype(void*, int*) -->
    <function-decl name='pthread_mutexattr_gettype' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='sval' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_yield() -->
    <function-decl name='pthread_yield' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int pthread_sigmask(int, const __sanitizer::__sanitizer_sigset_t*, __sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='pthread_sigmask' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='c4e98a23'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* pthread_self() -->
    <function-decl name='pthread_self' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int fileno_unlocked(void*) -->
    <function-decl name='fileno_unlocked' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __libc_malloc(__sanitizer::uptr) -->
    <function-decl name='__libc_malloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __libc_calloc(__sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='__libc_calloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __libc_realloc(void*, __sanitizer::uptr) -->
    <function-decl name='__libc_realloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int mallopt(int, int) -->
    <function-decl name='mallopt' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- unsigned int __interceptor_sleep(unsigned int) -->
    <function-decl name='__interceptor_sleep' mangled-name='__interceptor_sleep' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='238' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sleep'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb'/>
      <!-- unsigned int -->
      <return type-id='f0981eeb'/>
    </function-decl>
    <!-- int __interceptor_usleep(long_t) -->
    <function-decl name='__interceptor_usleep' mangled-name='__interceptor_usleep' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='245' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_usleep'>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='usec' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='245' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_nanosleep(void*, void*) -->
    <function-decl name='__interceptor_nanosleep' mangled-name='__interceptor_nanosleep' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='252' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_nanosleep'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __interceptor_dlopen(const char*, int) -->
    <function-decl name='__interceptor_dlopen' mangled-name='__interceptor_dlopen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='259' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_dlopen'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='filename' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='259' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flag' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='259' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_dlclose(void*) -->
    <function-decl name='__interceptor_dlclose' mangled-name='__interceptor_dlclose' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='270' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_dlclose'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_atexit(void ()*) -->
    <function-decl name='__interceptor_atexit' mangled-name='__interceptor_atexit' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='342' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_atexit'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='953b12f8'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_on_exit(void (int, void*)*, void*) -->
    <function-decl name='__interceptor_on_exit' mangled-name='__interceptor_on_exit' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='349' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_on_exit'>
      <!-- parameter of type 'void (int, void*)*' -->
      <parameter type-id='f1eb0faf' name='f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='349' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='349' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___cxa_atexit(void (void*)*, void*, void*) -->
    <function-decl name='__interceptor___cxa_atexit' mangled-name='__interceptor___cxa_atexit' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___cxa_atexit'>
      <!-- parameter of type 'void (void*)*' -->
      <parameter type-id='b7f9d8e6' name='f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dso' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='356' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_setjmp(void*) -->
    <function-decl name='__interceptor_setjmp' mangled-name='__interceptor_setjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_setjmp'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor__setjmp(void*) -->
    <function-decl name='__interceptor__setjmp' mangled-name='__interceptor__setjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor__setjmp'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigsetjmp(void*) -->
    <function-decl name='__interceptor_sigsetjmp' mangled-name='__interceptor_sigsetjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='438' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigsetjmp'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___sigsetjmp(void*) -->
    <function-decl name='__interceptor___sigsetjmp' mangled-name='__interceptor___sigsetjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___sigsetjmp'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __interceptor_longjmp(__sanitizer::uptr*, int) -->
    <function-decl name='__interceptor_longjmp' mangled-name='__interceptor_longjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_longjmp'>
      <!-- parameter of type '__sanitizer::uptr*' -->
      <parameter type-id='60a62555' name='env' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='val' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __interceptor_siglongjmp(__sanitizer::uptr*, int) -->
    <function-decl name='__interceptor_siglongjmp' mangled-name='__interceptor_siglongjmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_siglongjmp'>
      <!-- parameter of type '__sanitizer::uptr*' -->
      <parameter type-id='60a62555' name='env' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='val' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='467' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void* __interceptor_malloc(__sanitizer::uptr) -->
    <function-decl name='__interceptor_malloc' mangled-name='__interceptor_malloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='475' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_malloc'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor___libc_memalign(__sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='__interceptor___libc_memalign' mangled-name='__interceptor___libc_memalign' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='487' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___libc_memalign'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_calloc(__sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='__interceptor_calloc' mangled-name='__interceptor_calloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='492' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_calloc'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_realloc(void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_realloc' mangled-name='__interceptor_realloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_realloc'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='508' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void __interceptor_free(void*) -->
    <function-decl name='__interceptor_free' mangled-name='__interceptor_free' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='521' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_free'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __interceptor_cfree(void*) -->
    <function-decl name='__interceptor_cfree' mangled-name='__interceptor_cfree' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='531' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_cfree'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- __sanitizer::uptr __interceptor_malloc_usable_size(void*) -->
    <function-decl name='__interceptor_malloc_usable_size' mangled-name='__interceptor_malloc_usable_size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='541' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_malloc_usable_size'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='541' column='1'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-decl>
    <!-- void* operator new(__sanitizer::uptr) -->
    <function-decl name='operator new' mangled-name='_Znwm' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='559' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Znwm'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* operator new [](__sanitizer::uptr) -->
    <function-decl name='operator new []' mangled-name='_Znam' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='565' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Znam'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* operator new(__sanitizer::uptr, const std::nothrow_t&) -->
    <function-decl name='operator new' mangled-name='_ZnwmRKSt9nothrow_t' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='571' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZnwmRKSt9nothrow_t'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='577' column='1'/>
      <!-- parameter of type 'const std::nothrow_t&' -->
      <parameter type-id='5dfed0ad'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* operator new [](__sanitizer::uptr, const std::nothrow_t&) -->
    <function-decl name='operator new []' mangled-name='_ZnamRKSt9nothrow_t' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='577' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZnamRKSt9nothrow_t'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='577' column='1'/>
      <!-- parameter of type 'const std::nothrow_t&' -->
      <parameter type-id='5dfed0ad'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void operator delete(void*) -->
    <function-decl name='operator delete' mangled-name='_ZdlPv' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='591' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZdlPv'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void operator delete [](void*) -->
    <function-decl name='operator delete []' mangled-name='_ZdaPv' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='597' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZdaPv'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void operator delete(void*, const std::nothrow_t&) -->
    <function-decl name='operator delete' mangled-name='_ZdlPvRKSt9nothrow_t' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='603' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZdlPvRKSt9nothrow_t'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='609' column='1'/>
      <!-- parameter of type 'const std::nothrow_t&' -->
      <parameter type-id='5dfed0ad'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void operator delete [](void*, const std::nothrow_t&) -->
    <function-decl name='operator delete []' mangled-name='_ZdaPvRKSt9nothrow_t' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='609' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZdaPvRKSt9nothrow_t'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='609' column='1'/>
      <!-- parameter of type 'const std::nothrow_t&' -->
      <parameter type-id='5dfed0ad'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- __sanitizer::uptr __interceptor_strlen(const char*) -->
    <function-decl name='__interceptor_strlen' mangled-name='__interceptor_strlen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='613' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strlen'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-decl>
    <!-- void* __interceptor_memset(void*, int, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memset' mangled-name='__interceptor_memset' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='620' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memset'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_memcpy(void*, void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memcpy' mangled-name='__interceptor_memcpy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='626' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memcpy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_memcmp(void*, void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memcmp' mangled-name='__interceptor_memcmp' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='633' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memcmp'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __interceptor_memchr(void*, int, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memchr' mangled-name='__interceptor_memchr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='646' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memchr'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_memrchr(char*, int, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memrchr' mangled-name='__interceptor_memrchr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memrchr'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='n' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='654' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_memmove(void*, void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memmove' mangled-name='__interceptor_memmove' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='660' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memmove'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- char* __interceptor_strchr(char*, int) -->
    <function-decl name='__interceptor_strchr' mangled-name='__interceptor_strchr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='667' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strchr'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strchrnul(char*, int) -->
    <function-decl name='__interceptor_strchrnul' mangled-name='__interceptor_strchrnul' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='675' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strchrnul'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strrchr(char*, int) -->
    <function-decl name='__interceptor_strrchr' mangled-name='__interceptor_strrchr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strrchr'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='683' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strcpy(char*, const char*) -->
    <function-decl name='__interceptor_strcpy' mangled-name='__interceptor_strcpy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='689' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strcpy'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='689' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='689' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- char* __interceptor_strncpy(char*, char*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_strncpy' mangled-name='__interceptor_strncpy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strncpy'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='src' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='n' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='697' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- const char* __interceptor_strstr(const char*, const char*) -->
    <function-decl name='__interceptor_strstr' mangled-name='__interceptor_strstr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='705' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strstr'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- const char* -->
      <return type-id='80f4b756'/>
    </function-decl>
    <!-- char* __interceptor_strdup(const char*) -->
    <function-decl name='__interceptor_strdup' mangled-name='__interceptor_strdup' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='715' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_strdup'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='mangled' filepath='../../.././libsanitizer/libbacktrace/../../libiberty/cp-demangle.c' line='6039' column='1'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-decl>
    <!-- void* __interceptor_mmap(void*, long_t, int, int, int, unsigned int) -->
    <function-decl name='__interceptor_mmap' mangled-name='__interceptor_mmap' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mmap'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='prot' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='off' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='735' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_mmap64(void*, long_t, int, int, int, __sanitizer::u64) -->
    <function-decl name='__interceptor_mmap64' mangled-name='__interceptor_mmap64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mmap64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='prot' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa' name='off' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='749' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_munmap(void*, long_t) -->
    <function-decl name='__interceptor_munmap' mangled-name='__interceptor_munmap' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='763' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_munmap'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='763' column='1'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='763' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __interceptor_memalign(__sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='__interceptor_memalign' mangled-name='__interceptor_memalign' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='770' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_memalign'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_valloc(__sanitizer::uptr) -->
    <function-decl name='__interceptor_valloc' mangled-name='__interceptor_valloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='775' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_valloc'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_pvalloc(__sanitizer::uptr) -->
    <function-decl name='__interceptor_pvalloc' mangled-name='__interceptor_pvalloc' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pvalloc'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='780' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_posix_memalign(void**, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='__interceptor_posix_memalign' mangled-name='__interceptor_posix_memalign' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_posix_memalign'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='memptr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='align' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='786' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __cxa_guard_acquire(__sanitizer::atomic_uint32_t*) -->
    <function-decl name='__cxa_guard_acquire' mangled-name='__cxa_guard_acquire' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='793' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__cxa_guard_acquire'>
      <!-- parameter of type '__sanitizer::atomic_uint32_t*' -->
      <parameter type-id='73446da0' name='g' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='793' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __cxa_guard_release(__sanitizer::atomic_uint32_t*) -->
    <function-decl name='__cxa_guard_release' mangled-name='__cxa_guard_release' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='809' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__cxa_guard_release'>
      <!-- parameter of type '__sanitizer::atomic_uint32_t*' -->
      <parameter type-id='73446da0' name='g' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='815' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __cxa_guard_abort(__sanitizer::atomic_uint32_t*) -->
    <function-decl name='__cxa_guard_abort' mangled-name='__cxa_guard_abort' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='815' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__cxa_guard_abort'>
      <!-- parameter of type '__sanitizer::atomic_uint32_t*' -->
      <parameter type-id='73446da0' name='g' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='815' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __interceptor_pthread_create(void*, void*, void* (void*)*, void*) -->
    <function-decl name='__interceptor_pthread_create' mangled-name='__interceptor_pthread_create' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_create'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='th' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1'/>
      <!-- parameter of type 'void* (void*)*' -->
      <parameter type-id='5ad9edb6' name='callback' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='875' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_join(void*, void**) -->
    <function-decl name='__interceptor_pthread_join' mangled-name='__interceptor_pthread_join' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='904' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_join'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='th' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='904' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='ret' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='904' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_detach(void*) -->
    <function-decl name='__interceptor_pthread_detach' mangled-name='__interceptor_pthread_detach' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='914' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_detach'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_init(void*, void*) -->
    <function-decl name='__interceptor_pthread_mutex_init' mangled-name='__interceptor_pthread_mutex_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='924' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_destroy(void*) -->
    <function-decl name='__interceptor_pthread_mutex_destroy' mangled-name='__interceptor_pthread_mutex_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='940' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_trylock(void*) -->
    <function-decl name='__interceptor_pthread_mutex_trylock' mangled-name='__interceptor_pthread_mutex_trylock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='949' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_trylock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_mutex_timedlock(void*, void*) -->
    <function-decl name='__interceptor_pthread_mutex_timedlock' mangled-name='__interceptor_pthread_mutex_timedlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='959' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_mutex_timedlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_spin_init(void*, int) -->
    <function-decl name='__interceptor_pthread_spin_init' mangled-name='__interceptor_pthread_spin_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='968' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_spin_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tid' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_spin_destroy(void*) -->
    <function-decl name='__interceptor_pthread_spin_destroy' mangled-name='__interceptor_pthread_spin_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='977' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_spin_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_spin_lock(void*) -->
    <function-decl name='__interceptor_pthread_spin_lock' mangled-name='__interceptor_pthread_spin_lock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='986' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_spin_lock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_spin_trylock(void*) -->
    <function-decl name='__interceptor_pthread_spin_trylock' mangled-name='__interceptor_pthread_spin_trylock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='995' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_spin_trylock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_spin_unlock(void*) -->
    <function-decl name='__interceptor_pthread_spin_unlock' mangled-name='__interceptor_pthread_spin_unlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1004' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_spin_unlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_init(void*, void*) -->
    <function-decl name='__interceptor_pthread_rwlock_init' mangled-name='__interceptor_pthread_rwlock_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1011' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_destroy(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_destroy' mangled-name='__interceptor_pthread_rwlock_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1020' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_rdlock(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_rdlock' mangled-name='__interceptor_pthread_rwlock_rdlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1029' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_rdlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_tryrdlock(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_tryrdlock' mangled-name='__interceptor_pthread_rwlock_tryrdlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1038' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_tryrdlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_timedrdlock(void*, void*) -->
    <function-decl name='__interceptor_pthread_rwlock_timedrdlock' mangled-name='__interceptor_pthread_rwlock_timedrdlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1047' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_timedrdlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_wrlock(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_wrlock' mangled-name='__interceptor_pthread_rwlock_wrlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1056' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_wrlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_trywrlock(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_trywrlock' mangled-name='__interceptor_pthread_rwlock_trywrlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1065' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_trywrlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_timedwrlock(void*, void*) -->
    <function-decl name='__interceptor_pthread_rwlock_timedwrlock' mangled-name='__interceptor_pthread_rwlock_timedwrlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1074' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_timedwrlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_rwlock_unlock(void*) -->
    <function-decl name='__interceptor_pthread_rwlock_unlock' mangled-name='__interceptor_pthread_rwlock_unlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1083' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_rwlock_unlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_destroy(void*) -->
    <function-decl name='__interceptor_pthread_cond_destroy' mangled-name='__interceptor_pthread_cond_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1090' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_cond_timedwait(void*, void*, void*) -->
    <function-decl name='__interceptor_pthread_cond_timedwait' mangled-name='__interceptor_pthread_cond_timedwait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_cond_timedwait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='c' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='m' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='abstime' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1097' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_barrier_init(void*, void*, unsigned int) -->
    <function-decl name='__interceptor_pthread_barrier_init' mangled-name='__interceptor_pthread_barrier_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_barrier_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='b' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='a' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='count' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1107' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_barrier_destroy(void*) -->
    <function-decl name='__interceptor_pthread_barrier_destroy' mangled-name='__interceptor_pthread_barrier_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_barrier_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_barrier_wait(void*) -->
    <function-decl name='__interceptor_pthread_barrier_wait' mangled-name='__interceptor_pthread_barrier_wait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1121' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_barrier_wait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_once(void*, void ()*) -->
    <function-decl name='__interceptor_pthread_once' mangled-name='__interceptor_pthread_once' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1133' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_once'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='o' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1133' column='1'/>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='953b12f8' name='f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1133' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_init(void*, int, unsigned int) -->
    <function-decl name='__interceptor_sem_init' mangled-name='__interceptor_sem_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_init'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pshared' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='value' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1162' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_destroy(void*) -->
    <function-decl name='__interceptor_sem_destroy' mangled-name='__interceptor_sem_destroy' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1168' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_destroy'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_wait(void*) -->
    <function-decl name='__interceptor_sem_wait' mangled-name='__interceptor_sem_wait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1174' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_wait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_trywait(void*) -->
    <function-decl name='__interceptor_sem_trywait' mangled-name='__interceptor_sem_trywait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1183' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_trywait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_timedwait(void*, void*) -->
    <function-decl name='__interceptor_sem_timedwait' mangled-name='__interceptor_sem_timedwait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1192' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_timedwait'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_post(void*) -->
    <function-decl name='__interceptor_sem_post' mangled-name='__interceptor_sem_post' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_post'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sem_getvalue(void*, int*) -->
    <function-decl name='__interceptor_sem_getvalue' mangled-name='__interceptor_sem_getvalue' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sem_getvalue'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='sval' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1208' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___xstat(int, const char*, void*) -->
    <function-decl name='__interceptor___xstat' mangled-name='__interceptor___xstat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1217' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___xstat'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_stat(const char*, void*) -->
    <function-decl name='__interceptor_stat' mangled-name='__interceptor_stat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1222' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_stat'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___xstat64(int, const char*, void*) -->
    <function-decl name='__interceptor___xstat64' mangled-name='__interceptor___xstat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1227' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___xstat64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_stat64(const char*, void*) -->
    <function-decl name='__interceptor_stat64' mangled-name='__interceptor_stat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1232' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_stat64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___lxstat(int, const char*, void*) -->
    <function-decl name='__interceptor___lxstat' mangled-name='__interceptor___lxstat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1237' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___lxstat'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_lstat(const char*, void*) -->
    <function-decl name='__interceptor_lstat' mangled-name='__interceptor_lstat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1242' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lstat'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___lxstat64(int, const char*, void*) -->
    <function-decl name='__interceptor___lxstat64' mangled-name='__interceptor___lxstat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1247' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___lxstat64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1034' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_lstat64(const char*, void*) -->
    <function-decl name='__interceptor_lstat64' mangled-name='__interceptor_lstat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1252' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_lstat64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='1053' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___fxstat(int, int, void*) -->
    <function-decl name='__interceptor___fxstat' mangled-name='__interceptor___fxstat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1257' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___fxstat'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='shmid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstat(int, void*) -->
    <function-decl name='__interceptor_fstat' mangled-name='__interceptor_fstat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1264' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstat'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___fxstat64(int, int, void*) -->
    <function-decl name='__interceptor___fxstat64' mangled-name='__interceptor___fxstat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1271' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___fxstat64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='shmid' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cmd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2527' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fstat64(int, void*) -->
    <function-decl name='__interceptor_fstat64' mangled-name='__interceptor_fstat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1278' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fstat64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc' line='2416' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_open(const char*, int, int) -->
    <function-decl name='__interceptor_open' mangled-name='__interceptor_open' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1285' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_open'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_open64(const char*, int, int) -->
    <function-decl name='__interceptor_open64' mangled-name='__interceptor_open64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_open64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1293' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_creat(const char*, int) -->
    <function-decl name='__interceptor_creat' mangled-name='__interceptor_creat' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1301' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_creat'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_creat64(const char*, int) -->
    <function-decl name='__interceptor_creat64' mangled-name='__interceptor_creat64' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_creat64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1309' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_dup(int) -->
    <function-decl name='__interceptor_dup' mangled-name='__interceptor_dup' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1317' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_dup'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_dup2(int, int) -->
    <function-decl name='__interceptor_dup2' mangled-name='__interceptor_dup2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1325' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_dup2'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_dup3(int, int, int) -->
    <function-decl name='__interceptor_dup3' mangled-name='__interceptor_dup3' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_dup3'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='domain' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='protocol' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_eventfd(unsigned int, int) -->
    <function-decl name='__interceptor_eventfd' mangled-name='__interceptor_eventfd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1341' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_eventfd'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='initval' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1341' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1341' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_signalfd(int, void*, int) -->
    <function-decl name='__interceptor_signalfd' mangled-name='__interceptor_signalfd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_signalfd'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='mask' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1349' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_inotify_init(int) -->
    <function-decl name='__interceptor_inotify_init' mangled-name='__interceptor_inotify_init' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1359' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_inotify_init'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_inotify_init1(int) -->
    <function-decl name='__interceptor_inotify_init1' mangled-name='__interceptor_inotify_init1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1367' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_inotify_init1'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_socket(int, int, int) -->
    <function-decl name='__interceptor_socket' mangled-name='__interceptor_socket' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_socket'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='domain' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='protocol' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1375' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_socketpair(int, int, int, int*) -->
    <function-decl name='__interceptor_socketpair' mangled-name='__interceptor_socketpair' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_socketpair'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='domain' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='protocol' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1383' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_connect(int, void*, unsigned int) -->
    <function-decl name='__interceptor_connect' mangled-name='__interceptor_connect' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1391' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_connect'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='addrlen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_bind(int, void*, unsigned int) -->
    <function-decl name='__interceptor_bind' mangled-name='__interceptor_bind' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_bind'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='addrlen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1400' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_listen(int, int) -->
    <function-decl name='__interceptor_listen' mangled-name='__interceptor_listen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1408' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_listen'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_epoll_create(int) -->
    <function-decl name='__interceptor_epoll_create' mangled-name='__interceptor_epoll_create' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1416' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_epoll_create'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_epoll_create1(int) -->
    <function-decl name='__interceptor_epoll_create1' mangled-name='__interceptor_epoll_create1' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1424' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_epoll_create1'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_close(int) -->
    <function-decl name='__interceptor_close' mangled-name='__interceptor_close' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1432' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_close'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor___close(int) -->
    <function-decl name='__interceptor___close' mangled-name='__interceptor___close' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1439' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___close'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __interceptor___res_iclose(void*, bool) -->
    <function-decl name='__interceptor___res_iclose' mangled-name='__interceptor___res_iclose' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor___res_iclose'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='state' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1447' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='c894953d' name='free_addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1447' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __interceptor_pipe(int*) -->
    <function-decl name='__interceptor_pipe' mangled-name='__interceptor_pipe' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1458' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pipe'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pipe2(int*, int) -->
    <function-decl name='__interceptor_pipe2' mangled-name='__interceptor_pipe2' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1466' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pipe2'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='pipefd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1466' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1466' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- long_t __interceptor_send(int, void*, long_t, int) -->
    <function-decl name='__interceptor_send' mangled-name='__interceptor_send' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1474' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_send'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='len' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- typedef long_t -->
      <return type-id='6848d8c1'/>
    </function-decl>
    <!-- long_t __interceptor_sendmsg(int, void*, int) -->
    <function-decl name='__interceptor_sendmsg' mangled-name='__interceptor_sendmsg' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sendmsg'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1484' column='1'/>
      <!-- typedef long_t -->
      <return type-id='6848d8c1'/>
    </function-decl>
    <!-- long_t __interceptor_recv(int, void*, long_t, int) -->
    <function-decl name='__interceptor_recv' mangled-name='__interceptor_recv' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_recv'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='len' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1494' column='1'/>
      <!-- typedef long_t -->
      <return type-id='6848d8c1'/>
    </function-decl>
    <!-- int __interceptor_unlink(char*) -->
    <function-decl name='__interceptor_unlink' mangled-name='__interceptor_unlink' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1505' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_unlink'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1592' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __interceptor_fopen(char*, char*) -->
    <function-decl name='__interceptor_fopen' mangled-name='__interceptor_fopen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1512' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fopen'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1512' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1512' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- void* __interceptor_freopen(char*, char*, void*) -->
    <function-decl name='__interceptor_freopen' mangled-name='__interceptor_freopen' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_freopen'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='mode' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1524' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_fclose(void*) -->
    <function-decl name='__interceptor_fclose' mangled-name='__interceptor_fclose' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1541' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fclose'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- __sanitizer::uptr __interceptor_fread(void*, __sanitizer::uptr, __sanitizer::uptr, void*) -->
    <function-decl name='__interceptor_fread' mangled-name='__interceptor_fread' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1554' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fread'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='nmemb' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-decl>
    <!-- __sanitizer::uptr __interceptor_fwrite(void*, __sanitizer::uptr, __sanitizer::uptr, void*) -->
    <function-decl name='__interceptor_fwrite' mangled-name='__interceptor_fwrite' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fwrite'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='nmemb' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='f' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1563' column='1'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-decl>
    <!-- int __interceptor_fflush(void*) -->
    <function-decl name='__interceptor_fflush' mangled-name='__interceptor_fflush' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1572' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fflush'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __interceptor_abort(int) -->
    <function-decl name='__interceptor_abort' mangled-name='__interceptor_abort' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1580' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_abort'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __interceptor_puts(const char*) -->
    <function-decl name='__interceptor_puts' mangled-name='__interceptor_puts' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1586' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_puts'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1586' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_rmdir(char*) -->
    <function-decl name='__interceptor_rmdir' mangled-name='__interceptor_rmdir' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1592' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_rmdir'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1592' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void* __interceptor_opendir(char*) -->
    <function-decl name='__interceptor_opendir' mangled-name='__interceptor_opendir' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1599' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_opendir'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1599' column='1'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-decl>
    <!-- int __interceptor_epoll_ctl(int, int, int, void*) -->
    <function-decl name='__interceptor_epoll_ctl' mangled-name='__interceptor_epoll_ctl' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_epoll_ctl'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='epfd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='op' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ev' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1607' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_epoll_wait(int, void*, int, int) -->
    <function-decl name='__interceptor_epoll_wait' mangled-name='__interceptor_epoll_wait' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_epoll_wait'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='epfd' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ev' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cnt' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='timeout' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1619' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_sigaction(int, sigaction_t*, sigaction_t*) -->
    <function-decl name='__interceptor_sigaction' mangled-name='__interceptor_sigaction' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigaction'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1'/>
      <!-- parameter of type 'sigaction_t*' -->
      <parameter type-id='e44ade73' name='act' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1'/>
      <!-- parameter of type 'sigaction_t*' -->
      <parameter type-id='e44ade73' name='old' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1678' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- sighandler_t __interceptor_signal(int, sighandler_t) -->
    <function-decl name='__interceptor_signal' mangled-name='__interceptor_signal' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1698' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_signal'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1698' column='1'/>
      <!-- parameter of type 'typedef sighandler_t' -->
      <parameter type-id='bdbc1684' name='h' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1698' column='1'/>
      <!-- typedef sighandler_t -->
      <return type-id='bdbc1684'/>
    </function-decl>
    <!-- int __interceptor_sigsuspend(const __sanitizer::__sanitizer_sigset_t*) -->
    <function-decl name='__interceptor_sigsuspend' mangled-name='__interceptor_sigsuspend' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1710' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_sigsuspend'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='c4e98a23' name='mask' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1710' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_raise(int) -->
    <function-decl name='__interceptor_raise' mangled-name='__interceptor_raise' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1715' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_raise'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_kill(int, int) -->
    <function-decl name='__interceptor_kill' mangled-name='__interceptor_kill' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1727' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_kill'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_pthread_kill(void*, int) -->
    <function-decl name='__interceptor_pthread_kill' mangled-name='__interceptor_pthread_kill' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_pthread_kill'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tid' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1743' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_gettimeofday(void*, void*) -->
    <function-decl name='__interceptor_gettimeofday' mangled-name='__interceptor_gettimeofday' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1759' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_gettimeofday'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_getaddrinfo(void*, void*, void*, void*) -->
    <function-decl name='__interceptor_getaddrinfo' mangled-name='__interceptor_getaddrinfo' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_getaddrinfo'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='node' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='service' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='hints' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rv' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1765' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_mlock(void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_mlock' mangled-name='__interceptor_mlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='len' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_munlock(void*, __sanitizer::uptr) -->
    <function-decl name='__interceptor_munlock' mangled-name='__interceptor_munlock' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1796' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_munlock'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='len' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1791' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_mlockall(int) -->
    <function-decl name='__interceptor_mlockall' mangled-name='__interceptor_mlockall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1801' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_mlockall'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_munlockall() -->
    <function-decl name='__interceptor_munlockall' mangled-name='__interceptor_munlockall' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1806' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_munlockall'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __interceptor_fork(int) -->
    <function-decl name='__interceptor_fork' mangled-name='__interceptor_fork' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='1811' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__interceptor_fork'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::SignalDesc -->
      <class-decl name='SignalDesc' size-in-bits='8640' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='114' column='1' id='980a1fec'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- bool __tsan::SignalDesc::armed -->
          <var-decl name='armed' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='115' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='8'>
          <!-- bool __tsan::SignalDesc::sigaction -->
          <var-decl name='sigaction' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='116' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- my_siginfo_t __tsan::SignalDesc::siginfo -->
          <var-decl name='siginfo' type-id='ed334f22' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='117' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1088'>
          <!-- ucontext_t __tsan::SignalDesc::ctx -->
          <var-decl name='ctx' type-id='1ba65dc8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interceptors.cc' line='118' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ReportStack -->
      <class-decl name='ReportStack' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='29' column='1' id='22d334d5'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ReportStack* __tsan::ReportStack::next -->
          <var-decl name='next' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- char* __tsan::ReportStack::module -->
          <var-decl name='module' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='31' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __tsan::ReportStack::offset -->
          <var-decl name='offset' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='32' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr __tsan::ReportStack::pc -->
          <var-decl name='pc' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='33' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- char* __tsan::ReportStack::func -->
          <var-decl name='func' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='34' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- char* __tsan::ReportStack::file -->
          <var-decl name='file' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- int __tsan::ReportStack::line -->
          <var-decl name='line' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='36' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='416'>
          <!-- int __tsan::ReportStack::col -->
          <var-decl name='col' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='37' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ReportMopMutex -->
      <class-decl name='ReportMopMutex' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='40' column='1' id='8fb9d30c'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __tsan::ReportMopMutex::id -->
          <var-decl name='id' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='41' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- bool __tsan::ReportMopMutex::write -->
          <var-decl name='write' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='42' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ReportMop -->
      <class-decl name='ReportMop' size-in-bits='512' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='45' column='1' id='2d49419d'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int __tsan::ReportMop::tid -->
          <var-decl name='tid' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='46' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::ReportMop::addr -->
          <var-decl name='addr' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='47' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- int __tsan::ReportMop::size -->
          <var-decl name='size' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='48' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- bool __tsan::ReportMop::write -->
          <var-decl name='write' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='49' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='168'>
          <!-- bool __tsan::ReportMop::atomic -->
          <var-decl name='atomic' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='50' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __tsan::Vector<__tsan::ReportMopMutex> __tsan::ReportMop::mset -->
          <var-decl name='mset' type-id='92f540bf' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='51' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- __tsan::ReportStack* __tsan::ReportMop::stack -->
          <var-decl name='stack' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='52' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ReportMop::ReportMop() -->
          <function-decl name='ReportMop' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportMop*' -->
            <parameter type-id='62ce8cdd' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ReportMop::ReportMop() -->
          <function-decl name='ReportMop' mangled-name='_ZN6__tsan9ReportMopC2Ev' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportMop*' -->
            <parameter type-id='62ce8cdd' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- enum __tsan::ReportLocationType -->
      <enum-decl name='ReportLocationType' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='57' column='1' id='2c363359'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='ReportLocationGlobal' value='0'/>
        <enumerator name='ReportLocationHeap' value='1'/>
        <enumerator name='ReportLocationStack' value='2'/>
        <enumerator name='ReportLocationTLS' value='3'/>
        <enumerator name='ReportLocationFD' value='4'/>
      </enum-decl>
      <!-- struct __tsan::ReportLocation -->
      <class-decl name='ReportLocation' size-in-bits='640' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='65' column='1' id='a11dae14'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ReportLocationType __tsan::ReportLocation::type -->
          <var-decl name='type' type-id='2c363359' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='66' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::ReportLocation::addr -->
          <var-decl name='addr' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='67' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __sanitizer::uptr __tsan::ReportLocation::size -->
          <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='68' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* __tsan::ReportLocation::module -->
          <var-decl name='module' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='69' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __sanitizer::uptr __tsan::ReportLocation::offset -->
          <var-decl name='offset' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='70' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- int __tsan::ReportLocation::tid -->
          <var-decl name='tid' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='71' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='352'>
          <!-- int __tsan::ReportLocation::fd -->
          <var-decl name='fd' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='72' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- char* __tsan::ReportLocation::name -->
          <var-decl name='name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='73' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='448'>
          <!-- char* __tsan::ReportLocation::file -->
          <var-decl name='file' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='512'>
          <!-- int __tsan::ReportLocation::line -->
          <var-decl name='line' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='75' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='576'>
          <!-- __tsan::ReportStack* __tsan::ReportLocation::stack -->
          <var-decl name='stack' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='76' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ReportThread -->
      <class-decl name='ReportThread' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='79' column='1' id='84fbe4eb'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- int __tsan::ReportThread::id -->
          <var-decl name='id' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='80' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __tsan::ReportThread::pid -->
          <var-decl name='pid' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='81' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- bool __tsan::ReportThread::running -->
          <var-decl name='running' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='82' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- char* __tsan::ReportThread::name -->
          <var-decl name='name' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='83' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- int __tsan::ReportThread::parent_tid -->
          <var-decl name='parent_tid' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='84' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __tsan::ReportStack* __tsan::ReportThread::stack -->
          <var-decl name='stack' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='85' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::ReportMutex -->
      <class-decl name='ReportMutex' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='88' column='1' id='4cfd52c6'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __sanitizer::u64 __tsan::ReportMutex::id -->
          <var-decl name='id' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='89' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- bool __tsan::ReportMutex::destroyed -->
          <var-decl name='destroyed' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='90' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __tsan::ReportStack* __tsan::ReportMutex::stack -->
          <var-decl name='stack' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='91' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __tsan::ReportDesc -->
      <class-decl name='ReportDesc' size-in-bits='1472' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='94' column='1' id='0ab0b57e'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ReportType __tsan::ReportDesc::typ -->
          <var-decl name='typ' type-id='9a187d02' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='96' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::Vector<__tsan::ReportStack*> __tsan::ReportDesc::stacks -->
          <var-decl name='stacks' type-id='4de68f98' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='97' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- __tsan::Vector<__tsan::ReportMop*> __tsan::ReportDesc::mops -->
          <var-decl name='mops' type-id='8ec11ba8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='98' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='576'>
          <!-- __tsan::Vector<__tsan::ReportLocation*> __tsan::ReportDesc::locs -->
          <var-decl name='locs' type-id='4525918b' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='99' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='832'>
          <!-- __tsan::Vector<__tsan::ReportMutex*> __tsan::ReportDesc::mutexes -->
          <var-decl name='mutexes' type-id='5beae62f' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='100' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1088'>
          <!-- __tsan::Vector<__tsan::ReportThread*> __tsan::ReportDesc::threads -->
          <var-decl name='threads' type-id='bd4a0bb0' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='101' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1344'>
          <!-- __tsan::ReportStack* __tsan::ReportDesc::sleep -->
          <var-decl name='sleep' type-id='7db73ee5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='102' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1408'>
          <!-- int __tsan::ReportDesc::count -->
          <var-decl name='count' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='103' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ReportDesc::ReportDesc() -->
          <function-decl name='ReportDesc' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='105' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportDesc*' -->
            <parameter type-id='558ea3b4' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ReportDesc::~ReportDesc(int) -->
          <function-decl name='~ReportDesc' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportDesc*' -->
            <parameter type-id='558ea3b4' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __tsan::ReportDesc::ReportDesc(const __tsan::ReportDesc&) -->
          <function-decl name='ReportDesc' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportDesc*' -->
            <parameter type-id='558ea3b4' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::ReportDesc&' -->
            <parameter type-id='0d181333'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ReportDesc::ReportDesc() -->
          <function-decl name='ReportDesc' mangled-name='_ZN6__tsan10ReportDescC2Ev' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='105' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportDesc*' -->
            <parameter type-id='558ea3b4' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ReportDesc::~ReportDesc(int) -->
          <function-decl name='~ReportDesc' mangled-name='_ZN6__tsan10ReportDescD2Ev' filepath='../../.././libsanitizer/tsan/tsan_report.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ReportDesc*' -->
            <parameter type-id='558ea3b4' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Shadow -->
      <class-decl name='Shadow' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='233' column='1' id='9a6b58a9'>
        <!-- class __tsan::FastState -->
        <base-class access='public' layout-offset-in-bits='0' type-id='593d15f8'/>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::Shadow::kReadShift -->
          <var-decl name='kReadShift' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='371' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::Shadow::kReadBit -->
          <var-decl name='kReadBit' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='372' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::Shadow::kAtomicShift -->
          <var-decl name='kAtomicShift' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='373' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const __sanitizer::u64 __tsan::Shadow::kAtomicBit -->
          <var-decl name='kAtomicBit' type-id='b3400d5a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='374' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Shadow::Shadow(__sanitizer::u64) -->
          <function-decl name='Shadow' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='235' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Shadow::Shadow(const __tsan::FastState&) -->
          <function-decl name='Shadow' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::FastState&' -->
            <parameter type-id='3bdc8f13'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' const='yes'>
          <!-- __sanitizer::u64 __tsan::Shadow::size_log() -->
          <function-decl name='size_log' mangled-name='_ZNK6__tsan6Shadow8size_logEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::Shadow::addr0() -->
          <function-decl name='addr0' mangled-name='_ZNK6__tsan6Shadow5addr0Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u64 __tsan::Shadow::size() -->
          <function-decl name='size' mangled-name='_ZNK6__tsan6Shadow4sizeEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='319' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- typedef __sanitizer::u64 -->
            <return type-id='ceed60aa'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Shadow::MarkAsFreed() -->
          <function-decl name='MarkAsFreed' mangled-name='_ZN6__tsan6Shadow11MarkAsFreedEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='332' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Shadow::SetWrite(unsigned int) -->
          <function-decl name='SetWrite' mangled-name='_ZN6__tsan6Shadow8SetWriteEj' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='253' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='f0981eeb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Shadow::SetAddr0AndSizeLog(__sanitizer::u64, unsigned int) -->
          <function-decl name='SetAddr0AndSizeLog' mangled-name='_ZN6__tsan6Shadow18SetAddr0AndSizeLogEyj' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='244' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='f0981eeb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- unsigned int __tsan::Shadow::ComputeSearchOffset() -->
          <function-decl name='ComputeSearchOffset' mangled-name='_ZN6__tsan6Shadow19ComputeSearchOffsetEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='315' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- unsigned int -->
            <return type-id='f0981eeb'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsZero() -->
          <function-decl name='IsZero' mangled-name='_ZNK6__tsan6Shadow6IsZeroEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='271' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __tsan::Shadow::Addr0AndSizeAreEqual(__tsan::Shadow) -->
          <function-decl name='Addr0AndSizeAreEqual' mangled-name='_ZN6__tsan6Shadow20Addr0AndSizeAreEqualES0_S0_' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='281' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __tsan::Shadow::TidsAreEqual(__tsan::Shadow) -->
          <function-decl name='TidsAreEqual' mangled-name='_ZN6__tsan6Shadow12TidsAreEqualES0_S0_' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='275' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsRWNotWeaker(bool, bool) -->
          <function-decl name='IsRWNotWeaker' mangled-name='_ZNK6__tsan6Shadow13IsRWNotWeakerEbb' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='354' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsRWWeakerOrEqual(bool, bool) -->
          <function-decl name='IsRWWeakerOrEqual' mangled-name='_ZNK6__tsan6Shadow17IsRWWeakerOrEqualEbb' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsBothReadsOrAtomic(bool, bool) -->
          <function-decl name='IsBothReadsOrAtomic' mangled-name='_ZNK6__tsan6Shadow19IsBothReadsOrAtomicEbb' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='346' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' static='yes'>
          <!-- bool __tsan::Shadow::TwoRangesIntersect(__tsan::Shadow, unsigned int) -->
          <function-decl name='TwoRangesIntersect' mangled-name='_ZN6__tsan6Shadow18TwoRangesIntersectES0_S0_j' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='286' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- parameter of type 'unsigned int' -->
            <parameter type-id='f0981eeb'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::Shadow::SetAtomic(bool) -->
          <function-decl name='SetAtomic' mangled-name='_ZN6__tsan6Shadow9SetAtomicEb' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='260' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsRead() -->
          <function-decl name='IsRead' mangled-name='_ZNK6__tsan6Shadow6IsReadEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='321' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsAtomic() -->
          <function-decl name='IsAtomic' mangled-name='_ZNK6__tsan6Shadow8IsAtomicEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='267' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsFreed() -->
          <function-decl name='IsFreed' mangled-name='_ZNK6__tsan6Shadow7IsFreedEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::Shadow::IsWrite() -->
          <function-decl name='IsWrite' mangled-name='_ZNK6__tsan6Shadow7IsWriteEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Shadow*' -->
            <parameter type-id='4fbe4a9e' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __tsan::Shadow::GetFreedAndReset() -->
          <function-decl name='GetFreedAndReset' mangled-name='_ZN6__tsan6Shadow16GetFreedAndResetEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='340' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Shadow*' -->
            <parameter type-id='74ae3dc1' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::ScopedReport -->
      <class-decl name='ScopedReport' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='562' column='1' id='e51318fb'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::Context* __tsan::ScopedReport::ctx_ -->
          <var-decl name='ctx_' type-id='9e112e92' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='579' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportDesc* __tsan::ScopedReport::rep_ -->
          <var-decl name='rep_' type-id='558ea3b4' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='580' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedReport::ScopedReport(__tsan::ReportType) -->
          <function-decl name='ScopedReport' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::ReportType' -->
            <parameter type-id='9a187d02'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedReport::~ScopedReport(int) -->
          <function-decl name='~ScopedReport' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='565' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __tsan::ScopedReport::ScopedReport(const __tsan::ScopedReport&) -->
          <function-decl name='ScopedReport' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='584' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::ScopedReport&' -->
            <parameter type-id='f632b588'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __tsan::ReportDesc* __tsan::ScopedReport::GetReport() -->
          <function-decl name='GetReport' mangled-name='_ZNK6__tsan12ScopedReport9GetReportEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='576' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::ScopedReport*' -->
            <parameter type-id='f232af3c' is-artificial='yes'/>
            <!-- const __tsan::ReportDesc* -->
            <return type-id='19182617'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddThread(const __tsan::ThreadContext*) -->
          <function-decl name='AddThread' mangled-name='_ZN6__tsan12ScopedReport9AddThreadEPKNS_13ThreadContextE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='570' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::ThreadContext*' -->
            <parameter type-id='8fc7c84f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddMutex(const __tsan::SyncVar*) -->
          <function-decl name='AddMutex' mangled-name='_ZN6__tsan12ScopedReport8AddMutexEPKNS_7SyncVarE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='571' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::SyncVar*' -->
            <parameter type-id='0852d8e2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::ScopedReport::AddMutex(__sanitizer::u64) -->
          <function-decl name='AddMutex' mangled-name='_ZN6__tsan12ScopedReport8AddMutexEy' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='582' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u64' -->
            <parameter type-id='ceed60aa'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddSleep(__sanitizer::u32) -->
          <function-decl name='AddSleep' mangled-name='_ZN6__tsan12ScopedReport8AddSleepEj' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedReport::ScopedReport(__tsan::ReportType) -->
          <function-decl name='ScopedReport' mangled-name='_ZN6__tsan12ScopedReportC2ENS_10ReportTypeE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='564' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::ReportType' -->
            <parameter type-id='9a187d02'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedReport::~ScopedReport(int) -->
          <function-decl name='~ScopedReport' mangled-name='_ZN6__tsan12ScopedReportD2Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='565' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddStack(const __tsan::StackTrace*) -->
          <function-decl name='AddStack' mangled-name='_ZN6__tsan12ScopedReport8AddStackEPKNS_10StackTraceE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='567' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddMemoryAccess(__sanitizer::uptr, __tsan::Shadow, const __tsan::StackTrace*, const __tsan::MutexSet*) -->
          <function-decl name='AddMemoryAccess' mangled-name='_ZN6__tsan12ScopedReport15AddMemoryAccessEmNS_6ShadowEPKNS_10StackTraceEPKNS_8MutexSetE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='568' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'class __tsan::Shadow' -->
            <parameter type-id='9a6b58a9'/>
            <!-- parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5'/>
            <!-- parameter of type 'const __tsan::MutexSet*' -->
            <parameter type-id='a152c11d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::AddLocation(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='AddLocation' mangled-name='_ZN6__tsan12ScopedReport11AddLocationEmm' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='572' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::ScopedReport::SetCount(int) -->
          <function-decl name='SetCount' mangled-name='_ZN6__tsan12ScopedReport8SetCountEi' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='574' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedReport*' -->
            <parameter type-id='6cf13deb' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::StackTrace -->
      <class-decl name='StackTrace' size-in-bits='192' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='24' column='1' id='27c6bf14'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __tsan::StackTrace::n_ -->
          <var-decl name='n_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='42' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr* __tsan::StackTrace::s_ -->
          <var-decl name='s_' type-id='60a62555' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='43' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- const __sanitizer::uptr __tsan::StackTrace::c_ -->
          <var-decl name='c_' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='44' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::StackTrace::StackTrace() -->
          <function-decl name='StackTrace' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::StackTrace::StackTrace(__sanitizer::uptr*, __sanitizer::uptr) -->
          <function-decl name='StackTrace' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::StackTrace::~StackTrace(int) -->
          <function-decl name='~StackTrace' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private' constructor='yes'>
          <!-- __tsan::StackTrace::StackTrace(const __tsan::StackTrace&) -->
          <function-decl name='StackTrace' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::StackTrace&' -->
            <parameter type-id='08113411'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::StackTrace::Init(const __sanitizer::uptr*, __sanitizer::uptr) -->
          <function-decl name='Init' mangled-name='_ZN6__tsan10StackTrace4InitEPKmm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::uptr*' -->
            <parameter type-id='862e4738'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::StackTrace::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan10StackTrace4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='36' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __sanitizer::uptr* __tsan::StackTrace::Begin() -->
          <function-decl name='Begin' mangled-name='_ZNK6__tsan10StackTrace5BeginEv' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='38' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5' is-artificial='yes'/>
            <!-- const __sanitizer::uptr* -->
            <return type-id='862e4738'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::StackTrace::StackTrace() -->
          <function-decl name='StackTrace' mangled-name='_ZN6__tsan10StackTraceC2Ev' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::StackTrace::StackTrace(__sanitizer::uptr*, __sanitizer::uptr) -->
          <function-decl name='StackTrace' mangled-name='_ZN6__tsan10StackTraceC2EPmm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::uptr*' -->
            <parameter type-id='60a62555'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::StackTrace::Reset() -->
          <function-decl name='Reset' mangled-name='_ZN6__tsan10StackTrace5ResetEv' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::StackTrace::~StackTrace(int) -->
          <function-decl name='~StackTrace' mangled-name='_ZN6__tsan10StackTraceD2Ev' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::StackTrace::ObtainCurrent(__tsan::ThreadState*, __sanitizer::uptr) -->
          <function-decl name='ObtainCurrent' mangled-name='_ZN6__tsan10StackTrace13ObtainCurrentEPNS_11ThreadStateEm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='34' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::StackTrace::CopyFrom(const __tsan::StackTrace&) -->
          <function-decl name='CopyFrom' mangled-name='_ZN6__tsan10StackTrace8CopyFromERKS0_' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::StackTrace*' -->
            <parameter type-id='e56fe152' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::StackTrace&' -->
            <parameter type-id='08113411'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- bool __tsan::StackTrace::IsEmpty() -->
          <function-decl name='IsEmpty' mangled-name='_ZNK6__tsan10StackTrace7IsEmptyEv' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::StackTrace::Get(__sanitizer::uptr) -->
          <function-decl name='Get' mangled-name='_ZNK6__tsan10StackTrace3GetEm' filepath='../../.././libsanitizer/tsan/tsan_sync.h' line='37' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::StackTrace*' -->
            <parameter type-id='04112dc5' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportLocation*> -->
      <class-decl name='Vector&lt;__tsan::ReportLocation*&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='4525918b'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportLocation*>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportLocation** __tsan::Vector<__tsan::ReportLocation*>::begin_ -->
          <var-decl name='begin_' type-id='c77846d8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportLocation** __tsan::Vector<__tsan::ReportLocation*>::end_ -->
          <var-decl name='end_' type-id='c77846d8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportLocation** __tsan::Vector<__tsan::ReportLocation*>::last_ -->
          <var-decl name='last_' type-id='c77846d8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportLocation*>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='5348bc7b' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportLocation*>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='5348bc7b' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportLocation*>::Vector(const __tsan::Vector<__tsan::ReportLocation*>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='5348bc7b' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportLocation*>&' -->
            <parameter type-id='33356b9e'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportLocation*>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIPNS_14ReportLocationEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='2f356552' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::ReportLocation* const& __tsan::Vector<__tsan::ReportLocation*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIPNS_14ReportLocationEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='2f356552' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportLocation* const& -->
            <return type-id='e6c00a11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportLocation** __tsan::Vector<__tsan::ReportLocation*>::PushBack(__tsan::ReportLocation*) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorIPNS_14ReportLocationEE8PushBackES2_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='5348bc7b' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ReportLocation*' -->
            <parameter type-id='9c4444e2'/>
            <!-- __tsan::ReportLocation** -->
            <return type-id='c77846d8'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportLocation*>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIPNS_14ReportLocationEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportLocation*>*' -->
            <parameter type-id='5348bc7b' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportMop*> -->
      <class-decl name='Vector&lt;__tsan::ReportMop*&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='8ec11ba8'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportMop*>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportMop** __tsan::Vector<__tsan::ReportMop*>::begin_ -->
          <var-decl name='begin_' type-id='8227e8d5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportMop** __tsan::Vector<__tsan::ReportMop*>::end_ -->
          <var-decl name='end_' type-id='8227e8d5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportMop** __tsan::Vector<__tsan::ReportMop*>::last_ -->
          <var-decl name='last_' type-id='8227e8d5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportMop*>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='cbb055ee' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportMop*>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='cbb055ee' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMop*>::Vector(const __tsan::Vector<__tsan::ReportMop*>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='cbb055ee' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportMop*>&' -->
            <parameter type-id='2e15e215'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportMop*>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIPNS_9ReportMopEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='3215e861' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::ReportMop* const& __tsan::Vector<__tsan::ReportMop*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIPNS_9ReportMopEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='3215e861' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportMop* const& -->
            <return type-id='7f09d7fc'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportMop** __tsan::Vector<__tsan::ReportMop*>::PushBack(__tsan::ReportMop*) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorIPNS_9ReportMopEE8PushBackES2_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='cbb055ee' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ReportMop*' -->
            <parameter type-id='62ce8cdd'/>
            <!-- __tsan::ReportMop** -->
            <return type-id='8227e8d5'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMop*>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIPNS_9ReportMopEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMop*>*' -->
            <parameter type-id='cbb055ee' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportMopMutex> -->
      <class-decl name='Vector&lt;__tsan::ReportMopMutex&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='92f540bf'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportMopMutex>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportMopMutex* __tsan::Vector<__tsan::ReportMopMutex>::begin_ -->
          <var-decl name='begin_' type-id='64a8e32a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportMopMutex* __tsan::Vector<__tsan::ReportMopMutex>::end_ -->
          <var-decl name='end_' type-id='64a8e32a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportMopMutex* __tsan::Vector<__tsan::ReportMopMutex>::last_ -->
          <var-decl name='last_' type-id='64a8e32a' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportMopMutex>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='d6ccdd47' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportMopMutex>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='d6ccdd47' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMopMutex>::Vector(const __tsan::Vector<__tsan::ReportMopMutex>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='d6ccdd47' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportMopMutex>&' -->
            <parameter type-id='f8fc3a50'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportMopMutex>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_14ReportMopMutexEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='04fc4d34' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const __tsan::ReportMopMutex& __tsan::Vector<__tsan::ReportMopMutex>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorINS_14ReportMopMutexEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='04fc4d34' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- const __tsan::ReportMopMutex& -->
            <return type-id='ff967c59'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportMopMutex* __tsan::Vector<__tsan::ReportMopMutex>::PushBack(__tsan::ReportMopMutex) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_14ReportMopMutexEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='d6ccdd47' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::ReportMopMutex' -->
            <parameter type-id='8fb9d30c'/>
            <!-- __tsan::ReportMopMutex* -->
            <return type-id='64a8e32a'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMopMutex>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_14ReportMopMutexEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMopMutex>*' -->
            <parameter type-id='d6ccdd47' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportMutex*> -->
      <class-decl name='Vector&lt;__tsan::ReportMutex*&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='5beae62f'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportMutex*>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportMutex** __tsan::Vector<__tsan::ReportMutex*>::begin_ -->
          <var-decl name='begin_' type-id='8e81ef52' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportMutex** __tsan::Vector<__tsan::ReportMutex*>::end_ -->
          <var-decl name='end_' type-id='8e81ef52' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportMutex** __tsan::Vector<__tsan::ReportMutex*>::last_ -->
          <var-decl name='last_' type-id='8e81ef52' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportMutex*>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportMutex*>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMutex*>::Vector(const __tsan::Vector<__tsan::ReportMutex*>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportMutex*>&' -->
            <parameter type-id='7d66b618'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportMutex*>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIPNS_11ReportMutexEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='7966afcc' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::ReportMutex* const& __tsan::Vector<__tsan::ReportMutex*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIPNS_11ReportMutexEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='7966afcc' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportMutex* const& -->
            <return type-id='5c63e5c3'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportMutex*& __tsan::Vector<__tsan::ReportMutex*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorIPNS_11ReportMutexEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportMutex*& -->
            <return type-id='9281f59e'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportMutex** __tsan::Vector<__tsan::ReportMutex*>::PushBack(__tsan::ReportMutex*) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorIPNS_11ReportMutexEE8PushBackES2_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ReportMutex*' -->
            <parameter type-id='9c35ae8c'/>
            <!-- __tsan::ReportMutex** -->
            <return type-id='8e81ef52'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportMutex*>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIPNS_11ReportMutexEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportMutex*>*' -->
            <parameter type-id='b189e4c7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportStack*> -->
      <class-decl name='Vector&lt;__tsan::ReportStack*&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='4de68f98'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportStack*>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportStack** __tsan::Vector<__tsan::ReportStack*>::begin_ -->
          <var-decl name='begin_' type-id='b677dfdd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportStack** __tsan::Vector<__tsan::ReportStack*>::end_ -->
          <var-decl name='end_' type-id='b677dfdd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportStack** __tsan::Vector<__tsan::ReportStack*>::last_ -->
          <var-decl name='last_' type-id='b677dfdd' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportStack*>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='c9b1320e' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportStack*>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='c9b1320e' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportStack*>::Vector(const __tsan::Vector<__tsan::ReportStack*>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='c9b1320e' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportStack*>&' -->
            <parameter type-id='2bc9e4fd'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::ReportStack* const& __tsan::Vector<__tsan::ReportStack*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIPNS_11ReportStackEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='1fc9d219' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportStack* const& -->
            <return type-id='d954dbb4'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportStack*>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIPNS_11ReportStackEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='1fc9d219' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportStack** __tsan::Vector<__tsan::ReportStack*>::PushBack(__tsan::ReportStack*) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorIPNS_11ReportStackEE8PushBackES2_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='c9b1320e' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ReportStack*' -->
            <parameter type-id='7db73ee5'/>
            <!-- __tsan::ReportStack** -->
            <return type-id='b677dfdd'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportStack*>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIPNS_11ReportStackEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportStack*>*' -->
            <parameter type-id='c9b1320e' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ReportThread*> -->
      <class-decl name='Vector&lt;__tsan::ReportThread*&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='bd4a0bb0'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ReportThread*>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ReportThread** __tsan::Vector<__tsan::ReportThread*>::begin_ -->
          <var-decl name='begin_' type-id='44837543' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ReportThread** __tsan::Vector<__tsan::ReportThread*>::end_ -->
          <var-decl name='end_' type-id='44837543' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ReportThread** __tsan::Vector<__tsan::ReportThread*>::last_ -->
          <var-decl name='last_' type-id='44837543' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ReportThread*>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ReportThread*>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportThread*>::Vector(const __tsan::Vector<__tsan::ReportThread*>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ReportThread*>&' -->
            <parameter type-id='37891503'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ReportThread*>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorIPNS_12ReportThreadEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='438927e7' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::ReportThread* const& __tsan::Vector<__tsan::ReportThread*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZNK6__tsan6VectorIPNS_12ReportThreadEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='438927e7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportThread* const& -->
            <return type-id='5f507722'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportThread*& __tsan::Vector<__tsan::ReportThread*>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorIPNS_12ReportThreadEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ReportThread*& -->
            <return type-id='50838827'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ReportThread** __tsan::Vector<__tsan::ReportThread*>::PushBack(__tsan::ReportThread*) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorIPNS_12ReportThreadEE8PushBackES2_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ReportThread*' -->
            <parameter type-id='ba91cbbb'/>
            <!-- __tsan::ReportThread** -->
            <return type-id='44837543'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ReportThread*>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorIPNS_12ReportThreadEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ReportThread*>*' -->
            <parameter type-id='e3333df6' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- unsigned long int __tsan::min<long unsigned int>(unsigned long int, unsigned long int) -->
      <function-decl name='min&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- unsigned long int -->
        <return type-id='7359adad'/>
      </function-decl>
      <!-- unsigned long int __tsan::RoundUp<long unsigned int>(unsigned long int, __sanitizer::u64) -->
      <function-decl name='RoundUp&lt;long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'unsigned long int' -->
        <parameter type-id='7359adad'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- unsigned long int -->
        <return type-id='7359adad'/>
      </function-decl>
      <!-- __tsan::ThreadState* __tsan::cur_thread() -->
      <function-decl name='cur_thread' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __tsan::ThreadState* -->
        <return type-id='8111c228'/>
      </function-decl>
      <!-- void __tsan::StatInc(__tsan::ThreadState*, __tsan::StatType, __sanitizer::u64) -->
      <function-decl name='StatInc' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='592' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'enum __tsan::StatType' -->
        <parameter type-id='ac6e689a'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
    <!-- __sanitizer::__sanitizer_dirent* (void*) -->
    <function-type size-in-bits='64' id='a65cd2a1'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp'/>
      <!-- __sanitizer::__sanitizer_dirent* -->
      <return type-id='a2bd35ce'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_dirent64* (void*) -->
    <function-type size-in-bits='64' id='bfc524cf'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp'/>
      <!-- __sanitizer::__sanitizer_dirent64* -->
      <return type-id='1f0707a8'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_ether_addr* (char*) -->
    <function-type size-in-bits='64' id='c0409091'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- __sanitizer::__sanitizer_ether_addr* -->
      <return type-id='23990d3c'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_ether_addr* (char*, __sanitizer::__sanitizer_ether_addr*) -->
    <function-type size-in-bits='64' id='d9f6d656'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr'/>
      <!-- __sanitizer::__sanitizer_ether_addr* -->
      <return type-id='23990d3c'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_hostent* (char*) -->
    <function-type size-in-bits='64' id='95c782aa'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_hostent* (char*, int) -->
    <function-type size-in-bits='64' id='a159e29f'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_hostent* (int) -->
    <function-type size-in-bits='64' id='7d415b2b'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fake'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_hostent* (void*, int, int) -->
    <function-type size-in-bits='64' id='40c801c6'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='len'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type'/>
      <!-- __sanitizer::__sanitizer_hostent* -->
      <return type-id='cb045ea3'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_mntent* (void*) -->
    <function-type size-in-bits='64' id='d62569bb'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='fp'/>
      <!-- __sanitizer::__sanitizer_mntent* -->
      <return type-id='fd509f4c'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_mntent* (void*, __sanitizer::__sanitizer_mntent*, char*, int) -->
    <function-type size-in-bits='64' id='0dd66ac9'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='fp'/>
      <!-- parameter of type '__sanitizer::__sanitizer_mntent*' -->
      <parameter type-id='fd509f4c' name='mntbuf'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='buflen'/>
      <!-- __sanitizer::__sanitizer_mntent* -->
      <return type-id='fd509f4c'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_tm* (unsigned long int*) -->
    <function-type size-in-bits='64' id='fb4dde82'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_tm* (unsigned long int*, void*) -->
    <function-type size-in-bits='64' id='4ee9d5dc'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='result'/>
      <!-- __sanitizer::__sanitizer_tm* -->
      <return type-id='16088d5f'/>
    </function-type>
    <!-- char* (__sanitizer::__sanitizer_ether_addr*) -->
    <function-type size-in-bits='64' id='f2b95e1b'>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (__sanitizer::__sanitizer_ether_addr*, char*) -->
    <function-type size-in-bits='64' id='31da07ed'>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (__sanitizer::__sanitizer_tm*) -->
    <function-type size-in-bits='64' id='e4c292de'>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (__sanitizer::__sanitizer_tm*, char*) -->
    <function-type size-in-bits='64' id='92cbcbf2'>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='result'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*) -->
    <function-type size-in-bits='64' id='4dbec760'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, char*) -->
    <function-type size-in-bits='64' id='7aef30cc'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dir'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='pfx'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, char*, __sanitizer::__sanitizer_tm*) -->
    <function-type size-in-bits='64' id='632673f6'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='format'/>
      <!-- parameter of type '__sanitizer::__sanitizer_tm*' -->
      <parameter type-id='16088d5f' name='tm'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, char*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='b7c554a5'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='src'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='n'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, const char*) -->
    <function-type size-in-bits='64' id='65561fc5'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, int) -->
    <function-type size-in-bits='64' id='caefc26d'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (char*, SIZE_T) -->
    <function-type size-in-bits='64' id='c385b5ed'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='size'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (const char*, char*) -->
    <function-type size-in-bits='64' id='d7da27e3'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='path'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='resolved_path'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (int) -->
    <function-type size-in-bits='64' id='22922811'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (int, char*) -->
    <function-type size-in-bits='64' id='e24dab53'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='category'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='locale'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (int, char*, SIZE_T) -->
    <function-type size-in-bits='64' id='d1507e3e'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (int, void*, char*, __sanitizer::u32) -->
    <function-type size-in-bits='64' id='4f231697'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='src'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dst'/>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='size'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (unsigned long int*) -->
    <function-type size-in-bits='64' id='c945cb88'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char* (unsigned long int*, char*) -->
    <function-type size-in-bits='64' id='01a2e7f4'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='timep'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='result'/>
      <!-- char* -->
      <return type-id='26a90f95'/>
    </function-type>
    <!-- char** (void**, int) -->
    <function-type size-in-bits='64' id='f724d123'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='buffer'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size'/>
      <!-- char** -->
      <return type-id='9b23c9ad'/>
    </function-type>
    <!-- double (double) -->
    <function-type size-in-bits='64' id='2e5c5dd8'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-type>
    <!-- double (double, double*) -->
    <function-type size-in-bits='64' id='ef7e7e4d'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='iptr'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-type>
    <!-- double (double, double, int*) -->
    <function-type size-in-bits='64' id='fe6798a4'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x'/>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='y'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-type>
    <!-- double (double, int*) -->
    <function-type size-in-bits='64' id='4c344d9f'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp'/>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-type>
    <!-- float (float) -->
    <function-type size-in-bits='64' id='f081d340'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-type>
    <!-- float (float, float*) -->
    <function-type size-in-bits='64' id='868bead4'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='iptr'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-type>
    <!-- float (float, float, int*) -->
    <function-type size-in-bits='64' id='582ca80b'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x'/>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='y'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-type>
    <!-- float (float, int*) -->
    <function-type size-in-bits='64' id='90617b87'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp'/>
      <!-- float -->
      <return type-id='a6c45d85'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-type size-in-bits='64' id='7782548b'>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_pollfd*, __sanitizer::__sanitizer_nfds_t, int) -->
    <function-type size-in-bits='64' id='0b107c52'>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='fds'/>
      <!-- parameter of type 'typedef __sanitizer::__sanitizer_nfds_t' -->
      <parameter type-id='246ed63d' name='nfds'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='timeout'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_pollfd*, __sanitizer::__sanitizer_nfds_t, void*, __sanitizer::__sanitizer_sigset_t*) -->
    <function-type size-in-bits='64' id='e425e7b8'>
      <!-- parameter of type '__sanitizer::__sanitizer_pollfd*' -->
      <parameter type-id='8eba518b' name='fds'/>
      <!-- parameter of type 'typedef __sanitizer::__sanitizer_nfds_t' -->
      <parameter type-id='246ed63d' name='nfds'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout_ts'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='sigmask'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_sigset_t*) -->
    <function-type size-in-bits='64' id='f3811278'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, int*) -->
    <function-type size-in-bits='64' id='569f9e3f'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='sig'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, void*) -->
    <function-type size-in-bits='64' id='23432a62'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='info'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::__sanitizer_sigset_t*, void*, void*) -->
    <function-type size-in-bits='64' id='7668293c'>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='info'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='timeout'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*) -->
    <function-type size-in-bits='64' id='e05223d7'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_dirent***, scandir_filter_f, scandir_compar_f) -->
    <function-type size-in-bits='64' id='4d94f4a0'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dirp'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent***' -->
      <parameter type-id='091186b2' name='namelist'/>
      <!-- parameter of type 'typedef scandir_filter_f' -->
      <parameter type-id='9b85ec4e' name='filter'/>
      <!-- parameter of type 'typedef scandir_compar_f' -->
      <parameter type-id='d381b210' name='compar'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_dirent64***, scandir64_filter_f, scandir64_compar_f) -->
    <function-type size-in-bits='64' id='149d5bf6'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dirp'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64***' -->
      <parameter type-id='5479df64' name='namelist'/>
      <!-- parameter of type 'typedef scandir64_filter_f' -->
      <parameter type-id='f5b34980' name='filter'/>
      <!-- parameter of type 'typedef scandir64_compar_f' -->
      <parameter type-id='1af10236' name='compar'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_ether_addr*) -->
    <function-type size-in-bits='64' id='7061cca0'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='hostname'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_ether_addr*, char*) -->
    <function-type size-in-bits='64' id='a0c2518c'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='line'/>
      <!-- parameter of type '__sanitizer::__sanitizer_ether_addr*' -->
      <parameter type-id='23990d3c' name='addr'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='hostname'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-type size-in-bits='64' id='6d0df63d'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::__sanitizer_wordexp_t*, int) -->
    <function-type size-in-bits='64' id='6959c359'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s'/>
      <!-- parameter of type '__sanitizer::__sanitizer_wordexp_t*' -->
      <parameter type-id='47896ade' name='p'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, int, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-type size-in-bits='64' id='9420ca56'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, __sanitizer::u32) -->
    <function-type size-in-bits='64' id='e8bbb497'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='user'/>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='group'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (char*, void*) -->
    <function-type size-in-bits='64' id='835f4623'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const __sanitizer::__sanitizer_dirent*) -->
    <function-type size-in-bits='64' id='b115b897'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent*' -->
      <parameter type-id='fb68d613'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const __sanitizer::__sanitizer_dirent**, const __sanitizer::__sanitizer_dirent**) -->
    <function-type size-in-bits='64' id='fa1745fd'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent**' -->
      <parameter type-id='ff093bbb'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent**' -->
      <parameter type-id='ff093bbb'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const __sanitizer::__sanitizer_dirent64*) -->
    <function-type size-in-bits='64' id='3374a341'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent64*' -->
      <parameter type-id='5534abf9'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const __sanitizer::__sanitizer_dirent64**, const __sanitizer::__sanitizer_dirent64**) -->
    <function-type size-in-bits='64' id='97d1518d'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent64**' -->
      <parameter type-id='f4ea7d29'/>
      <!-- parameter of type 'const __sanitizer::__sanitizer_dirent64**' -->
      <parameter type-id='f4ea7d29'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const __sanitizer::__sanitizer_sigset_t*) -->
    <function-type size-in-bits='64' id='16aeceab'>
      <!-- parameter of type 'const __sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='c4e98a23' name='mask'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*) -->
    <function-type size-in-bits='64' id='5113b296'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, const char*, SIZE_T) -->
    <function-type size-in-bits='64' id='1a9d10de'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='s2'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='n'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-type size-in-bits='64' id='226ad136'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='str'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, int) -->
    <function-type size-in-bits='64' id='861ec88b'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, int, int) -->
    <function-type size-in-bits='64' id='61e84dd4'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='mode'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-type size-in-bits='64' id='ee5d7867'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, ...) -->
    <function-type size-in-bits='64' id='f1677a7a'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (const char*, void*) -->
    <function-type size-in-bits='64' id='b4249a78'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='cp'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int*, int) -->
    <function-type size-in-bits='64' id='e78a25c3'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='pipefd'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int*, int, void*) -->
    <function-type size-in-bits='64' id='f853ab57'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rusage'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, __sanitizer::__sanitizer_sigset_t*, __sanitizer::__sanitizer_sigset_t*) -->
    <function-type size-in-bits='64' id='bf0bd4f2'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='how'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='set'/>
      <!-- parameter of type '__sanitizer::__sanitizer_sigset_t*' -->
      <parameter type-id='be744a7a' name='oldset'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, __sanitizer::u32*) -->
    <function-type size-in-bits='64' id='449e65e7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size'/>
      <!-- parameter of type '__sanitizer::u32*' -->
      <parameter type-id='778c6eda' name='lst'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, char*, SIZE_T) -->
    <function-type size-in-bits='64' id='00baa36f'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='errnum'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, const char*, void*) -->
    <function-type size-in-bits='64' id='02e8b5b7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='af'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dst'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int) -->
    <function-type size-in-bits='64' id='5cd1f23b'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int*, int) -->
    <function-type size-in-bits='64' id='a8919986'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int*, int, void*) -->
    <function-type size-in-bits='64' id='9308f9e8'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='status'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rusage'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, int) -->
    <function-type size-in-bits='64' id='d98259c4'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='domain'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='protocol'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, int, int*) -->
    <function-type size-in-bits='64' id='55042d93'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='domain'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='protocol'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='fd'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, int, void*) -->
    <function-type size-in-bits='64' id='691aba26'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='epfd'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='op'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ev'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, int, void*, int*) -->
    <function-type size-in-bits='64' id='26e234c5'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sockfd'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='level'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='optname'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='optval'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='optlen'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, void*) -->
    <function-type size-in-bits='64' id='073bc15f'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='shmid'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cmd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, int, void*, int) -->
    <function-type size-in-bits='64' id='6f7abb88'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='idtype'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='id'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='infop'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='options'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, sigaction_t*, sigaction_t*) -->
    <function-type size-in-bits='64' id='38a8f4ae'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig'/>
      <!-- parameter of type 'sigaction_t*' -->
      <parameter type-id='e44ade73' name='act'/>
      <!-- parameter of type 'sigaction_t*' -->
      <parameter type-id='e44ade73' name='old'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='ea5e8ab7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pid'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='cpusetsize'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='mask'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, unsigned int, void*) -->
    <function-type size-in-bits='64' id='fbf9da3a'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='d'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='request'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, unsigned long int, unsigned long int, unsigned long int, unsigned long int) -->
    <function-type size-in-bits='64' id='6a754fc6'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='option'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg2'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg3'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg4'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='7359adad' name='arg5'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*) -->
    <function-type size-in-bits='64' id='c70fa2e8'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, int) -->
    <function-type size-in-bits='64' id='9be2c2b5'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='mask'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, int*) -->
    <function-type size-in-bits='64' id='81f0d64f'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sock_fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='addrlen'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, int, int) -->
    <function-type size-in-bits='64' id='048e9416'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='epfd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ev'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='cnt'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='timeout'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, unsigned int) -->
    <function-type size-in-bits='64' id='838eb0c6'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='addrlen'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, unsigned int*) -->
    <function-type size-in-bits='64' id='a09da5ee'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sockfd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='addrlen'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, unsigned int*, int) -->
    <function-type size-in-bits='64' id='3200de83'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='807869d3' name='addrlen'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (int, void*, void*) -->
    <function-type size-in-bits='64' id='8852d0d2'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='which'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_value'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='old_value'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::u32, void*) -->
    <function-type size-in-bits='64' id='3f48a7e5'>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='clk_id'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tp'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::uptr, const char*) -->
    <function-type size-in-bits='64' id='4bce51b3'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='thread'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='name'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (__sanitizer::uptr, int*, int*) -->
    <function-type size-in-bits='64' id='8744bbbe'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='thread'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='policy'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='param'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (long_t) -->
    <function-type size-in-bits='64' id='cd9eac55'>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='usec'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (unsigned int, int) -->
    <function-type size-in-bits='64' id='0dda5f98'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='initval'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void (int, void*)*, void*) -->
    <function-type size-in-bits='64' id='ea63730b'>
      <!-- parameter of type 'void (int, void*)*' -->
      <parameter type-id='f1eb0faf' name='f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void (void*)*, void*, void*) -->
    <function-type size-in-bits='64' id='505b16d6'>
      <!-- parameter of type 'void (void*)*' -->
      <parameter type-id='b7f9d8e6' name='f'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='arg'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dso'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void**, int) -->
    <function-type size-in-bits='64' id='9627c96c'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='buffer'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='size'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void**, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='d740c561'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='memptr'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='align'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, __sanitizer::__sanitizer_dirent*, __sanitizer::__sanitizer_dirent**) -->
    <function-type size-in-bits='64' id='448a8d43'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent*' -->
      <parameter type-id='a2bd35ce' name='entry'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent**' -->
      <parameter type-id='13dbd5ec' name='result'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, __sanitizer::__sanitizer_dirent64*, __sanitizer::__sanitizer_dirent64**) -->
    <function-type size-in-bits='64' id='c31a1813'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='dirp'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64*' -->
      <parameter type-id='1f0707a8' name='entry'/>
      <!-- parameter of type '__sanitizer::__sanitizer_dirent64**' -->
      <parameter type-id='5a10d1a6' name='result'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, __sanitizer::u32*) -->
    <function-type size-in-bits='64' id='b5be5b46'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf'/>
      <!-- parameter of type '__sanitizer::u32*' -->
      <parameter type-id='778c6eda' name='result'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-type size-in-bits='64' id='1eb6cdab'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='38f76a2a' name='ap'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, const char*, ...) -->
    <function-type size-in-bits='64' id='8be7785e'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='format'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, double*) -->
    <function-type size-in-bits='64' id='3d6c4926'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buffer'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='result'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, int) -->
    <function-type size-in-bits='64' id='dd42ab12'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tid'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, int*) -->
    <function-type size-in-bits='64' id='12f09262'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='s'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='sval'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, int, int, __sanitizer::__sanitizer_hostent*, char*, SIZE_T, __sanitizer::__sanitizer_hostent**, int*) -->
    <function-type size-in-bits='64' id='33664dcd'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='len'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='type'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent*' -->
      <parameter type-id='cb045ea3' name='ret'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='buflen'/>
      <!-- parameter of type '__sanitizer::__sanitizer_hostent**' -->
      <parameter type-id='20e0d1ab' name='result'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='h_errnop'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, int, unsigned int) -->
    <function-type size-in-bits='64' id='468e5404'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='s'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='pshared'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='value'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, long int*) -->
    <function-type size-in-bits='64' id='3b4c30d0'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buffer'/>
      <!-- parameter of type 'long int*' -->
      <parameter type-id='3ccc2590' name='result'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='370905ce'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='cpusetsize'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='cpuset'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='13a4eed2'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='len'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, long_t) -->
    <function-type size-in-bits='64' id='54eb43c1'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void ()*) -->
    <function-type size-in-bits='64' id='73e99a56'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='o'/>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='953b12f8' name='f'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void**) -->
    <function-type size-in-bits='64' id='a4dc031f'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='th'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='ret'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void**, SIZE_T*) -->
    <function-type size-in-bits='64' id='8b2a77fb'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='addr'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='size'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*, unsigned int) -->
    <function-type size-in-bits='64' id='ca4f66ef'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='b'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='a'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='count'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*, void* (void*)*, void*) -->
    <function-type size-in-bits='64' id='0207cbca'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='th'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='attr'/>
      <!-- parameter of type 'void* (void*)*' -->
      <parameter type-id='5ad9edb6' name='callback'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='param'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*, void*) -->
    <function-type size-in-bits='64' id='add6e811'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='c'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='m'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='abstime'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- int (void*, void*, void*, void*) -->
    <function-type size-in-bits='64' id='85c083a5'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='node'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='service'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='hints'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='rv'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-type>
    <!-- long double (long double) -->
    <function-type size-in-bits='64' id='87de9dba'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-type>
    <!-- long double (long double, int*) -->
    <function-type size-in-bits='64' id='d8d5a931'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='signp'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-type>
    <!-- long double (long double, long double*) -->
    <function-type size-in-bits='64' id='3276ba4b'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='iptr'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-type>
    <!-- long double (long double, long double, int*) -->
    <function-type size-in-bits='64' id='b8b5eb4a'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x'/>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='y'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='7292109c' name='quo'/>
      <!-- long double -->
      <return type-id='e095c704'/>
    </function-type>
    <!-- INTMAX_T (const char*, char**, int) -->
    <function-type size-in-bits='64' id='42d9a18b'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='nptr'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='endptr'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='base'/>
      <!-- typedef INTMAX_T -->
      <return type-id='feaaa4a2'/>
    </function-type>
    <!-- SIZE_T (char*, const wchar_t**, SIZE_T, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='03039366'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest'/>
      <!-- parameter of type 'const wchar_t**' -->
      <parameter type-id='5ea27396' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='nms'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (char*, const wchar_t**, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='5cf7758d'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest'/>
      <!-- parameter of type 'const wchar_t**' -->
      <parameter type-id='5ea27396' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (char*, const wchar_t*, SIZE_T) -->
    <function-type size-in-bits='64' id='50bbd9a1'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='dest'/>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='f077d3f8' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (int, char*, SIZE_T) -->
    <function-type size-in-bits='64' id='f33d80b7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='name'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='buf'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (void*, char**, SIZE_T*, char**, SIZE_T*) -->
    <function-type size-in-bits='64' id='4151e8b1'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='cd'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='inbuf'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='inbytesleft'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='outbuf'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='outbytesleft'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (wchar_t*, const char**, SIZE_T, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='7bc3ee3c'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='7d3cd834' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='nms'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (wchar_t*, const char**, SIZE_T, void*) -->
    <function-type size-in-bits='64' id='b5ef33db'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='7d3cd834' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ps'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SIZE_T (wchar_t*, const char*, SIZE_T) -->
    <function-type size-in-bits='64' id='f084726f'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='323d93c1' name='dest'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='src'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='len'/>
      <!-- typedef SIZE_T -->
      <return type-id='883d32ae'/>
    </function-type>
    <!-- SSIZE_T (char**, SIZE_T*, int, void*) -->
    <function-type size-in-bits='64' id='aac6c15d'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='lineptr'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='n'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='delim'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (char**, SIZE_T*, void*) -->
    <function-type size-in-bits='64' id='8b55128e'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad' name='lineptr'/>
      <!-- parameter of type 'SIZE_T*' -->
      <parameter type-id='bb423747' name='n'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int) -->
    <function-type size-in-bits='64' id='cb671dc7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, OFF64_T) -->
    <function-type size-in-bits='64' id='ea622916'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, __sanitizer::__sanitizer_iovec*, int, OFF_T) -->
    <function-type size-in-bits='64' id='ef775a18'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type '__sanitizer::__sanitizer_iovec*' -->
      <parameter type-id='36c19aa8' name='iov'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='iovcnt'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, __sanitizer::__sanitizer_msghdr*, int) -->
    <function-type size-in-bits='64' id='8c45e988'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type '__sanitizer::__sanitizer_msghdr*' -->
      <parameter type-id='30239581' name='msg'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, void*, OFF64_T, OFF64_T) -->
    <function-type size-in-bits='64' id='e3a13259'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='count'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, void*, SIZE_T) -->
    <function-type size-in-bits='64' id='cda25a3e'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, void*, SIZE_T, OFF64_T) -->
    <function-type size-in-bits='64' id='ad6e6425'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count'/>
      <!-- parameter of type 'typedef OFF64_T' -->
      <parameter type-id='552d30a0' name='offset'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- SSIZE_T (int, void*, SIZE_T, OFF_T) -->
    <function-type size-in-bits='64' id='9fa67c37'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='ptr'/>
      <!-- parameter of type 'typedef SIZE_T' -->
      <parameter type-id='883d32ae' name='count'/>
      <!-- parameter of type 'typedef OFF_T' -->
      <parameter type-id='91130bda' name='offset'/>
      <!-- typedef SSIZE_T -->
      <return type-id='0459b20f'/>
    </function-type>
    <!-- __sanitizer::__sanitizer_clock_t (void*) -->
    <function-type size-in-bits='64' id='62f10f97'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='tms'/>
      <!-- typedef __sanitizer::__sanitizer_clock_t -->
      <return type-id='5c8c9d58'/>
    </function-type>
    <!-- __sanitizer::uptr (void*) -->
    <function-type size-in-bits='64' id='ae538a4d'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-type>
    <!-- __sanitizer::uptr (void*, __sanitizer::uptr, __sanitizer::uptr, void*) -->
    <function-type size-in-bits='64' id='8b963f27'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='nmemb'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='f'/>
      <!-- typedef __sanitizer::uptr -->
      <return type-id='c8e929d2'/>
    </function-type>
    <!-- long_t (int, void*, int) -->
    <function-type size-in-bits='64' id='e5db37ca'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='msg'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- typedef long_t -->
      <return type-id='6848d8c1'/>
    </function-type>
    <!-- long_t (int, void*, long_t, int) -->
    <function-type size-in-bits='64' id='0aefacfa'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='buf'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='len'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- typedef long_t -->
      <return type-id='6848d8c1'/>
    </function-type>
    <!-- sighandler_t (int, sighandler_t) -->
    <function-type size-in-bits='64' id='5b4783e7'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='sig'/>
      <!-- parameter of type 'typedef sighandler_t' -->
      <parameter type-id='bdbc1684' name='h'/>
      <!-- typedef sighandler_t -->
      <return type-id='bdbc1684'/>
    </function-type>
    <!-- unsigned long int (unsigned long int*) -->
    <function-type size-in-bits='64' id='06961940'>
      <!-- parameter of type 'unsigned long int*' -->
      <parameter type-id='1d2c2b85' name='t'/>
      <!-- unsigned long int -->
      <return type-id='7359adad'/>
    </function-type>
    <!-- void (__sanitizer::uptr*, int) -->
    <function-type size-in-bits='64' id='013cf1f3'>
      <!-- parameter of type '__sanitizer::uptr*' -->
      <parameter type-id='60a62555' name='env'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='val'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (double, double*, double*) -->
    <function-type size-in-bits='64' id='5bbad9df'>
      <!-- parameter of type 'double' -->
      <parameter type-id='a0eb0f08' name='x'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='sin'/>
      <!-- parameter of type 'double*' -->
      <parameter type-id='7408d286' name='cos'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (float, float*, float*) -->
    <function-type size-in-bits='64' id='30253582'>
      <!-- parameter of type 'float' -->
      <parameter type-id='a6c45d85' name='x'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='sin'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='361f7a7d' name='cos'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (int, my_siginfo_t*, void*) -->
    <function-type size-in-bits='64' id='d334e8cc'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'my_siginfo_t*' -->
      <parameter type-id='ebbb56f0'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (int, void*) -->
    <function-type size-in-bits='64' id='7b5ced03'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (long double, long double*, long double*) -->
    <function-type size-in-bits='64' id='eb6400dd'>
      <!-- parameter of type 'long double' -->
      <parameter type-id='e095c704' name='x'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='sin'/>
      <!-- parameter of type 'long double*' -->
      <parameter type-id='b9c88d6a' name='cos'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void (void*, bool) -->
    <function-type size-in-bits='64' id='a45fc9e0'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='state'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='c894953d' name='free_addr'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-type>
    <!-- void* (char*) -->
    <function-type size-in-bits='64' id='df1e5dee'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (char*, char*) -->
    <function-type size-in-bits='64' id='55ff3502'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='mode'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (char*, char*, void*) -->
    <function-type size-in-bits='64' id='ae5fa55c'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='path'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='mode'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='stream'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (char*, int, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='132c20e8'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='s'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='c'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='n'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (const char*, int) -->
    <function-type size-in-bits='64' id='7a8a8468'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756' name='filename'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flag'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (__sanitizer::uptr) -->
    <function-type size-in-bits='64' id='919d283f'>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='sz'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (void*) -->
    <function-type size-in-bits='64' id='cd5d79f4'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (void*, __sanitizer::uptr) -->
    <function-type size-in-bits='64' id='4523cf7d'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='p'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (void*, long_t, int, int, int, __sanitizer::u64) -->
    <function-type size-in-bits='64' id='ac9fd216'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='prot'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa' name='off'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
    <!-- void* (void*, long_t, int, int, int, unsigned int) -->
    <function-type size-in-bits='64' id='67f8dd75'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='addr'/>
      <!-- parameter of type 'typedef long_t' -->
      <parameter type-id='6848d8c1' name='sz'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='prot'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='flags'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='fd'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='f0981eeb' name='off'/>
      <!-- void* -->
      <return type-id='eaa32e2f'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_interface.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- typedef __sanitizer::u16 uu16 -->
    <typedef-decl name='uu16' type-id='cee094b7' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='171' column='1' id='6e0237b5'/>
    <!-- typedef __sanitizer::u32 uu32 -->
    <typedef-decl name='uu32' type-id='3ae5bbe9' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='172' column='1' id='f9fd03eb'/>
    <!-- typedef __sanitizer::u64 uu64 -->
    <typedef-decl name='uu64' type-id='ceed60aa' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_internal_defs.h' line='173' column='1' id='6a047000'/>
    <!-- const uu16 -->
    <qualified-type-def type-id='6e0237b5' const='yes' id='07f55505'/>
    <!-- const uu16* -->
    <pointer-type-def type-id='07f55505' size-in-bits='64' id='b63518fd'/>
    <!-- const uu32 -->
    <qualified-type-def type-id='f9fd03eb' const='yes' id='13f0eabb'/>
    <!-- const uu32* -->
    <pointer-type-def type-id='13f0eabb' size-in-bits='64' id='f5414243'/>
    <!-- const uu64 -->
    <qualified-type-def type-id='6a047000' const='yes' id='83f856d0'/>
    <!-- const uu64* -->
    <pointer-type-def type-id='83f856d0' size-in-bits='64' id='b9f0eb8e'/>
    <!-- uu16* -->
    <pointer-type-def type-id='6e0237b5' size-in-bits='64' id='315c523a'/>
    <!-- uu32* -->
    <pointer-type-def type-id='f9fd03eb' size-in-bits='64' id='2ef04b18'/>
    <!-- uu64* -->
    <pointer-type-def type-id='6a047000' size-in-bits='64' id='f24177e5'/>
    <!-- void __tsan_init() -->
    <function-decl name='__tsan_init' mangled-name='__tsan_init' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='25' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_init'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_read16(void*) -->
    <function-decl name='__tsan_read16' mangled-name='__tsan_read16' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='29' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write16(void*) -->
    <function-decl name='__tsan_write16' mangled-name='__tsan_write16' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='34' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write16'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- __sanitizer::u16 __tsan_unaligned_read2(const uu16*) -->
    <function-decl name='__tsan_unaligned_read2' mangled-name='__tsan_unaligned_read2' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='39' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_read2'>
      <!-- parameter of type 'const uu16*' -->
      <parameter type-id='b63518fd' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='39' column='1'/>
      <!-- typedef __sanitizer::u16 -->
      <return type-id='cee094b7'/>
    </function-decl>
    <!-- __sanitizer::u32 __tsan_unaligned_read4(const uu32*) -->
    <function-decl name='__tsan_unaligned_read4' mangled-name='__tsan_unaligned_read4' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='44' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_read4'>
      <!-- parameter of type 'const uu32*' -->
      <parameter type-id='f5414243' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='44' column='1'/>
      <!-- typedef __sanitizer::u32 -->
      <return type-id='3ae5bbe9'/>
    </function-decl>
    <!-- __sanitizer::u64 __tsan_unaligned_read8(const uu64*) -->
    <function-decl name='__tsan_unaligned_read8' mangled-name='__tsan_unaligned_read8' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='49' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_read8'>
      <!-- parameter of type 'const uu64*' -->
      <parameter type-id='b9f0eb8e' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='49' column='1'/>
      <!-- typedef __sanitizer::u64 -->
      <return type-id='ceed60aa'/>
    </function-decl>
    <!-- void __tsan_unaligned_write2(uu16*, __sanitizer::u16) -->
    <function-decl name='__tsan_unaligned_write2' mangled-name='__tsan_unaligned_write2' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='54' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_write2'>
      <!-- parameter of type 'uu16*' -->
      <parameter type-id='315c523a' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='54' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u16' -->
      <parameter type-id='cee094b7' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='54' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_unaligned_write4(uu32*, __sanitizer::u32) -->
    <function-decl name='__tsan_unaligned_write4' mangled-name='__tsan_unaligned_write4' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='59' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_write4'>
      <!-- parameter of type 'uu32*' -->
      <parameter type-id='2ef04b18' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='59' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u32' -->
      <parameter type-id='3ae5bbe9' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='59' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_unaligned_write8(uu64*, __sanitizer::u64) -->
    <function-decl name='__tsan_unaligned_write8' mangled-name='__tsan_unaligned_write8' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='64' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_unaligned_write8'>
      <!-- parameter of type 'uu64*' -->
      <parameter type-id='f24177e5' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='64' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::u64' -->
      <parameter type-id='ceed60aa' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='64' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_acquire(void*) -->
    <function-decl name='__tsan_acquire' mangled-name='__tsan_acquire' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='90' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_acquire'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_release(void*) -->
    <function-decl name='__tsan_release' mangled-name='__tsan_release' filepath='../../.././libsanitizer/tsan/tsan_interface.cc' line='94' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_release'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_interface_ann.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- char[128] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='1024' id='e3204322'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='4c87fef4' id='1eb1687a'/>
    </array-type-def>
    <!-- __tsan::DynamicAnnContext* -->
    <pointer-type-def type-id='f4e373a4' size-in-bits='64' id='029b93d2'/>
    <!-- __tsan::ExpectRace& -->
    <reference-type-def kind='lvalue' type-id='4d457915' size-in-bits='64' id='a8772e11'/>
    <!-- __tsan::ExpectRace* -->
    <pointer-type-def type-id='4d457915' size-in-bits='64' id='a47727c5'/>
    <!-- __tsan::ScopedAnnotation* -->
    <pointer-type-def type-id='10b30ef8' size-in-bits='64' id='907188ae'/>
    <!-- __tsan::Vector<__tsan::ExpectRace>* -->
    <pointer-type-def type-id='49cc9cc4' size-in-bits='64' id='937c2c42'/>
    <!-- const __tsan::ExpectRace -->
    <qualified-type-def type-id='4d457915' const='yes' id='fdd09b38'/>
    <!-- const __tsan::ExpectRace& -->
    <reference-type-def kind='lvalue' type-id='fdd09b38' size-in-bits='64' id='ad64303a'/>
    <!-- const __tsan::Vector<__tsan::ExpectRace> -->
    <qualified-type-def type-id='49cc9cc4' const='yes' id='54ce6311'/>
    <!-- const __tsan::Vector<__tsan::ExpectRace>& -->
    <reference-type-def kind='lvalue' type-id='54ce6311' size-in-bits='64' id='b7e62f95'/>
    <!-- const __tsan::Vector<__tsan::ExpectRace>* -->
    <pointer-type-def type-id='54ce6311' size-in-bits='64' id='bbe635e1'/>
    <!-- void AnnotateHappensBefore(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateHappensBefore' mangled-name='AnnotateHappensBefore' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateHappensBefore'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateHappensAfter(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateHappensAfter' mangled-name='AnnotateHappensAfter' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='234' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateHappensAfter'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateCondVarSignal(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateCondVarSignal' mangled-name='AnnotateCondVarSignal' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='239' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateCondVarSignal'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateCondVarSignalAll(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateCondVarSignalAll' mangled-name='AnnotateCondVarSignalAll' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='243' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateCondVarSignalAll'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateMutexIsNotPHB(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateMutexIsNotPHB' mangled-name='AnnotateMutexIsNotPHB' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='247' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateMutexIsNotPHB'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateCondVarWait(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateCondVarWait' mangled-name='AnnotateCondVarWait' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateCondVarWait'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateRWLockCreate(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateRWLockCreate' mangled-name='AnnotateRWLockCreate' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='256' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateRWLockCreate'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateRWLockCreateStatic(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateRWLockCreateStatic' mangled-name='AnnotateRWLockCreateStatic' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='261' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateRWLockCreateStatic'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateRWLockDestroy(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateRWLockDestroy' mangled-name='AnnotateRWLockDestroy' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='266' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateRWLockDestroy'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateRWLockAcquired(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateRWLockAcquired' mangled-name='AnnotateRWLockAcquired' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='271' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateRWLockAcquired'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateRWLockReleased(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateRWLockReleased' mangled-name='AnnotateRWLockReleased' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateRWLockReleased'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateTraceMemory(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateTraceMemory' mangled-name='AnnotateTraceMemory' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='289' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateTraceMemory'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateFlushState(char*, int) -->
    <function-decl name='AnnotateFlushState' mangled-name='AnnotateFlushState' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateFlushState'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateNewMemory(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateNewMemory' mangled-name='AnnotateNewMemory' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='297' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateNewMemory'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateNoOp(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateNoOp' mangled-name='AnnotateNoOp' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='302' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateNoOp'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateFlushExpectedRaces(char*, int) -->
    <function-decl name='AnnotateFlushExpectedRaces' mangled-name='AnnotateFlushExpectedRaces' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='306' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateFlushExpectedRaces'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateEnableRaceDetection(char*, int, int) -->
    <function-decl name='AnnotateEnableRaceDetection' mangled-name='AnnotateEnableRaceDetection' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='321' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateEnableRaceDetection'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='322' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='322' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='enable' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='322' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateMutexIsUsedAsCondVar(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotateMutexIsUsedAsCondVar' mangled-name='AnnotateMutexIsUsedAsCondVar' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='327' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateMutexIsUsedAsCondVar'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotatePCQGet(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotatePCQGet' mangled-name='AnnotatePCQGet' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='332' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotatePCQGet'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotatePCQPut(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotatePCQPut' mangled-name='AnnotatePCQPut' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='337' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotatePCQPut'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotatePCQDestroy(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotatePCQDestroy' mangled-name='AnnotatePCQDestroy' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='342' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotatePCQDestroy'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotatePCQCreate(char*, int, __sanitizer::uptr) -->
    <function-decl name='AnnotatePCQCreate' mangled-name='AnnotatePCQCreate' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='347' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotatePCQCreate'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateExpectRace(char*, int, __sanitizer::uptr, char*) -->
    <function-decl name='AnnotateExpectRace' mangled-name='AnnotateExpectRace' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='352' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateExpectRace'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='mem' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='desc' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateBenignRaceSized(char*, int, __sanitizer::uptr, __sanitizer::uptr, char*) -->
    <function-decl name='AnnotateBenignRaceSized' mangled-name='AnnotateBenignRaceSized' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='370' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateBenignRaceSized'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='mem' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='desc' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateBenignRace(char*, int, __sanitizer::uptr, char*) -->
    <function-decl name='AnnotateBenignRace' mangled-name='AnnotateBenignRace' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='376' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateBenignRace'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='mem' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='desc' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='353' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreReadsBegin(char*, int) -->
    <function-decl name='AnnotateIgnoreReadsBegin' mangled-name='AnnotateIgnoreReadsBegin' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='382' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreReadsBegin'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreReadsEnd(char*, int) -->
    <function-decl name='AnnotateIgnoreReadsEnd' mangled-name='AnnotateIgnoreReadsEnd' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='387' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreReadsEnd'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreWritesBegin(char*, int) -->
    <function-decl name='AnnotateIgnoreWritesBegin' mangled-name='AnnotateIgnoreWritesBegin' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='392' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreWritesBegin'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreWritesEnd(char*, int) -->
    <function-decl name='AnnotateIgnoreWritesEnd' mangled-name='AnnotateIgnoreWritesEnd' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreWritesEnd'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreSyncBegin(char*, int) -->
    <function-decl name='AnnotateIgnoreSyncBegin' mangled-name='AnnotateIgnoreSyncBegin' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='402' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreSyncBegin'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateIgnoreSyncEnd(char*, int) -->
    <function-decl name='AnnotateIgnoreSyncEnd' mangled-name='AnnotateIgnoreSyncEnd' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='407' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateIgnoreSyncEnd'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='293' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotatePublishMemoryRange(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotatePublishMemoryRange' mangled-name='AnnotatePublishMemoryRange' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='412' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotatePublishMemoryRange'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateUnpublishMemoryRange(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateUnpublishMemoryRange' mangled-name='AnnotateUnpublishMemoryRange' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='417' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateUnpublishMemoryRange'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void AnnotateThreadName(char*, int, char*) -->
    <function-decl name='AnnotateThreadName' mangled-name='AnnotateThreadName' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='422' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateThreadName'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='423' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='423' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='name' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='423' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void WTFAnnotateHappensBefore(char*, int, __sanitizer::uptr) -->
    <function-decl name='WTFAnnotateHappensBefore' mangled-name='WTFAnnotateHappensBefore' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='WTFAnnotateHappensBefore'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void WTFAnnotateHappensAfter(char*, int, __sanitizer::uptr) -->
    <function-decl name='WTFAnnotateHappensAfter' mangled-name='WTFAnnotateHappensAfter' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='435' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='WTFAnnotateHappensAfter'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='229' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void WTFAnnotateBenignRaceSized(char*, int, __sanitizer::uptr, __sanitizer::uptr, char*) -->
    <function-decl name='WTFAnnotateBenignRaceSized' mangled-name='WTFAnnotateBenignRaceSized' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='439' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='WTFAnnotateBenignRaceSized'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='mem' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='size' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='desc' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='371' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int RunningOnValgrind() -->
    <function-decl name='RunningOnValgrind' mangled-name='RunningOnValgrind' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='RunningOnValgrind'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- double ValgrindSlowdown() -->
    <function-decl name='ValgrindSlowdown' mangled-name='ValgrindSlowdown' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='449' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='ValgrindSlowdown'>
      <!-- double -->
      <return type-id='a0eb0f08'/>
    </function-decl>
    <!-- const char* ThreadSanitizerQuery(const char*) -->
    <function-decl name='ThreadSanitizerQuery' mangled-name='ThreadSanitizerQuery' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='453' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='ThreadSanitizerQuery'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- const char* -->
      <return type-id='80f4b756'/>
    </function-decl>
    <!-- void AnnotateMemoryIsInitialized(char*, int, __sanitizer::uptr, __sanitizer::uptr) -->
    <function-decl name='AnnotateMemoryIsInitialized' mangled-name='AnnotateMemoryIsInitialized' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='461' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='AnnotateMemoryIsInitialized'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='26a90f95' name='f' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='l' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='cv' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='251' column='1'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2' name='lock' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='252' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- class __tsan::ScopedAnnotation -->
      <class-decl name='ScopedAnnotation' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='30' column='1' id='10b30ef8'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::ThreadState* const __tsan::ScopedAnnotation::thr_ -->
          <var-decl name='thr_' type-id='0bdbb7fb' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='48' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- const int __tsan::ScopedAnnotation::in_rtl_ -->
          <var-decl name='in_rtl_' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='49' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedAnnotation::ScopedAnnotation(__tsan::ThreadState*, const char*, const char*, int, __sanitizer::uptr) -->
          <function-decl name='ScopedAnnotation' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedAnnotation*' -->
            <parameter type-id='907188ae' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'const char*' -->
            <parameter type-id='80f4b756'/>
            <!-- parameter of type 'int' -->
            <parameter type-id='95e97e5e'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedAnnotation::~ScopedAnnotation(int) -->
          <function-decl name='~ScopedAnnotation' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedAnnotation*' -->
            <parameter type-id='907188ae' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::ExpectRace -->
      <class-decl name='ExpectRace' size-in-bits='1472' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='66' column='1' id='4d457915'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ExpectRace* __tsan::ExpectRace::next -->
          <var-decl name='next' type-id='a47727c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='67' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::ExpectRace* __tsan::ExpectRace::prev -->
          <var-decl name='prev' type-id='a47727c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='68' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- int __tsan::ExpectRace::hitcount -->
          <var-decl name='hitcount' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='69' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- int __tsan::ExpectRace::addcount -->
          <var-decl name='addcount' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='70' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::uptr __tsan::ExpectRace::addr -->
          <var-decl name='addr' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='71' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __sanitizer::uptr __tsan::ExpectRace::size -->
          <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='72' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='320'>
          <!-- char* __tsan::ExpectRace::file -->
          <var-decl name='file' type-id='26a90f95' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='73' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='384'>
          <!-- int __tsan::ExpectRace::line -->
          <var-decl name='line' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='74' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='416'>
          <!-- char __tsan::ExpectRace::desc[128] -->
          <var-decl name='desc' type-id='e3204322' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='75' column='1'/>
        </data-member>
      </class-decl>
      <!-- struct __tsan::DynamicAnnContext -->
      <class-decl name='DynamicAnnContext' size-in-bits='3008' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='78' column='1' id='f4e373a4'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::Mutex __tsan::DynamicAnnContext::mtx -->
          <var-decl name='mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='79' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::ExpectRace __tsan::DynamicAnnContext::expect -->
          <var-decl name='expect' type-id='4d457915' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='80' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='1536'>
          <!-- __tsan::ExpectRace __tsan::DynamicAnnContext::benign -->
          <var-decl name='benign' type-id='4d457915' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='81' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::DynamicAnnContext::DynamicAnnContext() -->
          <function-decl name='DynamicAnnContext' filepath='../../.././libsanitizer/tsan/tsan_interface_ann.cc' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::DynamicAnnContext*' -->
            <parameter type-id='029b93d2' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ExpectRace> -->
      <class-decl name='Vector&lt;__tsan::ExpectRace&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='49cc9cc4'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ExpectRace>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ExpectRace* __tsan::Vector<__tsan::ExpectRace>::begin_ -->
          <var-decl name='begin_' type-id='a47727c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ExpectRace* __tsan::Vector<__tsan::ExpectRace>::end_ -->
          <var-decl name='end_' type-id='a47727c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ExpectRace* __tsan::Vector<__tsan::ExpectRace>::last_ -->
          <var-decl name='last_' type-id='a47727c5' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ExpectRace>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ExpectRace>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ExpectRace>::Vector(const __tsan::Vector<__tsan::ExpectRace>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ExpectRace>&' -->
            <parameter type-id='b7e62f95'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ExpectRace>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_10ExpectRaceEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='bbe635e1' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ExpectRace& __tsan::Vector<__tsan::ExpectRace>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorINS_10ExpectRaceEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ExpectRace& -->
            <return type-id='a8772e11'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ExpectRace* __tsan::Vector<__tsan::ExpectRace>::PushBack(__tsan::ExpectRace) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_10ExpectRaceEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::ExpectRace' -->
            <parameter type-id='4d457915'/>
            <!-- __tsan::ExpectRace* -->
            <return type-id='a47727c5'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ExpectRace>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_10ExpectRaceEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ExpectRace>*' -->
            <parameter type-id='937c2c42' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __int128 -->
    <type-decl name='__int128' size-in-bits='128' id='937657f5'/>
    <!-- typedef __tsan_memory_order morder -->
    <typedef-decl name='morder' type-id='8203fe85' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='40' column='1' id='9e1decb5'/>
    <!-- typedef __tsan_atomic8 a8 -->
    <typedef-decl name='a8' type-id='5ec570e8' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='41' column='1' id='81932a3d'/>
    <!-- typedef __tsan_atomic16 a16 -->
    <typedef-decl name='a16' type-id='00bf4e4f' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='42' column='1' id='f3954cac'/>
    <!-- typedef __tsan_atomic32 a32 -->
    <typedef-decl name='a32' type-id='8cc4a7e1' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='43' column='1' id='8790257a'/>
    <!-- typedef __tsan_atomic64 a64 -->
    <typedef-decl name='a64' type-id='00cc1a42' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='44' column='1' id='f7888705'/>
    <!-- typedef __tsan_atomic128 a128 -->
    <typedef-decl name='a128' type-id='1c1eb4e1' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='45' column='1' id='7ffdbc88'/>
    <!-- class ScopedAtomic -->
    <class-decl name='ScopedAtomic' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='53' column='1' id='47404330'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- __tsan::ThreadState* ScopedAtomic::thr_ -->
        <var-decl name='thr_' type-id='8111c228' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='70' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- ScopedAtomic::ScopedAtomic(__tsan::ThreadState*, __sanitizer::uptr, const volatile void*, morder, const char*) -->
        <function-decl name='ScopedAtomic' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedAtomic*' -->
          <parameter type-id='7005ab66' is-artificial='yes'/>
          <!-- parameter of type '__tsan::ThreadState*' -->
          <parameter type-id='8111c228'/>
          <!-- parameter of type 'typedef __sanitizer::uptr' -->
          <parameter type-id='c8e929d2'/>
          <!-- parameter of type 'const volatile void*' -->
          <parameter type-id='60f8eab0'/>
          <!-- parameter of type 'typedef morder' -->
          <parameter type-id='9e1decb5'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='80f4b756'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- ScopedAtomic::~ScopedAtomic(int) -->
        <function-decl name='~ScopedAtomic' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ScopedAtomic*' -->
          <parameter type-id='7005ab66' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='95e97e5e' is-artificial='yes'/>
          <!-- void -->
          <return type-id='48b5725f'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef char __tsan_atomic8 -->
    <typedef-decl name='__tsan_atomic8' type-id='a84c031d' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='22' column='1' id='5ec570e8'/>
    <!-- typedef short int __tsan_atomic16 -->
    <typedef-decl name='__tsan_atomic16' type-id='a2185560' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='23' column='1' id='00bf4e4f'/>
    <!-- typedef int __tsan_atomic32 -->
    <typedef-decl name='__tsan_atomic32' type-id='95e97e5e' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='24' column='1' id='8cc4a7e1'/>
    <!-- typedef long int __tsan_atomic64 -->
    <typedef-decl name='__tsan_atomic64' type-id='bd54fe1a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='25' column='1' id='00cc1a42'/>
    <!-- typedef __int128 __tsan_atomic128 -->
    <typedef-decl name='__tsan_atomic128' type-id='937657f5' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='29' column='1' id='1c1eb4e1'/>
    <!-- enum __tsan_memory_order -->
    <enum-decl name='__tsan_memory_order' naming-typedef-id='8203fe85' linkage-name='19__tsan_memory_order' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='38' column='1' id='da10dad9'>
      <underlying-type type-id='9cac1fee'/>
      <enumerator name='__tsan_memory_order_relaxed' value='0'/>
      <enumerator name='__tsan_memory_order_consume' value='1'/>
      <enumerator name='__tsan_memory_order_acquire' value='2'/>
      <enumerator name='__tsan_memory_order_release' value='3'/>
      <enumerator name='__tsan_memory_order_acq_rel' value='4'/>
      <enumerator name='__tsan_memory_order_seq_cst' value='5'/>
    </enum-decl>
    <!-- typedef __tsan_memory_order __tsan_memory_order -->
    <typedef-decl name='__tsan_memory_order' type-id='da10dad9' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.h' line='45' column='1' id='8203fe85'/>
    <!-- ScopedAtomic* -->
    <pointer-type-def type-id='47404330' size-in-bits='64' id='7005ab66'/>
    <!-- a128* -->
    <pointer-type-def type-id='7ffdbc88' size-in-bits='64' id='f213a52d'/>
    <!-- a16* -->
    <pointer-type-def type-id='f3954cac' size-in-bits='64' id='2827094b'/>
    <!-- a32* -->
    <pointer-type-def type-id='8790257a' size-in-bits='64' id='0aa665c5'/>
    <!-- a64* -->
    <pointer-type-def type-id='f7888705' size-in-bits='64' id='6777664c'/>
    <!-- a8* -->
    <pointer-type-def type-id='81932a3d' size-in-bits='64' id='78b82562'/>
    <!-- const volatile a128 -->
    <qualified-type-def type-id='2e3fa6bb' const='yes' id='4182066c'/>
    <!-- const volatile a128* -->
    <pointer-type-def type-id='4182066c' size-in-bits='64' id='65afe032'/>
    <!-- const volatile a16 -->
    <qualified-type-def type-id='3dc7a54d' const='yes' id='753e8d10'/>
    <!-- const volatile a16* -->
    <pointer-type-def type-id='753e8d10' size-in-bits='64' id='cb78524e'/>
    <!-- const volatile a32 -->
    <qualified-type-def type-id='29c308a3' const='yes' id='f1394016'/>
    <!-- const volatile a32* -->
    <pointer-type-def type-id='f1394016' size-in-bits='64' id='f9201e74'/>
    <!-- const volatile a64 -->
    <qualified-type-def type-id='39c9dd98' const='yes' id='89456851'/>
    <!-- const volatile a64* -->
    <pointer-type-def type-id='89456851' size-in-bits='64' id='934379a1'/>
    <!-- const volatile a8 -->
    <qualified-type-def type-id='22b594ae' const='yes' id='e917b6b1'/>
    <!-- const volatile a8* -->
    <pointer-type-def type-id='e917b6b1' size-in-bits='64' id='8b547601'/>
    <!-- const volatile void -->
    <qualified-type-def type-id='b0b3cbf9' const='yes' id='484cd8ba'/>
    <!-- const volatile void* -->
    <pointer-type-def type-id='484cd8ba' size-in-bits='64' id='60f8eab0'/>
    <!-- volatile a128 -->
    <qualified-type-def type-id='7ffdbc88' volatile='yes' id='2e3fa6bb'/>
    <!-- volatile a128* -->
    <pointer-type-def type-id='2e3fa6bb' size-in-bits='64' id='5f333643'/>
    <!-- volatile a16 -->
    <qualified-type-def type-id='f3954cac' volatile='yes' id='3dc7a54d'/>
    <!-- volatile a16* -->
    <pointer-type-def type-id='3dc7a54d' size-in-bits='64' id='a8496125'/>
    <!-- volatile a32 -->
    <qualified-type-def type-id='8790257a' volatile='yes' id='29c308a3'/>
    <!-- volatile a32* -->
    <pointer-type-def type-id='29c308a3' size-in-bits='64' id='47066fab'/>
    <!-- volatile a64 -->
    <qualified-type-def type-id='f7888705' volatile='yes' id='39c9dd98'/>
    <!-- volatile a64* -->
    <pointer-type-def type-id='39c9dd98' size-in-bits='64' id='aac7ff36'/>
    <!-- volatile a8 -->
    <qualified-type-def type-id='81932a3d' volatile='yes' id='22b594ae'/>
    <!-- volatile a8* -->
    <pointer-type-def type-id='22b594ae' size-in-bits='64' id='27d8cbcc'/>
    <!-- volatile void -->
    <qualified-type-def type-id='48b5725f' volatile='yes' id='b0b3cbf9'/>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- enum __tsan::EventType -->
      <enum-decl name='EventType' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='27' column='1' id='4aa1cb58'>
        <underlying-type type-id='9cac1fee'/>
        <enumerator name='EventTypeMop' value='0'/>
        <enumerator name='EventTypeFuncEnter' value='1'/>
        <enumerator name='EventTypeFuncExit' value='2'/>
        <enumerator name='EventTypeLock' value='3'/>
        <enumerator name='EventTypeUnlock' value='4'/>
        <enumerator name='EventTypeRLock' value='5'/>
        <enumerator name='EventTypeRUnlock' value='6'/>
      </enum-decl>
      <!-- __sanitizer::uptr __tsan::GetThreadTrace(int) -->
      <function-decl name='GetThreadTrace' filepath='../../.././libsanitizer/tsan/tsan_platform.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- void __tsan::MemoryReadAtomic(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, int) -->
      <function-decl name='MemoryReadAtomic' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='674' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::MemoryWriteAtomic(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, int) -->
      <function-decl name='MemoryWriteAtomic' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='679' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::TraceAddEvent(__tsan::ThreadState*, __tsan::FastState, __tsan::EventType, __sanitizer::u64) -->
      <function-decl name='TraceAddEvent' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='755' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'class __tsan::FastState' -->
        <parameter type-id='593d15f8'/>
        <!-- parameter of type 'enum __tsan::EventType' -->
        <parameter type-id='4aa1cb58'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
    <!-- a8 __tsan_atomic8_load(const volatile a8*, morder) -->
    <function-decl name='__tsan_atomic8_load' mangled-name='__tsan_atomic8_load' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='393' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_load'>
      <!-- parameter of type 'const volatile a8*' -->
      <parameter type-id='8b547601' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='393' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='393' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_load(const volatile a16*, morder) -->
    <function-decl name='__tsan_atomic16_load' mangled-name='__tsan_atomic16_load' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_load'>
      <!-- parameter of type 'const volatile a16*' -->
      <parameter type-id='cb78524e' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='397' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='397' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_load(const volatile a32*, morder) -->
    <function-decl name='__tsan_atomic32_load' mangled-name='__tsan_atomic32_load' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='401' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_load'>
      <!-- parameter of type 'const volatile a32*' -->
      <parameter type-id='f9201e74' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='401' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='401' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_load(const volatile a64*, morder) -->
    <function-decl name='__tsan_atomic64_load' mangled-name='__tsan_atomic64_load' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='405' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_load'>
      <!-- parameter of type 'const volatile a64*' -->
      <parameter type-id='934379a1' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='405' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='405' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_load(const volatile a128*, morder) -->
    <function-decl name='__tsan_atomic128_load' mangled-name='__tsan_atomic128_load' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='410' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_load'>
      <!-- parameter of type 'const volatile a128*' -->
      <parameter type-id='65afe032' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='410' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='410' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- void __tsan_atomic8_store(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_store' mangled-name='__tsan_atomic8_store' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='415' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_store'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='415' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='415' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='415' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_atomic16_store(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_store' mangled-name='__tsan_atomic16_store' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='419' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_store'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='419' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='419' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='419' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_atomic32_store(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_store' mangled-name='__tsan_atomic32_store' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_store'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='423' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='423' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='423' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_atomic64_store(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_store' mangled-name='__tsan_atomic64_store' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='427' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_store'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='427' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='427' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='427' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_atomic128_store(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_store' mangled-name='__tsan_atomic128_store' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='432' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_store'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='432' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='432' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='432' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_exchange(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_exchange' mangled-name='__tsan_atomic8_exchange' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_exchange'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_exchange(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_exchange' mangled-name='__tsan_atomic16_exchange' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_exchange'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_exchange(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_exchange' mangled-name='__tsan_atomic32_exchange' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_exchange'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_exchange(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_exchange' mangled-name='__tsan_atomic64_exchange' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_exchange'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_exchange(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_exchange' mangled-name='__tsan_atomic128_exchange' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_exchange'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_add(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_add' mangled-name='__tsan_atomic8_fetch_add' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_add'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_add(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_add' mangled-name='__tsan_atomic16_fetch_add' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='463' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_add'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_add(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_add' mangled-name='__tsan_atomic32_fetch_add' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='467' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_add'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_add(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_add' mangled-name='__tsan_atomic64_fetch_add' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='471' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_add'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_add(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_add' mangled-name='__tsan_atomic128_fetch_add' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='476' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_add'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_sub(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_sub' mangled-name='__tsan_atomic8_fetch_sub' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='481' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_sub'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_sub(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_sub' mangled-name='__tsan_atomic16_fetch_sub' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='485' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_sub'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_sub(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_sub' mangled-name='__tsan_atomic32_fetch_sub' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='489' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_sub'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_sub(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_sub' mangled-name='__tsan_atomic64_fetch_sub' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='493' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_sub'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_sub(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_sub' mangled-name='__tsan_atomic128_fetch_sub' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='498' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_sub'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_and(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_and' mangled-name='__tsan_atomic8_fetch_and' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='503' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_and'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_and(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_and' mangled-name='__tsan_atomic16_fetch_and' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='507' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_and'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_and(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_and' mangled-name='__tsan_atomic32_fetch_and' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='511' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_and'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_and(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_and' mangled-name='__tsan_atomic64_fetch_and' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='515' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_and'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_and(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_and' mangled-name='__tsan_atomic128_fetch_and' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='520' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_and'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_or(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_or' mangled-name='__tsan_atomic8_fetch_or' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='525' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_or'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_or(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_or' mangled-name='__tsan_atomic16_fetch_or' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='529' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_or'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_or(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_or' mangled-name='__tsan_atomic32_fetch_or' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='533' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_or'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_or(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_or' mangled-name='__tsan_atomic64_fetch_or' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='537' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_or'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_or(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_or' mangled-name='__tsan_atomic128_fetch_or' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='542' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_or'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_xor(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_xor' mangled-name='__tsan_atomic8_fetch_xor' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='547' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_xor'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_xor(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_xor' mangled-name='__tsan_atomic16_fetch_xor' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='551' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_xor'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_xor(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_xor' mangled-name='__tsan_atomic32_fetch_xor' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='555' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_xor'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_xor(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_xor' mangled-name='__tsan_atomic64_fetch_xor' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='559' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_xor'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_xor(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_xor' mangled-name='__tsan_atomic128_fetch_xor' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='564' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_xor'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_fetch_nand(volatile a8*, a8, morder) -->
    <function-decl name='__tsan_atomic8_fetch_nand' mangled-name='__tsan_atomic8_fetch_nand' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='569' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_fetch_nand'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='437' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_fetch_nand(volatile a16*, a16, morder) -->
    <function-decl name='__tsan_atomic16_fetch_nand' mangled-name='__tsan_atomic16_fetch_nand' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='573' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_fetch_nand'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='441' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_fetch_nand(volatile a32*, a32, morder) -->
    <function-decl name='__tsan_atomic32_fetch_nand' mangled-name='__tsan_atomic32_fetch_nand' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='577' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_fetch_nand'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='445' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_fetch_nand(volatile a64*, a64, morder) -->
    <function-decl name='__tsan_atomic64_fetch_nand' mangled-name='__tsan_atomic64_fetch_nand' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='581' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_fetch_nand'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='449' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_fetch_nand(volatile a128*, a128, morder) -->
    <function-decl name='__tsan_atomic128_fetch_nand' mangled-name='__tsan_atomic128_fetch_nand' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='586' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_fetch_nand'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='454' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- int __tsan_atomic8_compare_exchange_strong(volatile a8*, a8*, a8, morder, morder) -->
    <function-decl name='__tsan_atomic8_compare_exchange_strong' mangled-name='__tsan_atomic8_compare_exchange_strong' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_compare_exchange_strong'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'a8*' -->
      <parameter type-id='78b82562' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='592' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='592' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic16_compare_exchange_strong(volatile a16*, a16*, a16, morder, morder) -->
    <function-decl name='__tsan_atomic16_compare_exchange_strong' mangled-name='__tsan_atomic16_compare_exchange_strong' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_compare_exchange_strong'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'a16*' -->
      <parameter type-id='2827094b' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='597' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='597' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic32_compare_exchange_strong(volatile a32*, a32*, a32, morder, morder) -->
    <function-decl name='__tsan_atomic32_compare_exchange_strong' mangled-name='__tsan_atomic32_compare_exchange_strong' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_compare_exchange_strong'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'a32*' -->
      <parameter type-id='0aa665c5' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='602' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='602' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic64_compare_exchange_strong(volatile a64*, a64*, a64, morder, morder) -->
    <function-decl name='__tsan_atomic64_compare_exchange_strong' mangled-name='__tsan_atomic64_compare_exchange_strong' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_compare_exchange_strong'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'a64*' -->
      <parameter type-id='6777664c' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='607' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='607' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic128_compare_exchange_strong(volatile a128*, a128*, a128, morder, morder) -->
    <function-decl name='__tsan_atomic128_compare_exchange_strong' mangled-name='__tsan_atomic128_compare_exchange_strong' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_compare_exchange_strong'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'a128*' -->
      <parameter type-id='f213a52d' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='613' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='613' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic8_compare_exchange_weak(volatile a8*, a8*, a8, morder, morder) -->
    <function-decl name='__tsan_atomic8_compare_exchange_weak' mangled-name='__tsan_atomic8_compare_exchange_weak' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='618' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_compare_exchange_weak'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'a8*' -->
      <parameter type-id='78b82562' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='591' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='592' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='592' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic16_compare_exchange_weak(volatile a16*, a16*, a16, morder, morder) -->
    <function-decl name='__tsan_atomic16_compare_exchange_weak' mangled-name='__tsan_atomic16_compare_exchange_weak' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='623' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_compare_exchange_weak'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'a16*' -->
      <parameter type-id='2827094b' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='596' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='597' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='597' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic32_compare_exchange_weak(volatile a32*, a32*, a32, morder, morder) -->
    <function-decl name='__tsan_atomic32_compare_exchange_weak' mangled-name='__tsan_atomic32_compare_exchange_weak' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='628' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_compare_exchange_weak'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'a32*' -->
      <parameter type-id='0aa665c5' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='601' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='602' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='602' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic64_compare_exchange_weak(volatile a64*, a64*, a64, morder, morder) -->
    <function-decl name='__tsan_atomic64_compare_exchange_weak' mangled-name='__tsan_atomic64_compare_exchange_weak' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='633' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_compare_exchange_weak'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'a64*' -->
      <parameter type-id='6777664c' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='606' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='607' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='607' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- int __tsan_atomic128_compare_exchange_weak(volatile a128*, a128*, a128, morder, morder) -->
    <function-decl name='__tsan_atomic128_compare_exchange_weak' mangled-name='__tsan_atomic128_compare_exchange_weak' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='639' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_compare_exchange_weak'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'a128*' -->
      <parameter type-id='f213a52d' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='612' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='613' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='613' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- a8 __tsan_atomic8_compare_exchange_val(volatile a8*, a8, a8, morder, morder) -->
    <function-decl name='__tsan_atomic8_compare_exchange_val' mangled-name='__tsan_atomic8_compare_exchange_val' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='645' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic8_compare_exchange_val'>
      <!-- parameter of type 'volatile a8*' -->
      <parameter type-id='27d8cbcc' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='645' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='645' column='1'/>
      <!-- parameter of type 'typedef a8' -->
      <parameter type-id='81932a3d' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='645' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='646' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='646' column='1'/>
      <!-- typedef a8 -->
      <return type-id='81932a3d'/>
    </function-decl>
    <!-- a16 __tsan_atomic16_compare_exchange_val(volatile a16*, a16, a16, morder, morder) -->
    <function-decl name='__tsan_atomic16_compare_exchange_val' mangled-name='__tsan_atomic16_compare_exchange_val' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic16_compare_exchange_val'>
      <!-- parameter of type 'volatile a16*' -->
      <parameter type-id='a8496125' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='649' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='649' column='1'/>
      <!-- parameter of type 'typedef a16' -->
      <parameter type-id='f3954cac' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='649' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='650' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='650' column='1'/>
      <!-- typedef a16 -->
      <return type-id='f3954cac'/>
    </function-decl>
    <!-- a32 __tsan_atomic32_compare_exchange_val(volatile a32*, a32, a32, morder, morder) -->
    <function-decl name='__tsan_atomic32_compare_exchange_val' mangled-name='__tsan_atomic32_compare_exchange_val' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='654' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic32_compare_exchange_val'>
      <!-- parameter of type 'volatile a32*' -->
      <parameter type-id='47066fab' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='654' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='654' column='1'/>
      <!-- parameter of type 'typedef a32' -->
      <parameter type-id='8790257a' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='654' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='655' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='655' column='1'/>
      <!-- typedef a32 -->
      <return type-id='8790257a'/>
    </function-decl>
    <!-- a64 __tsan_atomic64_compare_exchange_val(volatile a64*, a64, a64, morder, morder) -->
    <function-decl name='__tsan_atomic64_compare_exchange_val' mangled-name='__tsan_atomic64_compare_exchange_val' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='659' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic64_compare_exchange_val'>
      <!-- parameter of type 'volatile a64*' -->
      <parameter type-id='aac7ff36' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='659' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='659' column='1'/>
      <!-- parameter of type 'typedef a64' -->
      <parameter type-id='f7888705' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='659' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='660' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='660' column='1'/>
      <!-- typedef a64 -->
      <return type-id='f7888705'/>
    </function-decl>
    <!-- a128 __tsan_atomic128_compare_exchange_val(volatile a128*, a128, a128, morder, morder) -->
    <function-decl name='__tsan_atomic128_compare_exchange_val' mangled-name='__tsan_atomic128_compare_exchange_val' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='665' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic128_compare_exchange_val'>
      <!-- parameter of type 'volatile a128*' -->
      <parameter type-id='5f333643' name='a' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='665' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='c' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='665' column='1'/>
      <!-- parameter of type 'typedef a128' -->
      <parameter type-id='7ffdbc88' name='v' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='665' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='666' column='1'/>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='fmo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='666' column='1'/>
      <!-- typedef a128 -->
      <return type-id='7ffdbc88'/>
    </function-decl>
    <!-- void __tsan_atomic_thread_fence(morder) -->
    <function-decl name='__tsan_atomic_thread_fence' mangled-name='__tsan_atomic_thread_fence' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='671' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic_thread_fence'>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='671' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_atomic_signal_fence(morder) -->
    <function-decl name='__tsan_atomic_signal_fence' mangled-name='__tsan_atomic_signal_fence' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='676' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_atomic_signal_fence'>
      <!-- parameter of type 'typedef morder' -->
      <parameter type-id='9e1decb5' name='mo' filepath='../../.././libsanitizer/tsan/tsan_interface_atomic.cc' line='671' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_interface_java.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- typedef unsigned long int jptr -->
    <typedef-decl name='jptr' type-id='7359adad' filepath='../../.././libsanitizer/tsan/tsan_interface_java.h' line='33' column='1' id='5eea2f4c'/>
    <!-- __tsan::BlockDesc* -->
    <pointer-type-def type-id='fead0c2b' size-in-bits='64' id='3e791c9b'/>
    <!-- __tsan::JavaContext* -->
    <pointer-type-def type-id='91578df4' size-in-bits='64' id='9ed6c332'/>
    <!-- __tsan::ScopedJavaFunc* -->
    <pointer-type-def type-id='6364f697' size-in-bits='64' id='968f225f'/>
    <!-- void __tsan_java_init(jptr, jptr) -->
    <function-decl name='__tsan_java_init' mangled-name='__tsan_java_init' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_init'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_begin' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_size' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __tsan_java_fini() -->
    <function-decl name='__tsan_java_fini' mangled-name='__tsan_java_fini' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='177' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_fini'>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- void __tsan_java_alloc(jptr, jptr) -->
    <function-decl name='__tsan_java_alloc' mangled-name='__tsan_java_alloc' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='187' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_alloc'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_begin' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_size' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_free(jptr, jptr) -->
    <function-decl name='__tsan_java_free' mangled-name='__tsan_java_free' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_free'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_begin' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='heap_size' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='165' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_move(jptr, jptr, jptr) -->
    <function-decl name='__tsan_java_move' mangled-name='__tsan_java_move' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='219' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_move'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='src' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='219' column='1'/>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='dst' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='219' column='1'/>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='size' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='219' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_mutex_lock(jptr) -->
    <function-decl name='__tsan_java_mutex_lock' mangled-name='__tsan_java_mutex_lock' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='267' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_lock'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='267' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_mutex_unlock(jptr) -->
    <function-decl name='__tsan_java_mutex_unlock' mangled-name='__tsan_java_mutex_unlock' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='278' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_unlock'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='267' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_mutex_read_lock(jptr) -->
    <function-decl name='__tsan_java_mutex_read_lock' mangled-name='__tsan_java_mutex_read_lock' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_read_lock'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='267' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_mutex_read_unlock(jptr) -->
    <function-decl name='__tsan_java_mutex_read_unlock' mangled-name='__tsan_java_mutex_read_unlock' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='299' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_read_unlock'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='267' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_java_mutex_lock_rec(jptr, int) -->
    <function-decl name='__tsan_java_mutex_lock_rec' mangled-name='__tsan_java_mutex_lock_rec' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='309' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_lock_rec'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='309' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e' name='rec' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='309' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- int __tsan_java_mutex_unlock_rec(jptr) -->
    <function-decl name='__tsan_java_mutex_unlock_rec' mangled-name='__tsan_java_mutex_unlock_rec' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='321' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_java_mutex_unlock_rec'>
      <!-- parameter of type 'typedef jptr' -->
      <parameter type-id='5eea2f4c' name='addr' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='321' column='1'/>
      <!-- int -->
      <return type-id='95e97e5e'/>
    </function-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::BlockDesc -->
      <class-decl name='BlockDesc' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='28' column='1' id='fead0c2b'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- bool __tsan::BlockDesc::begin -->
          <var-decl name='begin' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='29' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::Mutex __tsan::BlockDesc::mtx -->
          <var-decl name='mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='30' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __tsan::SyncVar* __tsan::BlockDesc::head -->
          <var-decl name='head' type-id='5cc51217' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='31' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::BlockDesc::BlockDesc() -->
          <function-decl name='BlockDesc' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::BlockDesc*' -->
            <parameter type-id='3e791c9b' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::BlockDesc::~BlockDesc(int) -->
          <function-decl name='~BlockDesc' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::BlockDesc*' -->
            <parameter type-id='3e791c9b' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::JavaContext -->
      <class-decl name='JavaContext' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='57' column='1' id='91578df4'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- const __sanitizer::uptr __tsan::JavaContext::heap_begin -->
          <var-decl name='heap_begin' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='58' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- const __sanitizer::uptr __tsan::JavaContext::heap_size -->
          <var-decl name='heap_size' type-id='870ffec2' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='59' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __tsan::BlockDesc* __tsan::JavaContext::heap_shadow -->
          <var-decl name='heap_shadow' type-id='3e791c9b' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='60' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::JavaContext::JavaContext(jptr, jptr) -->
          <function-decl name='JavaContext' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::JavaContext*' -->
            <parameter type-id='9ed6c332' is-artificial='yes'/>
            <!-- parameter of type 'typedef jptr' -->
            <parameter type-id='5eea2f4c'/>
            <!-- parameter of type 'typedef jptr' -->
            <parameter type-id='5eea2f4c'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __tsan::ScopedJavaFunc -->
      <class-decl name='ScopedJavaFunc' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='74' column='1' id='6364f697'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::ThreadState* __tsan::ScopedJavaFunc::thr_ -->
          <var-decl name='thr_' type-id='8111c228' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='92' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedJavaFunc::ScopedJavaFunc(__tsan::ThreadState*, __sanitizer::uptr) -->
          <function-decl name='ScopedJavaFunc' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedJavaFunc*' -->
            <parameter type-id='968f225f' is-artificial='yes'/>
            <!-- parameter of type '__tsan::ThreadState*' -->
            <parameter type-id='8111c228'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedJavaFunc::~ScopedJavaFunc(int) -->
          <function-decl name='~ScopedJavaFunc' filepath='../../.././libsanitizer/tsan/tsan_interface_java.cc' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedJavaFunc*' -->
            <parameter type-id='968f225f' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- long long unsigned int __tsan::GetLsb<long long unsigned int>(long long unsigned int, int) -->
      <function-decl name='GetLsb&lt;long long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='143' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long unsigned int' -->
        <parameter type-id='3a47d82b'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- long long unsigned int -->
        <return type-id='3a47d82b'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_md5.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- unsigned char[64] -->
    <array-type-def dimensions='1' type-id='002ac4a6' size-in-bits='512' id='b1888bf8'>
      <!-- <anonymous range>[64] -->
      <subrange length='64' type-id='4c87fef4' id='b10be967'/>
    </array-type-def>
    <!-- __tsan::__anonymous_struct__* -->
    <pointer-type-def type-id='e7f43f7e' size-in-bits='64' id='8567d8b0'/>
    <!-- unsigned char* -->
    <pointer-type-def type-id='002ac4a6' size-in-bits='64' id='cf536864'/>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- typedef unsigned int __tsan::MD5_u32plus -->
      <typedef-decl name='MD5_u32plus' type-id='f0981eeb' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='30' column='1' id='a14baab1'/>
      <!-- typedef unsigned long int __tsan::ulong_t -->
      <typedef-decl name='ulong_t' type-id='7359adad' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='31' column='1' id='3606e2a6'/>
      <!-- struct {__tsan::MD5_u32plus lo; __tsan::MD5_u32plus hi; __tsan::MD5_u32plus a; __tsan::MD5_u32plus b; __tsan::MD5_u32plus c; __tsan::MD5_u32plus d; unsigned char buffer[64]; unsigned int block[16];} -->
      <class-decl name='__anonymous_struct__' size-in-bits='1216' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='33' column='1' id='e7f43f7e'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::MD5_u32plus lo -->
          <var-decl name='lo' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='34' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='32'>
          <!-- __tsan::MD5_u32plus hi -->
          <var-decl name='hi' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='34' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- __tsan::MD5_u32plus a -->
          <var-decl name='a' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='96'>
          <!-- __tsan::MD5_u32plus b -->
          <var-decl name='b' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='128'>
          <!-- __tsan::MD5_u32plus c -->
          <var-decl name='c' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='160'>
          <!-- __tsan::MD5_u32plus d -->
          <var-decl name='d' type-id='a14baab1' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='35' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- unsigned char buffer[64] -->
          <var-decl name='buffer' type-id='b1888bf8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='36' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='704'>
          <!-- unsigned int block[16] -->
          <var-decl name='block' type-id='2bc779e6' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='37' column='1'/>
        </data-member>
      </class-decl>
      <!-- void __tsan::MD5_Init(__tsan::__anonymous_struct__*) -->
      <function-decl name='MD5_Init' filepath='../../.././libsanitizer/tsan/tsan_md5.cc' line='142' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::__anonymous_struct__*' -->
        <parameter type-id='8567d8b0'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_mman.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- Header*[262144] -->
    <array-type-def dimensions='1' type-id='ed5b2d3c' size-in-bits='16777216' id='ea62945f'>
      <!-- <anonymous range>[262144] -->
      <subrange length='262144' type-id='4c87fef4' id='67de4cb2'/>
    </array-type-def>
    <!-- __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >* -->
    <pointer-type-def type-id='00e0880e' size-in-bits='64' id='e73c2e34'/>
    <!-- __sanitizer::GenericScopedLock<__tsan::MBlock>* -->
    <pointer-type-def type-id='1446ac92' size-in-bits='64' id='481fd770'/>
    <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>* -->
    <pointer-type-def type-id='03e34aaf' size-in-bits='64' id='4f222ee7'/>
    <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* -->
    <pointer-type-def type-id='75289466' size-in-bits='64' id='ed5b2d3c'/>
    <!-- __sanitizer::atomic_uint64_t::Type* -->
    <pointer-type-def type-id='6805d964' size-in-bits='64' id='be0f45f1'/>
    <!-- __tsan::Allocator* -->
    <pointer-type-def type-id='a70431c9' size-in-bits='64' id='6a147c78'/>
    <!-- __tsan::MBlock* -->
    <pointer-type-def type-id='a730dc11' size-in-bits='64' id='c747b929'/>
    <!-- const __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> > -->
    <qualified-type-def type-id='00e0880e' const='yes' id='5b2e376b'/>
    <!-- const __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >* -->
    <pointer-type-def type-id='5b2e376b' size-in-bits='64' id='cac0fb53'/>
    <!-- const __sanitizer::GenericScopedLock<__tsan::MBlock> -->
    <qualified-type-def type-id='1446ac92' const='yes' id='eef3c91f'/>
    <!-- const __sanitizer::GenericScopedLock<__tsan::MBlock>& -->
    <reference-type-def kind='lvalue' type-id='eef3c91f' size-in-bits='64' id='62c5c4bb'/>
    <!-- const __tsan::MBlock -->
    <qualified-type-def type-id='a730dc11' const='yes' id='7552b3a4'/>
    <!-- const __tsan::MBlock* -->
    <pointer-type-def type-id='7552b3a4' size-in-bits='64' id='3f30a88a'/>
    <!-- const __tsan::MapUnmapCallback -->
    <qualified-type-def type-id='2bd09f83' const='yes' id='7c06f676'/>
    <!-- const __tsan::MapUnmapCallback* -->
    <pointer-type-def type-id='7c06f676' size-in-bits='64' id='9af5d2d4'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> -->
      <class-decl name='LargeMmapAllocator&lt;__tsan::MapUnmapCallback&gt;' size-in-bits='16781952' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='995' column='1' id='03e34aaf'>
        <member-type access='private'>
          <!-- struct __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header -->
          <class-decl name='Header' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1186' column='1' id='75289466'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header::map_beg -->
              <var-decl name='map_beg' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1187' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header::map_size -->
              <var-decl name='map_size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1188' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header::size -->
              <var-decl name='size' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1189' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header::chunk_idx -->
              <var-decl name='chunk_idx' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1190' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <member-type access='private'>
          <!-- struct __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats -->
          <class-decl name='Stats' size-in-bits='4352' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1215' column='1' id='521f0382'>
            <data-member access='public' layout-offset-in-bits='0'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats::n_allocs -->
              <var-decl name='n_allocs' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='64'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats::n_frees -->
              <var-decl name='n_frees' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='128'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats::currently_allocated -->
              <var-decl name='currently_allocated' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='192'>
              <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats::max_allocated -->
              <var-decl name='max_allocated' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
            <data-member access='public' layout-offset-in-bits='256'>
              <!-- unsigned long int __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats::by_size_log[64] -->
              <var-decl name='by_size_log' type-id='3f38563f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1216' column='1'/>
            </data-member>
          </class-decl>
        </member-type>
        <data-member access='private' static='yes'>
          <!-- static const int __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::kMaxNumChunks -->
          <var-decl name='kMaxNumChunks' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1185' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::page_size_ -->
          <var-decl name='page_size_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1210' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::chunks_[262144] -->
          <var-decl name='chunks_' type-id='ea62945f' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1211' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777280'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::n_chunks_ -->
          <var-decl name='n_chunks_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1212' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777344'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::min_mmap_ -->
          <var-decl name='min_mmap_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1213' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777408'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::max_mmap_ -->
          <var-decl name='max_mmap_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1213' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777472'>
          <!-- bool __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::chunks_sorted_ -->
          <var-decl name='chunks_sorted_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1214' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16777536'>
          <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Stats __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::stats -->
          <var-decl name='stats' type-id='521f0382' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1217' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16781888'>
          <!-- __sanitizer::SpinMutex __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::mutex_ -->
          <var-decl name='mutex_' type-id='ae453aa5' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1218' column='1'/>
        </data-member>
        <member-function access='private'>
          <!-- __sanitizer::uptr __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::RoundUpMapSize(__sanitizer::uptr) -->
          <function-decl name='RoundUpMapSize' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE14RoundUpMapSizeEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1206' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::GetHeader(void*) -->
          <function-decl name='GetHeader' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE9GetHeaderEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1197' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* -->
            <return type-id='ed5b2d3c'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='997' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::PrintStats() -->
          <function-decl name='PrintStats' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE10PrintStatsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1154' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::GetMetaData(void*) -->
          <function-decl name='GetMetaData' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE11GetMetaDataEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1080' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::GetHeader(__sanitizer::uptr) -->
          <function-decl name='GetHeader' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE9GetHeaderEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1193' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header* -->
            <return type-id='ed5b2d3c'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::GetBlockBegin(void*) -->
          <function-decl name='GetBlockBegin' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE13GetBlockBeginEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1089' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::GetUser(__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header*) -->
          <function-decl name='GetUser' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE7GetUserEPNS3_6HeaderE' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1201' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Header*' -->
            <parameter type-id='ed5b2d3c'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Allocate(__sanitizer::AllocatorStats*, __sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE8AllocateEPNS_14AllocatorStatsEmm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1002' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::Deallocate(__sanitizer::AllocatorStats*, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE10DeallocateEPNS_14AllocatorStatsEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1040' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::AllocatorStats*' -->
            <parameter type-id='71e94878'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>::PointerIsMine(void*) -->
          <function-decl name='PointerIsMine' mangled-name='_ZN11__sanitizer18LargeMmapAllocatorIN6__tsan16MapUnmapCallbackEE13PointerIsMineEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1071' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback>*' -->
            <parameter type-id='4f222ee7' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> > -->
      <class-decl name='CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap&lt;17ul, 128ul, 16ul&gt;, __tsan::MapUnmapCallback&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap&lt;17ul, 128ul, 16ul&gt;, __tsan::MapUnmapCallback&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__tsan::MapUnmapCallback&gt; &gt;' size-in-bits='16782464' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1229' column='1' id='00e0880e'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::primary_ -->
          <var-decl name='primary_' type-id='ba33a300' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1368' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::secondary_ -->
          <var-decl name='secondary_' type-id='03e34aaf' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1369' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='16782016'>
          <!-- __sanitizer::AllocatorGlobalStats __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::stats_ -->
          <var-decl name='stats_' type-id='e586be27' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1370' column='1'/>
        </data-member>
        <member-function access='public' const='yes'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::GetStats(__sanitizer::u64*) -->
          <function-decl name='GetStats' mangled-name='_ZNK11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE8GetStatsEPy' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1339' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='cac0fb53' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::u64*' -->
            <parameter type-id='92a71083'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::InitCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*) -->
          <function-decl name='InitCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE9InitCacheEPS8_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1327' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::PrintStats() -->
          <function-decl name='PrintStats' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE10PrintStatsEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1343' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::DestroyCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*) -->
          <function-decl name='DestroyCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE12DestroyCacheEPS8_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1331' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::SwallowCache(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*) -->
          <function-decl name='SwallowCache' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE12SwallowCacheEPS8_' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1335' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::Init() -->
          <function-decl name='Init' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE4InitEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1231' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::GetMetaData(void*) -->
          <function-decl name='GetMetaData' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE11GetMetaDataEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1295' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::GetBlockBegin(void*) -->
          <function-decl name='GetBlockBegin' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE13GetBlockBeginEPKv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1301' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void* __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::Allocate(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*, __sanitizer::uptr, __sanitizer::uptr, bool) -->
          <function-decl name='Allocate' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE8AllocateEPS8_mmb' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1237' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void* -->
            <return type-id='eaa32e2f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::Deallocate(__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*, void*) -->
          <function-decl name='Deallocate' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE10DeallocateEPS8_Pv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1259' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type '__sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >*' -->
            <parameter type-id='c7b3dcbe'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >::PointerIsMine(void*) -->
          <function-decl name='PointerIsMine' mangled-name='_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator64ILm137438953472000ELm1099511627776ELm16ENS_12SizeClassMapILm17ELm128ELm16EEEN6__tsan16MapUnmapCallbackEEENS_28SizeClassAllocatorLocalCacheIS6_EENS_18LargeMmapAllocatorIS5_EEE13PointerIsMineEPv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_allocator.h' line='1285' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> >*' -->
            <parameter type-id='e73c2e34' is-artificial='yes'/>
            <!-- parameter of type 'void*' -->
            <parameter type-id='eaa32e2f'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::GenericScopedLock<__tsan::MBlock> -->
      <class-decl name='GenericScopedLock&lt;__tsan::MBlock&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='85' column='1' id='1446ac92'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::MBlock* __sanitizer::GenericScopedLock<__tsan::MBlock>::mu_ -->
          <var-decl name='mu_' type-id='c747b929' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='97' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedLock<__tsan::MBlock>::GenericScopedLock(__tsan::MBlock*) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::MBlock>*' -->
            <parameter type-id='481fd770' is-artificial='yes'/>
            <!-- parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedLock<__tsan::MBlock>::~GenericScopedLock(int) -->
          <function-decl name='~GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::MBlock>*' -->
            <parameter type-id='481fd770' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedLock<__tsan::MBlock>::GenericScopedLock(const __sanitizer::GenericScopedLock<__tsan::MBlock>&) -->
          <function-decl name='GenericScopedLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedLock<__tsan::MBlock>*' -->
            <parameter type-id='481fd770' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedLock<__tsan::MBlock>&' -->
            <parameter type-id='62c5c4bb'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint64_t>(volatile __sanitizer::atomic_uint64_t*, __sanitizer::atomic_uint64_t::Type*, __sanitizer::atomic_uint64_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_compare_exchange_strong&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='3ccaccd3'/>
        <!-- parameter of type '__sanitizer::atomic_uint64_t::Type*' -->
        <parameter type-id='be0f45f1'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint64_t::Type' -->
        <parameter type-id='6805d964'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- bool __sanitizer::atomic_compare_exchange_weak<__sanitizer::atomic_uint64_t>(volatile __sanitizer::atomic_uint64_t*, __sanitizer::atomic_uint64_t::Type*, __sanitizer::atomic_uint64_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_compare_exchange_weak&lt;__sanitizer::atomic_uint64_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uint64_t*' -->
        <parameter type-id='3ccaccd3'/>
        <!-- parameter of type '__sanitizer::atomic_uint64_t::Type*' -->
        <parameter type-id='be0f45f1'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uint64_t::Type' -->
        <parameter type-id='6805d964'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::MapUnmapCallback -->
      <class-decl name='MapUnmapCallback' size-in-bits='8' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='56' column='1' id='2bd09f83'>
        <member-function access='public' const='yes'>
          <!-- void __tsan::MapUnmapCallback::OnMap(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='OnMap' mangled-name='_ZNK6__tsan16MapUnmapCallback5OnMapEmm' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MapUnmapCallback*' -->
            <parameter type-id='9af5d2d4' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- void __tsan::MapUnmapCallback::OnUnmap(__sanitizer::uptr, __sanitizer::uptr) -->
          <function-decl name='OnUnmap' mangled-name='_ZNK6__tsan16MapUnmapCallback7OnUnmapEmm' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MapUnmapCallback*' -->
            <parameter type-id='9af5d2d4' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::MBlock -->
      <class-decl name='MBlock' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='52' column='1' id='a730dc11'>
        <member-type access='public'>
          <!-- typedef __sanitizer::GenericScopedLock<__tsan::MBlock> __tsan::MBlock::ScopedLock -->
          <typedef-decl name='ScopedLock' type-id='1446ac92' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='119' column='1' id='599e85b7'/>
        </member-type>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- long long unsigned int __tsan::MBlock::raw[2] -->
          <var-decl name='raw' type-id='652f1081' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='60' column='1'/>
        </data-member>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::MBlock::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6MBlock4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MBlock*' -->
            <parameter type-id='3f30a88a' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __tsan::SyncVar* __tsan::MBlock::ListHead() -->
          <function-decl name='ListHead' mangled-name='_ZNK6__tsan6MBlock8ListHeadEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MBlock*' -->
            <parameter type-id='3f30a88a' is-artificial='yes'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MBlock::Unlock() -->
          <function-decl name='Unlock' mangled-name='_ZN6__tsan6MBlock6UnlockEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MBlock::Init(__sanitizer::uptr, __sanitizer::u32, __sanitizer::u32) -->
          <function-decl name='Init' mangled-name='_ZN6__tsan6MBlock4InitEmjj' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- parameter of type 'typedef __sanitizer::u32' -->
            <parameter type-id='3ae5bbe9'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MBlock::ListReset() -->
          <function-decl name='ListReset' mangled-name='_ZN6__tsan6MBlock9ListResetEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MBlock::Lock() -->
          <function-decl name='Lock' mangled-name='_ZN6__tsan6MBlock4LockEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u32 __tsan::MBlock::Tid() -->
          <function-decl name='Tid' mangled-name='_ZNK6__tsan6MBlock3TidEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MBlock*' -->
            <parameter type-id='3f30a88a' is-artificial='yes'/>
            <!-- typedef __sanitizer::u32 -->
            <return type-id='3ae5bbe9'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::u32 __tsan::MBlock::StackId() -->
          <function-decl name='StackId' mangled-name='_ZNK6__tsan6MBlock7StackIdEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::MBlock*' -->
            <parameter type-id='3f30a88a' is-artificial='yes'/>
            <!-- typedef __sanitizer::u32 -->
            <return type-id='3ae5bbe9'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- void __tsan::MBlock::ListPush(__tsan::SyncVar*) -->
          <function-decl name='ListPush' mangled-name='_ZN6__tsan6MBlock8ListPushEPNS_7SyncVarE' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- parameter of type '__tsan::SyncVar*' -->
            <parameter type-id='5cc51217'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::SyncVar* __tsan::MBlock::ListPop() -->
          <function-decl name='ListPop' mangled-name='_ZN6__tsan6MBlock7ListPopEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::MBlock*' -->
            <parameter type-id='c747b929' is-artificial='yes'/>
            <!-- __tsan::SyncVar* -->
            <return type-id='5cc51217'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- typedef __sanitizer::CombinedAllocator<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback>, __sanitizer::SizeClassAllocatorLocalCache<__sanitizer::SizeClassAllocator64<137438953472000ul, 1099511627776ul, 16ul, __sanitizer::SizeClassMap<17ul, 128ul, 16ul>, __tsan::MapUnmapCallback> >, __sanitizer::LargeMmapAllocator<__tsan::MapUnmapCallback> > __tsan::Allocator -->
      <typedef-decl name='Allocator' type-id='00e0880e' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='136' column='1' id='a70431c9'/>
      <!-- __tsan::Allocator* __tsan::allocator() -->
      <function-decl name='allocator' mangled-name='_ZN6__tsan9allocatorEv' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __tsan::Allocator* -->
        <return type-id='6a147c78'/>
      </function-decl>
      <!-- void* __tsan::user_alloc(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, __sanitizer::uptr) -->
      <function-decl name='user_alloc' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void* -->
        <return type-id='eaa32e2f'/>
      </function-decl>
      <!-- void __tsan::internal_free(void*) -->
      <function-decl name='internal_free' filepath='../../.././libsanitizer/tsan/tsan_mman.cc' line='211' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'void*' -->
        <parameter type-id='eaa32e2f'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_mutex.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __tsan::Backoff* -->
    <pointer-type-def type-id='e8101b17' size-in-bits='64' id='60e6e7df'/>
    <!-- const __tsan::Backoff -->
    <qualified-type-def type-id='e8101b17' const='yes' id='90c26e3c'/>
    <!-- const __tsan::Backoff* -->
    <pointer-type-def type-id='90c26e3c' size-in-bits='64' id='f8134ca2'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- __sanitizer::atomic_uintptr_t::Type __sanitizer::atomic_fetch_add<__sanitizer::atomic_uintptr_t>(volatile __sanitizer::atomic_uintptr_t*, __sanitizer::atomic_uintptr_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_fetch_add&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='e250a1bf'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uintptr_t::Type' -->
        <parameter type-id='748d5322'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uintptr_t::Type -->
        <return type-id='748d5322'/>
      </function-decl>
      <!-- __sanitizer::atomic_uintptr_t::Type __sanitizer::atomic_fetch_sub<__sanitizer::atomic_uintptr_t>(volatile __sanitizer::atomic_uintptr_t*, __sanitizer::atomic_uintptr_t::Type, __sanitizer::memory_order) -->
      <function-decl name='atomic_fetch_sub&lt;__sanitizer::atomic_uintptr_t&gt;' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_atomic_clang.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'volatile __sanitizer::atomic_uintptr_t*' -->
        <parameter type-id='e250a1bf'/>
        <!-- parameter of type 'typedef __sanitizer::atomic_uintptr_t::Type' -->
        <parameter type-id='748d5322'/>
        <!-- parameter of type 'enum __sanitizer::memory_order' -->
        <parameter type-id='6a042121'/>
        <!-- typedef __sanitizer::atomic_uintptr_t::Type -->
        <return type-id='748d5322'/>
      </function-decl>
    </namespace-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- class __tsan::Backoff -->
      <class-decl name='Backoff' size-in-bits='32' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='167' column='1' id='e8101b17'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- int __tsan::Backoff::iter_ -->
          <var-decl name='iter_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='188' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const int __tsan::Backoff::kActiveSpinIters -->
          <var-decl name='kActiveSpinIters' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='189' column='1'/>
        </data-member>
        <data-member access='private' static='yes'>
          <!-- static const int __tsan::Backoff::kActiveSpinCnt -->
          <var-decl name='kActiveSpinCnt' type-id='2448a865' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='190' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Backoff::Backoff() -->
          <function-decl name='Backoff' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Backoff*' -->
            <parameter type-id='60e6e7df' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- bool __tsan::Backoff::Do() -->
          <function-decl name='Do' mangled-name='_ZN6__tsan7Backoff2DoEv' filepath='../../.././libsanitizer/tsan/tsan_mutex.cc' line='173' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Backoff*' -->
            <parameter type-id='60e6e7df' is-artificial='yes'/>
            <!-- bool -->
            <return type-id='c894953d'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_mutexset.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_platform_linux.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- struct mallinfo -->
    <class-decl name='mallinfo' size-in-bits='320' is-struct='yes' visibility='default' filepath='/usr/include/malloc.h' line='94' column='1' id='2acba5a7'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int mallinfo::arena -->
        <var-decl name='arena' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int mallinfo::ordblks -->
        <var-decl name='ordblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int mallinfo::smblks -->
        <var-decl name='smblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int mallinfo::hblks -->
        <var-decl name='hblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int mallinfo::hblkhd -->
        <var-decl name='hblkhd' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int mallinfo::usmblks -->
        <var-decl name='usmblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int mallinfo::fsmblks -->
        <var-decl name='fsmblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int mallinfo::uordblks -->
        <var-decl name='uordblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int mallinfo::fordblks -->
        <var-decl name='fordblks' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int mallinfo::keepcost -->
        <var-decl name='keepcost' type-id='95e97e5e' visibility='default' filepath='/usr/include/malloc.h' line='104' column='1'/>
      </data-member>
    </class-decl>
    <!-- __sanitizer::InternalScopedBuffer<long long unsigned int>* -->
    <pointer-type-def type-id='17646169' size-in-bits='64' id='00871381'/>
    <!-- __tsan::ScopedInRtl* -->
    <pointer-type-def type-id='ebd3f384' size-in-bits='64' id='c7eb7822'/>
    <!-- const __sanitizer::InternalScopedBuffer<long long unsigned int> -->
    <qualified-type-def type-id='17646169' const='yes' id='ac9837d2'/>
    <!-- const __sanitizer::InternalScopedBuffer<long long unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='ac9837d2' size-in-bits='64' id='a7a0151c'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalScopedBuffer<long long unsigned int> -->
      <class-decl name='InternalScopedBuffer&lt;long long unsigned int&gt;' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='67' column='1' id='17646169'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- long long unsigned int* __sanitizer::InternalScopedBuffer<long long unsigned int>::ptr_ -->
          <var-decl name='ptr_' type-id='c0190993' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<long long unsigned int>::cnt_ -->
          <var-decl name='cnt_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='82' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedBuffer<long long unsigned int>::InternalScopedBuffer(__sanitizer::uptr) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long long unsigned int>*' -->
            <parameter type-id='00871381' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalScopedBuffer<long long unsigned int>::~InternalScopedBuffer(int) -->
          <function-decl name='~InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long long unsigned int>*' -->
            <parameter type-id='00871381' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalScopedBuffer<long long unsigned int>::InternalScopedBuffer(const __sanitizer::InternalScopedBuffer<long long unsigned int>&) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long long unsigned int>*' -->
            <parameter type-id='00871381' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalScopedBuffer<long long unsigned int>&' -->
            <parameter type-id='a7a0151c'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- long long unsigned int* __sanitizer::InternalScopedBuffer<long long unsigned int>::data() -->
          <function-decl name='data' mangled-name='_ZN11__sanitizer20InternalScopedBufferIyE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long long unsigned int>*' -->
            <parameter type-id='00871381' is-artificial='yes'/>
            <!-- long long unsigned int* -->
            <return type-id='c0190993'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<long long unsigned int>::size() -->
          <function-decl name='size' mangled-name='_ZN11__sanitizer20InternalScopedBufferIyE4sizeEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long long unsigned int>*' -->
            <parameter type-id='00871381' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- mallinfo __libc_mallinfo() -->
    <function-decl name='__libc_mallinfo' filepath='../../.././libsanitizer/tsan/tsan_platform_linux.cc' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- struct mallinfo -->
      <return type-id='2acba5a7'/>
    </function-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- class __tsan::ScopedInRtl -->
      <class-decl name='ScopedInRtl' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='552' column='1' id='ebd3f384'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::ThreadState* __tsan::ScopedInRtl::thr_ -->
          <var-decl name='thr_' type-id='8111c228' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='557' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- int __tsan::ScopedInRtl::in_rtl_ -->
          <var-decl name='in_rtl_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='558' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='96'>
          <!-- int __tsan::ScopedInRtl::errno_ -->
          <var-decl name='errno_' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='559' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedInRtl::ScopedInRtl() -->
          <function-decl name='ScopedInRtl' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='554' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedInRtl*' -->
            <parameter type-id='c7eb7822' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedInRtl::~ScopedInRtl(int) -->
          <function-decl name='~ScopedInRtl' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='555' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedInRtl*' -->
            <parameter type-id='c7eb7822' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::ScopedInRtl::ScopedInRtl() -->
          <function-decl name='ScopedInRtl' mangled-name='_ZN6__tsan11ScopedInRtlC2Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='554' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedInRtl*' -->
            <parameter type-id='c7eb7822' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::ScopedInRtl::~ScopedInRtl(int) -->
          <function-decl name='~ScopedInRtl' mangled-name='_ZN6__tsan11ScopedInRtlD2Ev' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='555' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::ScopedInRtl*' -->
            <parameter type-id='c7eb7822' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_report.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __sanitizer::AnsiColorDecorator* -->
    <pointer-type-def type-id='0434694d' size-in-bits='64' id='6bc482dd'/>
    <!-- __tsan::Decorator* -->
    <pointer-type-def type-id='970eadf6' size-in-bits='64' id='6f97edcc'/>
    <!-- const __sanitizer::AnsiColorDecorator -->
    <qualified-type-def type-id='0434694d' const='yes' id='56affa46'/>
    <!-- const __sanitizer::AnsiColorDecorator* -->
    <pointer-type-def type-id='56affa46' size-in-bits='64' id='e3073804'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::AnsiColorDecorator -->
      <class-decl name='AnsiColorDecorator' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='19' column='1' id='0434694d'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- bool __sanitizer::AnsiColorDecorator::ansi_ -->
          <var-decl name='ansi_' type-id='c894953d' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='35' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __sanitizer::AnsiColorDecorator::AnsiColorDecorator(bool) -->
          <function-decl name='AnsiColorDecorator' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='6bc482dd' is-artificial='yes'/>
            <!-- parameter of type 'bool' -->
            <parameter type-id='c894953d'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Red() -->
          <function-decl name='Red' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator3RedEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Default() -->
          <function-decl name='Default' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator7DefaultEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='33' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Blue() -->
          <function-decl name='Blue' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator4BlueEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Cyan() -->
          <function-decl name='Cyan' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator4CyanEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Green() -->
          <function-decl name='Green' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator5GreenEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Yellow() -->
          <function-decl name='Yellow' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator6YellowEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- const char* __sanitizer::AnsiColorDecorator::Magenta() -->
          <function-decl name='Magenta' mangled-name='_ZNK11__sanitizer18AnsiColorDecorator7MagentaEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_report_decorator.h' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __sanitizer::AnsiColorDecorator*' -->
            <parameter type-id='e3073804' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- class __tsan::Decorator -->
      <class-decl name='Decorator' size-in-bits='8' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='18' column='1' id='970eadf6'>
        <!-- class __sanitizer::AnsiColorDecorator -->
        <base-class access='private' layout-offset-in-bits='0' type-id='0434694d'/>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Decorator::Decorator() -->
          <function-decl name='Decorator' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='20' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::Sleep() -->
          <function-decl name='Sleep' mangled-name='_ZN6__tsan9Decorator5SleepEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='29' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndSleep() -->
          <function-decl name='EndSleep' mangled-name='_ZN6__tsan9Decorator8EndSleepEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='30' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::Location() -->
          <function-decl name='Location' mangled-name='_ZN6__tsan9Decorator8LocationEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='27' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndLocation() -->
          <function-decl name='EndLocation' mangled-name='_ZN6__tsan9Decorator11EndLocationEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='28' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::Mutex() -->
          <function-decl name='Mutex' mangled-name='_ZN6__tsan9Decorator5MutexEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='31' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndMutex() -->
          <function-decl name='EndMutex' mangled-name='_ZN6__tsan9Decorator8EndMutexEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::ThreadDescription() -->
          <function-decl name='ThreadDescription' mangled-name='_ZN6__tsan9Decorator17ThreadDescriptionEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndThreadDescription() -->
          <function-decl name='EndThreadDescription' mangled-name='_ZN6__tsan9Decorator20EndThreadDescriptionEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='26' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::Access() -->
          <function-decl name='Access' mangled-name='_ZN6__tsan9Decorator6AccessEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='23' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndAccess() -->
          <function-decl name='EndAccess' mangled-name='_ZN6__tsan9Decorator9EndAccessEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='24' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::Warning() -->
          <function-decl name='Warning' mangled-name='_ZN6__tsan9Decorator7WarningEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='21' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- const char* __tsan::Decorator::EndWarning() -->
          <function-decl name='EndWarning' mangled-name='_ZN6__tsan9Decorator10EndWarningEv' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='22' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Decorator*' -->
            <parameter type-id='6f97edcc' is-artificial='yes'/>
            <!-- const char* -->
            <return type-id='80f4b756'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- const char* __tsan::thread_name(char*, int) -->
      <function-decl name='thread_name' filepath='../../.././libsanitizer/tsan/tsan_report.cc' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- const char* -->
        <return type-id='80f4b756'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_rtl.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- TraceHeader[256] -->
    <array-type-def dimensions='1' type-id='ca74eb67' size-in-bits='5062656' id='d8b34e34'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='4c87fef4' id='36e5b9fa'/>
    </array-type-def>
    <!-- char[431104] -->
    <array-type-def dimensions='1' type-id='a84c031d' size-in-bits='3448832' id='3498ef24'>
      <!-- <anonymous range>[431104] -->
      <subrange length='431104' type-id='4c87fef4' id='fbe58ddc'/>
    </array-type-def>
    <!-- unsigned long int[65536] -->
    <array-type-def dimensions='1' type-id='7359adad' size-in-bits='4194304' id='553a88ae'>
      <!-- <anonymous range>[65536] -->
      <subrange length='65536' type-id='4c87fef4' id='6f296326'/>
    </array-type-def>
    <!-- __tsan::Trace* -->
    <pointer-type-def type-id='9eb347c6' size-in-bits='64' id='d8090f5c'/>
    <!-- __tsan::TraceHeader* -->
    <pointer-type-def type-id='ca74eb67' size-in-bits='64' id='aa97c61f'/>
    <!-- void __tsan_read1(void*) -->
    <function-decl name='__tsan_read1' mangled-name='__tsan_read1' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='19' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read1'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_read2(void*) -->
    <function-decl name='__tsan_read2' mangled-name='__tsan_read2' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='23' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read2'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_read4(void*) -->
    <function-decl name='__tsan_read4' mangled-name='__tsan_read4' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='27' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read4'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_read8(void*) -->
    <function-decl name='__tsan_read8' mangled-name='__tsan_read8' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='31' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read8'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write1(void*) -->
    <function-decl name='__tsan_write1' mangled-name='__tsan_write1' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='35' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write1'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write2(void*) -->
    <function-decl name='__tsan_write2' mangled-name='__tsan_write2' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write2'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write4(void*) -->
    <function-decl name='__tsan_write4' mangled-name='__tsan_write4' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write4'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write8(void*) -->
    <function-decl name='__tsan_write8' mangled-name='__tsan_write8' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write8'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_vptr_update(void**, void*) -->
    <function-decl name='__tsan_vptr_update' mangled-name='__tsan_vptr_update' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_vptr_update'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='vptr_p' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='51' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f' name='new_val' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='51' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_vptr_read(void**) -->
    <function-decl name='__tsan_vptr_read' mangled-name='__tsan_vptr_read' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_vptr_read'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='63e171df' name='vptr_p' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='61' column='1'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_func_entry(void*) -->
    <function-decl name='__tsan_func_entry' mangled-name='__tsan_func_entry' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_func_entry'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_func_exit() -->
    <function-decl name='__tsan_func_exit' mangled-name='__tsan_func_exit' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_func_exit'>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_read_range(void*, __sanitizer::uptr) -->
    <function-decl name='__tsan_read_range' mangled-name='__tsan_read_range' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_read_range'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- void __tsan_write_range(void*, __sanitizer::uptr) -->
    <function-decl name='__tsan_write_range' mangled-name='__tsan_write_range' filepath='../../.././libsanitizer/tsan/tsan_interface_inl.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='__tsan_write_range'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='eaa32e2f'/>
      <!-- parameter of type 'typedef __sanitizer::uptr' -->
      <parameter type-id='c8e929d2'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::TraceHeader -->
      <class-decl name='TraceHeader' size-in-bits='19776' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='42' column='1' id='ca74eb67'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::StackTrace __tsan::TraceHeader::stack0 -->
          <var-decl name='stack0' type-id='27c6bf14' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='43' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='192'>
          <!-- __sanitizer::u64 __tsan::TraceHeader::epoch0 -->
          <var-decl name='epoch0' type-id='ceed60aa' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='44' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='256'>
          <!-- __tsan::MutexSet __tsan::TraceHeader::mset0 -->
          <var-decl name='mset0' type-id='29ac5634' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='45' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='3392'>
          <!-- unsigned long int __tsan::TraceHeader::stack0buf[256] -->
          <var-decl name='stack0buf' type-id='d362a102' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='47' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::TraceHeader::TraceHeader() -->
          <function-decl name='TraceHeader' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::TraceHeader*' -->
            <parameter type-id='aa97c61f' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- struct __tsan::Trace -->
      <class-decl name='Trace' size-in-bits='9257024' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='60' column='1' id='9eb347c6'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::TraceHeader __tsan::Trace::headers[256] -->
          <var-decl name='headers' type-id='d8b34e34' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='61' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='5062656'>
          <!-- __tsan::Mutex __tsan::Trace::mtx -->
          <var-decl name='mtx' type-id='e24e4b3c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='62' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='5062720'>
          <!-- unsigned long int __tsan::Trace::shadow_stack[65536] -->
          <var-decl name='shadow_stack' type-id='553a88ae' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='66' column='1'/>
        </data-member>
        <member-function access='public' constructor='yes'>
          <!-- __tsan::Trace::Trace() -->
          <function-decl name='Trace' filepath='../../.././libsanitizer/tsan/tsan_trace.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Trace*' -->
            <parameter type-id='d8090f5c' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- long long unsigned int* __tsan::RoundDown<long long unsigned int*>(long long unsigned int*, __sanitizer::u64) -->
      <function-decl name='RoundDown&lt;long long unsigned int*&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long unsigned int*' -->
        <parameter type-id='c0190993'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- long long unsigned int* -->
        <return type-id='c0190993'/>
      </function-decl>
      <!-- __sanitizer::uptr __tsan::GetThreadTraceHeader(int) -->
      <function-decl name='GetThreadTraceHeader' filepath='../../.././libsanitizer/tsan/tsan_platform.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- char __tsan::cur_thread_placeholder[431104] -->
      <var-decl name='cur_thread_placeholder' type-id='3498ef24' mangled-name='_ZN6__tsan22cur_thread_placeholderE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='35' column='1'/>
      <!-- bool __tsan::OnFinalize(bool) -->
      <function-decl name='OnFinalize' mangled-name='_ZN6__tsan10OnFinalizeEb' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='44' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN6__tsan10OnFinalizeEb'>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- __tsan::Context* __tsan::CTX() -->
      <function-decl name='CTX' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- __tsan::Context* -->
        <return type-id='9e112e92'/>
      </function-decl>
      <!-- void __tsan::MapThreadTrace(__sanitizer::uptr, __sanitizer::uptr) -->
      <function-decl name='MapThreadTrace' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='198' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- __tsan::Trace* __tsan::ThreadTrace(int) -->
      <function-decl name='ThreadTrace' mangled-name='_ZN6__tsan11ThreadTraceEi' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='350' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- __tsan::Trace* -->
        <return type-id='d8090f5c'/>
      </function-decl>
      <!-- __sanitizer::uptr __tsan::TraceSize() -->
      <function-decl name='TraceSize' mangled-name='_ZN6__tsan9TraceSizeEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='360' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- __sanitizer::uptr __tsan::TraceParts() -->
      <function-decl name='TraceParts' mangled-name='_ZN6__tsan10TracePartsEv' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='364' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- typedef __sanitizer::uptr -->
        <return type-id='c8e929d2'/>
      </function-decl>
      <!-- void __tsan::__tsan_trace_switch() -->
      <function-decl name='__tsan_trace_switch' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='369' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::__tsan_report_race() -->
      <function-decl name='__tsan_report_race' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='373' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- __tsan::Shadow __tsan::LoadShadow(__sanitizer::u64*) -->
      <function-decl name='LoadShadow' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='379' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__sanitizer::u64*' -->
        <parameter type-id='92a71083'/>
        <!-- class __tsan::Shadow -->
        <return type-id='9a6b58a9'/>
      </function-decl>
      <!-- void __tsan::StoreShadow(__sanitizer::u64*, __sanitizer::u64) -->
      <function-decl name='StoreShadow' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='385' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__sanitizer::u64*' -->
        <parameter type-id='92a71083'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::StoreIfNotYetStored(__sanitizer::u64*, __sanitizer::u64*) -->
      <function-decl name='StoreIfNotYetStored' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='390' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__sanitizer::u64*' -->
        <parameter type-id='92a71083'/>
        <!-- parameter of type '__sanitizer::u64*' -->
        <parameter type-id='92a71083'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::MemoryAccessImpl(__tsan::ThreadState*, __sanitizer::uptr, int, bool, bool, __sanitizer::u64*, __tsan::Shadow) -->
      <function-decl name='MemoryAccessImpl' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='416' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- parameter of type '__sanitizer::u64*' -->
        <parameter type-id='92a71083'/>
        <!-- parameter of type 'class __tsan::Shadow' -->
        <parameter type-id='9a6b58a9'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::MemoryAccess(__tsan::ThreadState*, __sanitizer::uptr, __sanitizer::uptr, int, bool, bool) -->
      <function-decl name='MemoryAccess' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='511' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int' -->
        <parameter type-id='95e97e5e'/>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::FuncEntry(__tsan::ThreadState*, __sanitizer::uptr) -->
      <function-decl name='FuncEntry' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='655' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::FuncExit(__tsan::ThreadState*) -->
      <function-decl name='FuncExit' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='685' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::build_consistency_release() -->
      <function-decl name='build_consistency_release' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='747' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::build_consistency_nostats() -->
      <function-decl name='build_consistency_nostats' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='753' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::build_consistency_shadow8() -->
      <function-decl name='build_consistency_shadow8' filepath='../../.././libsanitizer/tsan/tsan_rtl.cc' line='763' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_rtl_mutex.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- void __tsan::AcquireImpl(__tsan::ThreadState*, __sanitizer::uptr, __tsan::SyncClock*) -->
      <function-decl name='AcquireImpl' filepath='../../.././libsanitizer/tsan/tsan_rtl_mutex.cc' line='310' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type '__tsan::SyncClock*' -->
        <parameter type-id='c7866b8a'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::ReleaseImpl(__tsan::ThreadState*, __sanitizer::uptr, __tsan::SyncClock*) -->
      <function-decl name='ReleaseImpl' filepath='../../.././libsanitizer/tsan/tsan_rtl_mutex.cc' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type '__tsan::SyncClock*' -->
        <parameter type-id='c7866b8a'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- void __tsan::ReleaseStoreImpl(__tsan::ThreadState*, __sanitizer::uptr, __tsan::SyncClock*) -->
      <function-decl name='ReleaseStoreImpl' filepath='../../.././libsanitizer/tsan/tsan_rtl_mutex.cc' line='327' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type '__tsan::SyncClock*' -->
        <parameter type-id='c7866b8a'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_rtl_report.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __sanitizer::InternalScopedBuffer<__tsan::MutexSet>* -->
    <pointer-type-def type-id='baf0d6f0' size-in-bits='64' id='ff8cd2d6'/>
    <!-- __sanitizer::InternalScopedBuffer<long unsigned int>* -->
    <pointer-type-def type-id='4b9e318d' size-in-bits='64' id='23a7264d'/>
    <!-- __tsan::MutexSet& -->
    <reference-type-def kind='lvalue' type-id='29ac5634' size-in-bits='64' id='86ec006e'/>
    <!-- __tsan::ReportDesc*& -->
    <reference-type-def kind='lvalue' type-id='558ea3b4' size-in-bits='64' id='418b7ed6'/>
    <!-- const __sanitizer::InternalScopedBuffer<__tsan::MutexSet> -->
    <qualified-type-def type-id='baf0d6f0' const='yes' id='62c8e9db'/>
    <!-- const __sanitizer::InternalScopedBuffer<__tsan::MutexSet>& -->
    <reference-type-def kind='lvalue' type-id='62c8e9db' size-in-bits='64' id='7f485947'/>
    <!-- const __sanitizer::InternalScopedBuffer<long unsigned int> -->
    <qualified-type-def type-id='4b9e318d' const='yes' id='e9d0efe4'/>
    <!-- const __sanitizer::InternalScopedBuffer<long unsigned int>& -->
    <reference-type-def kind='lvalue' type-id='e9d0efe4' size-in-bits='64' id='d5e96e66'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::InternalScopedBuffer<__tsan::MutexSet> -->
      <class-decl name='InternalScopedBuffer&lt;__tsan::MutexSet&gt;' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='67' column='1' id='baf0d6f0'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::MutexSet* __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::ptr_ -->
          <var-decl name='ptr_' type-id='82ebfa22' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::cnt_ -->
          <var-decl name='cnt_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='82' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::InternalScopedBuffer(__sanitizer::uptr) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__tsan::MutexSet>*' -->
            <parameter type-id='ff8cd2d6' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::~InternalScopedBuffer(int) -->
          <function-decl name='~InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__tsan::MutexSet>*' -->
            <parameter type-id='ff8cd2d6' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::InternalScopedBuffer(const __sanitizer::InternalScopedBuffer<__tsan::MutexSet>&) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__tsan::MutexSet>*' -->
            <parameter type-id='ff8cd2d6' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalScopedBuffer<__tsan::MutexSet>&' -->
            <parameter type-id='7f485947'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::MutexSet* __sanitizer::InternalScopedBuffer<__tsan::MutexSet>::data() -->
          <function-decl name='data' mangled-name='_ZN11__sanitizer20InternalScopedBufferIN6__tsan8MutexSetEE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<__tsan::MutexSet>*' -->
            <parameter type-id='ff8cd2d6' is-artificial='yes'/>
            <!-- __tsan::MutexSet* -->
            <return type-id='82ebfa22'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- class __sanitizer::InternalScopedBuffer<long unsigned int> -->
      <class-decl name='InternalScopedBuffer&lt;long unsigned int&gt;' size-in-bits='128' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='67' column='1' id='4b9e318d'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- unsigned long int* __sanitizer::InternalScopedBuffer<long unsigned int>::ptr_ -->
          <var-decl name='ptr_' type-id='1d2c2b85' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __sanitizer::uptr __sanitizer::InternalScopedBuffer<long unsigned int>::cnt_ -->
          <var-decl name='cnt_' type-id='c8e929d2' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='82' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::InternalScopedBuffer<long unsigned int>::InternalScopedBuffer(__sanitizer::uptr) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long unsigned int>*' -->
            <parameter type-id='23a7264d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::InternalScopedBuffer<long unsigned int>::~InternalScopedBuffer(int) -->
          <function-decl name='~InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long unsigned int>*' -->
            <parameter type-id='23a7264d' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::InternalScopedBuffer<long unsigned int>::InternalScopedBuffer(const __sanitizer::InternalScopedBuffer<long unsigned int>&) -->
          <function-decl name='InternalScopedBuffer' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long unsigned int>*' -->
            <parameter type-id='23a7264d' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::InternalScopedBuffer<long unsigned int>&' -->
            <parameter type-id='d5e96e66'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- unsigned long int& __sanitizer::InternalScopedBuffer<long unsigned int>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN11__sanitizer20InternalScopedBufferImEixEm' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long unsigned int>*' -->
            <parameter type-id='23a7264d' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- unsigned long int& -->
            <return type-id='212c31d1'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- unsigned long int* __sanitizer::InternalScopedBuffer<long unsigned int>::data() -->
          <function-decl name='data' mangled-name='_ZN11__sanitizer20InternalScopedBufferImE4dataEv' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_common.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::InternalScopedBuffer<long unsigned int>*' -->
            <parameter type-id='23a7264d' is-artificial='yes'/>
            <!-- unsigned long int* -->
            <return type-id='1d2c2b85'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- long long unsigned int __tsan::RoundDown<long long unsigned int>(long long unsigned int, __sanitizer::u64) -->
      <function-decl name='RoundDown&lt;long long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long unsigned int' -->
        <parameter type-id='3a47d82b'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- long long unsigned int -->
        <return type-id='3a47d82b'/>
      </function-decl>
      <!-- void __tsan::DestroyAndFree<__tsan::ReportDesc>(__tsan::ReportDesc*&) -->
      <function-decl name='DestroyAndFree&lt;__tsan::ReportDesc&gt;' filepath='../../.././libsanitizer/tsan/tsan_mman.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ReportDesc*&' -->
        <parameter type-id='418b7ed6'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
      <!-- bool __tsan::OnReport(const __tsan::ReportDesc*, bool) -->
      <function-decl name='OnReport' mangled-name='_ZN6__tsan8OnReportEPKNS_10ReportDescEb' filepath='../../.././libsanitizer/tsan/tsan_rtl_report.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_ZN6__tsan8OnReportEPKNS_10ReportDescEb'>
        <!-- parameter of type 'const __tsan::ReportDesc*' -->
        <parameter type-id='19182617'/>
        <!-- parameter of type 'bool' -->
        <parameter type-id='c894953d'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
      <!-- bool __tsan::FrameIsInternal(const __tsan::ReportStack*) -->
      <function-decl name='FrameIsInternal' filepath='../../.././libsanitizer/tsan/tsan_rtl_report.cc' line='550' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'const __tsan::ReportStack*' -->
        <parameter type-id='69d885b4'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __tsan::ThreadLeak& -->
    <reference-type-def kind='lvalue' type-id='431d7022' size-in-bits='64' id='1633d434'/>
    <!-- __tsan::ThreadLeak* -->
    <pointer-type-def type-id='431d7022' size-in-bits='64' id='0a33c150'/>
    <!-- __tsan::Vector<__tsan::ThreadLeak>* -->
    <pointer-type-def type-id='e9d74135' size-in-bits='64' id='baadf865'/>
    <!-- const __tsan::ThreadLeak -->
    <qualified-type-def type-id='431d7022' const='yes' id='77e4c973'/>
    <!-- const __tsan::ThreadLeak& -->
    <reference-type-def kind='lvalue' type-id='77e4c973' size-in-bits='64' id='1228f0cf'/>
    <!-- const __tsan::Vector<__tsan::ThreadLeak> -->
    <qualified-type-def type-id='e9d74135' const='yes' id='c8c8e9f4'/>
    <!-- const __tsan::Vector<__tsan::ThreadLeak>& -->
    <reference-type-def kind='lvalue' type-id='c8c8e9f4' size-in-bits='64' id='e6481596'/>
    <!-- const __tsan::Vector<__tsan::ThreadLeak>* -->
    <pointer-type-def type-id='c8c8e9f4' size-in-bits='64' id='f248287a'/>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- struct __tsan::ThreadLeak -->
      <class-decl name='ThreadLeak' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='140' column='1' id='431d7022'>
        <data-member access='public' layout-offset-in-bits='0'>
          <!-- __tsan::ThreadContext* __tsan::ThreadLeak::tctx -->
          <var-decl name='tctx' type-id='a1704f66' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='141' column='1'/>
        </data-member>
        <data-member access='public' layout-offset-in-bits='64'>
          <!-- int __tsan::ThreadLeak::count -->
          <var-decl name='count' type-id='95e97e5e' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_rtl_thread.cc' line='142' column='1'/>
        </data-member>
      </class-decl>
      <!-- class __tsan::Vector<__tsan::ThreadLeak> -->
      <class-decl name='Vector&lt;__tsan::ThreadLeak&gt;' size-in-bits='256' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='23' column='1' id='e9d74135'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- const __tsan::MBlockType __tsan::Vector<__tsan::ThreadLeak>::typ_ -->
          <var-decl name='typ_' type-id='40f6778c' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='80' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='64'>
          <!-- __tsan::ThreadLeak* __tsan::Vector<__tsan::ThreadLeak>::begin_ -->
          <var-decl name='begin_' type-id='0a33c150' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='81' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='128'>
          <!-- __tsan::ThreadLeak* __tsan::Vector<__tsan::ThreadLeak>::end_ -->
          <var-decl name='end_' type-id='0a33c150' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='82' column='1'/>
        </data-member>
        <data-member access='private' layout-offset-in-bits='192'>
          <!-- __tsan::ThreadLeak* __tsan::Vector<__tsan::ThreadLeak>::last_ -->
          <var-decl name='last_' type-id='0a33c150' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='83' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __tsan::Vector<__tsan::ThreadLeak>::Vector(__tsan::MBlockType) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='25' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- parameter of type 'enum __tsan::MBlockType' -->
            <parameter type-id='3e828db8'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __tsan::Vector<__tsan::ThreadLeak>::~Vector(int) -->
          <function-decl name='~Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='32' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ThreadLeak>::Vector(const __tsan::Vector<__tsan::ThreadLeak>&) -->
          <function-decl name='Vector' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- parameter of type 'const __tsan::Vector<__tsan::ThreadLeak>&' -->
            <parameter type-id='e6481596'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' const='yes'>
          <!-- __sanitizer::uptr __tsan::Vector<__tsan::ThreadLeak>::Size() -->
          <function-decl name='Size' mangled-name='_ZNK6__tsan6VectorINS_10ThreadLeakEE4SizeEv' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type 'const __tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='f248287a' is-artificial='yes'/>
            <!-- typedef __sanitizer::uptr -->
            <return type-id='c8e929d2'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ThreadLeak& __tsan::Vector<__tsan::ThreadLeak>::operator[](__sanitizer::uptr) -->
          <function-decl name='operator[]' mangled-name='_ZN6__tsan6VectorINS_10ThreadLeakEEixEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- __tsan::ThreadLeak& -->
            <return type-id='1633d434'/>
          </function-decl>
        </member-function>
        <member-function access='public'>
          <!-- __tsan::ThreadLeak* __tsan::Vector<__tsan::ThreadLeak>::PushBack(__tsan::ThreadLeak) -->
          <function-decl name='PushBack' mangled-name='_ZN6__tsan6VectorINS_10ThreadLeakEE8PushBackES1_' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- parameter of type 'struct __tsan::ThreadLeak' -->
            <parameter type-id='431d7022'/>
            <!-- __tsan::ThreadLeak* -->
            <return type-id='0a33c150'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __tsan::Vector<__tsan::ThreadLeak>::EnsureSize(__sanitizer::uptr) -->
          <function-decl name='EnsureSize' mangled-name='_ZN6__tsan6VectorINS_10ThreadLeakEE10EnsureSizeEm' filepath='../../.././libsanitizer/tsan/tsan_vector.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__tsan::Vector<__tsan::ThreadLeak>*' -->
            <parameter type-id='baadf865' is-artificial='yes'/>
            <!-- parameter of type 'typedef __sanitizer::uptr' -->
            <parameter type-id='c8e929d2'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
      <!-- long long unsigned int __tsan::RoundUp<long long unsigned int>(long long unsigned int, __sanitizer::u64) -->
      <function-decl name='RoundUp&lt;long long unsigned int&gt;' filepath='../../.././libsanitizer/tsan/tsan_defs.h' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'long long unsigned int' -->
        <parameter type-id='3a47d82b'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- long long unsigned int -->
        <return type-id='3a47d82b'/>
      </function-decl>
      <!-- void __tsan::StatSet(__tsan::ThreadState*, __tsan::StatType, __sanitizer::u64) -->
      <function-decl name='StatSet' filepath='../../.././libsanitizer/tsan/tsan_rtl.h' line='596' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type '__tsan::ThreadState*' -->
        <parameter type-id='8111c228'/>
        <!-- parameter of type 'enum __tsan::StatType' -->
        <parameter type-id='ac6e689a'/>
        <!-- parameter of type 'typedef __sanitizer::u64' -->
        <parameter type-id='ceed60aa'/>
        <!-- void -->
        <return type-id='48b5725f'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_stat.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_suppressions.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- __sanitizer::SuppressionType __tsan::conv(__tsan::ReportType) -->
      <function-decl name='conv' filepath='../../.././libsanitizer/tsan/tsan_suppressions.cc' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'enum __tsan::ReportType' -->
        <parameter type-id='9a187d02'/>
        <!-- enum __sanitizer::SuppressionType -->
        <return type-id='8f71ba54'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_symbolize.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- namespace __tsan -->
    <namespace-decl name='__tsan'>
      <!-- __tsan::ReportStack* __tsan::next -->
      <var-decl name='next' type-id='7db73ee5' mangled-name='_ZN6__tsan4nextE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='57' column='1'/>
      <!-- char* __tsan::module -->
      <var-decl name='module' type-id='26a90f95' mangled-name='_ZN6__tsan6moduleE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='58' column='1'/>
      <!-- __sanitizer::uptr __tsan::offset -->
      <var-decl name='offset' type-id='c8e929d2' mangled-name='_ZN6__tsan6offsetE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='59' column='1'/>
      <!-- __sanitizer::uptr __tsan::pc -->
      <var-decl name='pc' type-id='c8e929d2' mangled-name='_ZN6__tsan2pcE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='60' column='1'/>
      <!-- char* __tsan::func -->
      <var-decl name='func' type-id='26a90f95' mangled-name='_ZN6__tsan4funcE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='61' column='1'/>
      <!-- char* __tsan::file -->
      <var-decl name='file' type-id='26a90f95' mangled-name='_ZN6__tsan4fileE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='62' column='1'/>
      <!-- int __tsan::line -->
      <var-decl name='line' type-id='95e97e5e' mangled-name='_ZN6__tsan4lineE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='63' column='1'/>
      <!-- int __tsan::col -->
      <var-decl name='col' type-id='95e97e5e' mangled-name='_ZN6__tsan3colE' visibility='default' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='64' column='1'/>
      <!-- bool __tsan::__tsan_symbolize_external(__sanitizer::uptr, char*, __sanitizer::uptr, char*, __sanitizer::uptr, int*, int*) -->
      <function-decl name='__tsan_symbolize_external' filepath='../../.././libsanitizer/tsan/tsan_symbolize.cc' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'char*' -->
        <parameter type-id='26a90f95'/>
        <!-- parameter of type 'typedef __sanitizer::uptr' -->
        <parameter type-id='c8e929d2'/>
        <!-- parameter of type 'int*' -->
        <parameter type-id='7292109c'/>
        <!-- parameter of type 'int*' -->
        <parameter type-id='7292109c'/>
        <!-- bool -->
        <return type-id='c894953d'/>
      </function-decl>
    </namespace-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_symbolize_addr2line_linux.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- long int strtol(const char*, char**, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='80f4b756'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='9b23c9ad'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- long int -->
      <return type-id='bd54fe1a'/>
    </function-decl>
    <!-- void _exit(int) -->
    <function-decl name='_exit' filepath='/usr/include/unistd.h' line='600' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='95e97e5e'/>
      <!-- void -->
      <return type-id='48b5725f'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../../.././libsanitizer/tsan/tsan_sync.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-ImG4Cf/gcc-4.9.2/x86_64-unknown-linux-gnu/libsanitizer/tsan' language='LANG_C_plus_plus'>
    <!-- __sanitizer::GenericScopedReadLock<__tsan::Mutex>* -->
    <pointer-type-def type-id='56b4fbf3' size-in-bits='64' id='7c8d5973'/>
    <!-- const __sanitizer::GenericScopedReadLock<__tsan::Mutex> -->
    <qualified-type-def type-id='56b4fbf3' const='yes' id='04b3439c'/>
    <!-- const __sanitizer::GenericScopedReadLock<__tsan::Mutex>& -->
    <reference-type-def kind='lvalue' type-id='04b3439c' size-in-bits='64' id='20339dce'/>
    <!-- namespace __sanitizer -->
    <namespace-decl name='__sanitizer'>
      <!-- class __sanitizer::GenericScopedReadLock<__tsan::Mutex> -->
      <class-decl name='GenericScopedReadLock&lt;__tsan::Mutex&gt;' size-in-bits='64' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='104' column='1' id='56b4fbf3'>
        <data-member access='private' layout-offset-in-bits='0'>
          <!-- __tsan::Mutex* __sanitizer::GenericScopedReadLock<__tsan::Mutex>::mu_ -->
          <var-decl name='mu_' type-id='ef6ac0da' visibility='default' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='116' column='1'/>
        </data-member>
        <member-function access='public'>
          <!-- void __sanitizer::GenericScopedReadLock<__tsan::Mutex>::GenericScopedReadLock(__tsan::Mutex*) -->
          <function-decl name='GenericScopedReadLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedReadLock<__tsan::Mutex>*' -->
            <parameter type-id='7c8d5973' is-artificial='yes'/>
            <!-- parameter of type '__tsan::Mutex*' -->
            <parameter type-id='ef6ac0da'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='public' destructor='yes'>
          <!-- __sanitizer::GenericScopedReadLock<__tsan::Mutex>::~GenericScopedReadLock(int) -->
          <function-decl name='~GenericScopedReadLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedReadLock<__tsan::Mutex>*' -->
            <parameter type-id='7c8d5973' is-artificial='yes'/>
            <!-- artificial parameter of type 'int' -->
            <parameter type-id='95e97e5e' is-artificial='yes'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
        <member-function access='private'>
          <!-- void __sanitizer::GenericScopedReadLock<__tsan::Mutex>::GenericScopedReadLock(const __sanitizer::GenericScopedReadLock<__tsan::Mutex>&) -->
          <function-decl name='GenericScopedReadLock' filepath='../../.././libsanitizer/sanitizer_common/sanitizer_mutex.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
            <!-- implicit parameter of type '__sanitizer::GenericScopedReadLock<__tsan::Mutex>*' -->
            <parameter type-id='7c8d5973' is-artificial='yes'/>
            <!-- parameter of type 'const __sanitizer::GenericScopedReadLock<__tsan::Mutex>&' -->
            <parameter type-id='20339dce'/>
            <!-- void -->
            <return type-id='48b5725f'/>
          </function-decl>
        </member-function>
      </class-decl>
    </namespace-decl>
  </abi-instr>
</abi-corpus>
